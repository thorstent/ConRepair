digraph Counterexample {
	234 -> 259 [color = white, style = solid]
	157 -> 158 [color = white, style = solid]
	99 -> 100 [color = white, style = solid]
	256 -> 283 [color = white, style = solid]
	214 -> 216 [color = black, style = solid, constraint = false]
	302 -> 326 [color = white, style = solid]
	171 -> 173 [color = black, style = dotted]
	110 -> 114 [color = white, style = solid]
	273 -> 285 [color = white, style = solid]
	146 -> 151 [color = white, style = solid]
	263 -> 264 [color = white, style = solid]
	177 -> 179 [color = black, style = dotted]
	124 -> 142 [color = white, style = solid]
	36 -> 40 [color = white, style = solid]
	216 -> 217 [color = white, style = solid]
	334 -> 338 [color = white, style = solid]
	188 -> 189 [color = white, style = solid]
	281 -> 288 [color = white, style = solid]
	238 -> 249 [color = white, style = solid]
	217 -> 235 [color = white, style = solid]
	152 -> 202 [color = white, style = solid]
	314 -> 320 [color = white, style = solid]
	207 -> 214 [color = white, style = solid]
	152 -> 162 [color = black, style = solid, constraint = false]
	65 -> 68 [color = white, style = solid]
	40 -> 50 [color = white, style = solid]
	190 -> 193 [color = white, style = solid]
	143 -> 145 [color = black, style = solid, constraint = false]
	226 -> 231 [color = white, style = solid]
	173 -> 174 [color = black, style = dotted]
	204 -> 208 [color = black, style = dotted]
	330 -> 334 [color = white, style = solid]
	106 -> 110 [color = white, style = solid]
	79 -> 81 [color = white, style = solid]
	249 -> 251 [color = white, style = solid]
	267 -> 269 [color = white, style = solid]
	170 -> 171 [color = black, style = dotted]
	135 -> 181 [color = white, style = solid]
	81 -> 84 [color = white, style = solid]
	118 -> 119 [color = white, style = solid]
	115 -> 118 [color = white, style = solid]
	100 -> 101 [color = white, style = solid]
	153 -> 157 [color = white, style = solid]
	119 -> 256 [color = black, style = solid, constraint = false]
	52 -> 57 [color = white, style = solid]
	42 -> 45 [color = white, style = solid]
	171 -> 181 [color = black, style = solid, constraint = false]
	328 -> 330 [color = white, style = solid]
	176 -> 177 [color = black, style = dotted]
	213 -> 273 [color = black, style = solid, constraint = false]
	269 -> 273 [color = white, style = solid]
	138 -> 145 [color = white, style = solid]
	179 -> 195 [color = black, style = dotted]
	86 -> 88 [color = white, style = solid]
	198 -> 205 [color = white, style = solid]
	199 -> 225 [color = white, style = solid]
	52 -> 255 [color = black, style = solid, constraint = false]
	288 -> 297 [color = white, style = solid]
	89 -> 145 [color = black, style = solid, constraint = false]
	57 -> 58 [color = white, style = solid]
	84 -> 90 [color = white, style = solid]
	64 -> 65 [color = white, style = solid]
	71 -> 80 [color = white, style = solid]
	75 -> 78 [color = white, style = solid]
	255 -> 257 [color = black, style = solid, constraint = false]
	51 -> 75 [color = white, style = solid]
	292 -> 314 [color = white, style = solid]
	252 -> 257 [color = white, style = solid]
	145 -> 146 [color = white, style = solid]
	213 -> 152 [color = red, style = solid, constraint = false]
	305 -> 307 [color = white, style = solid]
	203 -> 204 [color = black, style = dotted]
	300 -> 303 [color = white, style = solid]
	189 -> 219 [color = black, style = solid, constraint = false]
	162 -> 165 [color = black, style = dotted]
	29 -> 32 [color = white, style = solid]
	264 -> 266 [color = white, style = solid]
	142 -> 152 [color = white, style = solid]
	165 -> 170 [color = black, style = dotted]
	50 -> 52 [color = black, style = solid, constraint = false]
	58 -> 63 [color = white, style = solid]
	158 -> 160 [color = white, style = solid]
	278 -> 281 [color = white, style = solid]
	78 -> 79 [color = white, style = solid]
	80 -> 85 [color = white, style = solid]
	151 -> 153 [color = white, style = solid]
	208 -> 213 [color = black, style = dotted]
	199 -> 202 [color = black, style = solid, constraint = false]
	202 -> 203 [color = black, style = dotted]
	110 -> 224 [color = black, style = solid, constraint = false]
	89 -> 93 [color = white, style = solid]
	208 -> 266 [color = black, style = solid, constraint = false]
	45 -> 46 [color = white, style = solid]
	134 -> 135 [color = white, style = solid]
	207 -> 231 [color = black, style = solid, constraint = false]
	326 -> 328 [color = white, style = solid]
	63 -> 64 [color = white, style = solid]
	259 -> 260 [color = white, style = solid]
	50 -> 51 [color = white, style = solid]
	231 -> 234 [color = white, style = solid]
	32 -> 36 [color = white, style = solid]
	160 -> 162 [color = white, style = solid]
	297 -> 298 [color = white, style = solid]
	285 -> 302 [color = white, style = solid]
	114 -> 115 [color = white, style = solid]
	28 -> 29 [color = white, style = solid]
	323 -> 327 [color = white, style = solid]
	283 -> 290 [color = white, style = solid]
	291 -> 292 [color = white, style = solid]
	85 -> 86 [color = white, style = solid]
	257 -> 276 [color = white, style = solid]
	219 -> 231 [color = black, style = solid, constraint = false]
	174 -> 176 [color = black, style = dotted]
	266 -> 267 [color = white, style = solid]
	93 -> 94 [color = white, style = solid]
	101 -> 255 [color = white, style = solid]
	205 -> 207 [color = white, style = solid]
	235 -> 238 [color = white, style = solid]
	143 -> 219 [color = white, style = solid]
	290 -> 291 [color = white, style = solid]
	320 -> 333 [color = white, style = solid]
	204 -> 225 [color = black, style = solid, constraint = false]
	103 -> 106 [color = white, style = solid]
	137 -> 138 [color = white, style = solid]
	193 -> 198 [color = white, style = solid]
	46 -> 52 [color = white, style = solid]
	195 -> 199 [color = black, style = dotted]
	224 -> 288 [color = black, style = solid, constraint = false]
	97 -> 98 [color = white, style = solid]
	307 -> 323 [color = white, style = solid]
	304 -> 305 [color = white, style = solid]
	189 -> 190 [color = white, style = solid]
	276 -> 278 [color = white, style = solid]
	298 -> 300 [color = white, style = solid]
	88 -> 89 [color = white, style = solid]
	260 -> 263 [color = white, style = solid]
	102 -> 103 [color = white, style = solid]
	251 -> 252 [color = white, style = solid]
	98 -> 102 [color = white, style = solid]
	94 -> 97 [color = white, style = solid]
	181 -> 188 [color = white, style = solid]
	179 -> 189 [color = black, style = solid, constraint = false]
	255 -> 256 [color = white, style = solid]
	225 -> 226 [color = white, style = solid]
	68 -> 71 [color = white, style = solid]
	213 -> 216 [color = white, style = solid]
	145 -> 152 [color = black, style = solid, constraint = false]
	224 -> 304 [color = white, style = solid]
	231 -> 235 [color = black, style = solid, constraint = false]
	303 -> 304 [color = black, style = solid, constraint = false]
	119 -> 124 [color = white, style = solid]
	90 -> 99 [color = white, style = solid]
	subgraph cluster7 {
		label = dev_thread
		color = blue
		143  [label = "317: IntrStatus = 1;"]
		219  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		323  [label = "342: reset_task_ready = 0;"]
		224  [label = "340b: assume(!(reset_task_ready == 0));"]
		304  [label = "565a: assume(rtnl_lock == 0);"]
		305  [label = "565b: rtnl_lock = 1;"]
		307  [label = "568b: assume(!((!netif_running) == 0));"]
		327  [label = "340a: assume(reset_task_ready == 0);"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		50  [label = "388: registered = 1;"]
		256  [label = "399: assume(!(netif_running != 0));"]
		51  [label = "389: ret2 = 0;"]
		291  [label = "641: sysfs_lock = 5;"]
		100  [label = "244: dev_lock = 5;"]
		255  [label = "398: registered = 0;"]
		32  [label = "452: sysfs_registered = 1;"]
		28  [label = "629a: assume(sysfs_lock == 0);"]
		292  [label = "642: want_sysfs = 0;"]
		101  [label = "245: want_dev = 0;"]
		333  [label = "250a: dev_lock = 0;"]
		75  [label = "476: rc1 = ret2;"]
		320  [label = "647a: sysfs_lock = 0;"]
		36  [label = "631a: sysfs_lock = 0;"]
		99  [label = "243: assume(dev_lock == 0);"]
		290  [label = "640: assume(sysfs_lock == 0);"]
		78  [label = "479b: assume(!(rc1 < 0));"]
		283  [label = "638: want_sysfs = 5;"]
		29  [label = "629b: sysfs_lock = 1;"]
		84  [label = "238a: assume(probe1 == 0);"]
		314  [label = "457: sysfs_registered = 0;"]
		40  [label = "477: hw_start = drv_hw_start;"]
		81  [label = "237: probe1 = ret4;"]
		90  [label = "241: want_dev = 5;"]
		79  [label = "482: ret4 = 0;"]
	}
	subgraph cluster4 {
		label = napi_thread
		color = blue
		193  [label = "547a: assume(work_done < 100);"]
		135  [label = "328b: napi_sem = 1;"]
		198  [label = "440: napi_scheduled = 0;"]
		134  [label = "328a: assume(napi_sem == 0);"]
		207  [label = "550: IntrMask = 255;"]
		205  [label = "549: intr_mask = 255;"]
		214  [label = "332a: napi_sem = 0;"]
		188  [label = "622: nondet3 = nondet_int();"]
		189  [label = "623: IntrStatus = 0;"]
		190  [label = "545: work_done = nondet3;"]
		181  [label = "329b: assume(!(napi_scheduled == 0));"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		202  [label = "446a: assume(irq_sem == 0);"]
		93  [label = "503: ret5 = 0;"]
		217  [label = "427b: napi_sem = 1;"]
		71  [label = "421: napi_enabled = 1;"]
		106  [label = "261a: assume(open1 == 0);"]
		45  [label = "277a: assume(rtnl_lock == 0);"]
		204  [label = "447a: irq_sem = 0;"]
		118  [label = "291a: assume(netif_running != 0);"]
		288  [label = "560: reset_task_ready = 1;"]
		52  [label = "278a: assume(registered != 0);"]
		208  [label = "615: dev_on = 0;"]
		86  [label = "604a: val = 1;"]
		58  [label = "494: IntrMask = 0;"]
		276  [label = "284a: rtnl_lock = 0;"]
		235  [label = "416: irq_enabled = 0;"]
		94  [label = "279: ret1 = ret5;"]
		238  [label = "295a: rtnl_lock = 0;"]
		115  [label = "290b: rtnl_lock = 1;"]
		97  [label = "280a: assume(ret1 == 0);"]
		110  [label = "560: reset_task_ready = 1;"]
		213  [label = "426: napi_enabled = 0;"]
		63  [label = "406: irq_enabled = 1;"]
		68  [label = "498b: assume(!(rc2 < 0));"]
		278  [label = "260: open1 = ret1;"]
		124  [label = "611a: val = 0;"]
		89  [label = "592: IntrMask = val;"]
		249  [label = "275: ret1 = 0;"]
		65  [label = "496: rc2 = ret3;"]
		64  [label = "407: ret3 = 0;"]
		80  [label = "603: dev_on = 1;"]
		251  [label = "277a: assume(rtnl_lock == 0);"]
		98  [label = "281: netif_running = 1;"]
		297  [label = "290a: assume(rtnl_lock == 0);"]
		88  [label = "591: assert(dev_on != 0);"]
		281  [label = "261a: assume(open1 == 0);"]
		42  [label = "275: ret1 = 0;"]
		216  [label = "427a: assume(napi_sem == 0);"]
		303  [label = "295a: rtnl_lock = 0;"]
		103  [label = "260: open1 = ret1;"]
		85  [label = "605: intr_mask = 1;"]
		298  [label = "290b: rtnl_lock = 1;"]
		142  [label = "591: assert(dev_on != 0);"]
		119  [label = "292: netif_running = 0;"]
		300  [label = "291b: assume(!(netif_running != 0));"]
		252  [label = "277b: rtnl_lock = 1;"]
		46  [label = "277b: rtnl_lock = 1;"]
		114  [label = "290a: assume(rtnl_lock == 0);"]
		152  [label = "592: IntrMask = val;"]
		102  [label = "284a: rtnl_lock = 0;"]
		203  [label = "446b: irq_sem = 1;"]
		257  [label = "278b: assume(!(registered != 0));"]
		57  [label = "492a: assert(hw_start != 0);"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		199  [label = "310a: irq_sem = 0;"]
		302  [label = "534a: val = status1;"]
		160  [label = "591: assert(dev_on != 0);"]
		173  [label = "532: handled2 = 1;"]
		171  [label = "434: napi_scheduled = 1;"]
		267  [label = "592: IntrMask = val;"]
		146  [label = "307: assert(intr_mask != 0);"]
		266  [label = "591: assert(dev_on != 0);", color = red]
		328  [label = "598: IntrStatus = IntrStatus & (~val);"]
		151  [label = "524: handled2 = 0;"]
		137  [label = "305a: assume(irq_sem == 0);"]
		158  [label = "529a: val = 0;"]
		269  [label = "530: intr_mask = 0;"]
		263  [label = "528a: assume(intr_mask != 0);"]
		165  [label = "530: intr_mask = 0;"]
		138  [label = "305b: irq_sem = 1;"]
		260  [label = "526: status1 = IntrStatus;"]
		259  [label = "524: handled2 = 0;"]
		326  [label = "597: assert(dev_on != 0);"]
		177  [label = "598: IntrStatus = IntrStatus & (~val);"]
		285  [label = "532: handled2 = 1;"]
		179  [label = "535: status1 = IntrStatus;"]
		176  [label = "597: assert(dev_on != 0);"]
		145  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		334  [label = "537: assume(!status1);"]
		153  [label = "526: status1 = IntrStatus;"]
		234  [label = "307: assert(intr_mask != 0);"]
		264  [label = "529a: val = 0;"]
		273  [label = "433b: assume(!(napi_enabled != 0));"]
		225  [label = "305a: assume(irq_sem == 0);"]
		226  [label = "305b: irq_sem = 1;"]
		330  [label = "535: status1 = IntrStatus;"]
		157  [label = "528a: assume(intr_mask != 0);"]
		174  [label = "534a: val = status1;"]
		338  [label = "310a: irq_sem = 0;"]
		231  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		195  [label = "537: assume(!status1);"]
		162  [label = "592: IntrMask = val;"]
		170  [label = "433a: assume(napi_enabled != 0);"]
	}
}
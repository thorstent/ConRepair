digraph Counterexample {
	267 -> 268 [color = white, style = solid]
	99 -> 100 [color = white, style = solid]
	170 -> 196 [color = black, style = solid, constraint = false]
	261 -> 265 [color = white, style = solid]
	274 -> 281 [color = white, style = solid]
	136 -> 138 [color = white, style = solid]
	191 -> 196 [color = white, style = solid]
	59 -> 61 [color = black, style = solid, constraint = false]
	205 -> 206 [color = white, style = solid]
	60 -> 65 [color = white, style = solid]
	46 -> 48 [color = white, style = solid]
	154 -> 155 [color = white, style = solid]
	42 -> 46 [color = white, style = solid]
	266 -> 273 [color = white, style = solid]
	185 -> 274 [color = black, style = solid, constraint = false]
	265 -> 266 [color = white, style = solid]
	133 -> 134 [color = white, style = solid]
	108 -> 274 [color = white, style = solid]
	95 -> 96 [color = white, style = solid]
	150 -> 153 [color = white, style = solid]
	55 -> 61 [color = white, style = solid]
	112 -> 113 [color = white, style = solid]
	170 -> 173 [color = black, style = solid, constraint = false]
	68 -> 69 [color = white, style = solid]
	146 -> 147 [color = white, style = solid]
	108 -> 185 [color = black, style = solid, constraint = false]
	59 -> 60 [color = white, style = solid]
	113 -> 114 [color = white, style = solid]
	79 -> 82 [color = white, style = solid]
	65 -> 68 [color = white, style = solid]
	261 -> 196 [color = red, style = solid, constraint = false]
	200 -> 205 [color = white, style = solid]
	182 -> 187 [color = white, style = solid]
	173 -> 206 [color = black, style = solid, constraint = false]
	161 -> 162 [color = white, style = solid]
	100 -> 101 [color = white, style = solid]
	234 -> 261 [color = black, style = solid, constraint = false]
	220 -> 227 [color = white, style = solid]
	249 -> 251 [color = black, style = solid, constraint = false]
	69 -> 79 [color = white, style = solid]
	271 -> 275 [color = white, style = solid]
	260 -> 262 [color = white, style = solid]
	177 -> 178 [color = white, style = solid]
	106 -> 121 [color = white, style = solid]
	82 -> 111 [color = white, style = solid]
	93 -> 170 [color = white, style = solid]
	268 -> 271 [color = white, style = solid]
	121 -> 123 [color = white, style = solid]
	85 -> 87 [color = white, style = solid]
	101 -> 102 [color = white, style = solid]
	179 -> 182 [color = white, style = solid]
	166 -> 185 [color = white, style = solid]
	277 -> 278 [color = white, style = solid]
	149 -> 150 [color = white, style = solid]
	240 -> 251 [color = white, style = solid]
	208 -> 210 [color = white, style = solid]
	185 -> 191 [color = white, style = solid]
	292 -> 293 [color = white, style = solid]
	145 -> 146 [color = white, style = solid]
	246 -> 247 [color = white, style = solid]
	141 -> 145 [color = white, style = solid]
	88 -> 95 [color = white, style = solid]
	293 -> 296 [color = white, style = solid]
	235 -> 237 [color = white, style = solid]
	256 -> 260 [color = white, style = solid]
	210 -> 214 [color = white, style = solid]
	206 -> 208 [color = white, style = solid]
	87 -> 88 [color = white, style = solid]
	214 -> 217 [color = white, style = solid]
	230 -> 234 [color = black, style = dotted]
	273 -> 277 [color = white, style = solid]
	213 -> 224 [color = black, style = dotted]
	224 -> 245 [color = white, style = solid]
	111 -> 112 [color = white, style = solid]
	224 -> 228 [color = black, style = solid, constraint = false]
	227 -> 249 [color = black, style = solid, constraint = false]
	96 -> 99 [color = white, style = solid]
	38 -> 39 [color = white, style = solid]
	252 -> 256 [color = white, style = solid]
	160 -> 161 [color = white, style = solid]
	114 -> 176 [color = white, style = solid]
	159 -> 160 [color = white, style = solid]
	150 -> 170 [color = black, style = solid, constraint = false]
	178 -> 179 [color = white, style = solid]
	278 -> 279 [color = white, style = solid]
	123 -> 292 [color = black, style = solid, constraint = false]
	279 -> 281 [color = black, style = solid, constraint = false]
	115 -> 173 [color = white, style = solid]
	123 -> 132 [color = white, style = solid]
	247 -> 249 [color = white, style = solid]
	90 -> 93 [color = white, style = solid]
	162 -> 163 [color = white, style = solid]
	147 -> 149 [color = white, style = solid]
	163 -> 166 [color = white, style = solid]
	249 -> 261 [color = white, style = solid]
	153 -> 154 [color = white, style = solid]
	211 -> 213 [color = black, style = dotted]
	83 -> 85 [color = white, style = solid]
	158 -> 159 [color = white, style = solid]
	228 -> 230 [color = black, style = dotted]
	282 -> 285 [color = white, style = solid]
	273 -> 293 [color = black, style = solid, constraint = false]
	103 -> 106 [color = white, style = solid]
	262 -> 267 [color = white, style = solid]
	132 -> 133 [color = white, style = solid]
	217 -> 220 [color = white, style = solid]
	176 -> 177 [color = white, style = solid]
	89 -> 90 [color = white, style = solid]
	134 -> 136 [color = white, style = solid]
	187 -> 292 [color = white, style = solid]
	138 -> 141 [color = white, style = solid]
	237 -> 238 [color = white, style = solid]
	39 -> 42 [color = white, style = solid]
	281 -> 282 [color = white, style = solid]
	238 -> 240 [color = white, style = solid]
	115 -> 170 [color = black, style = solid, constraint = false]
	196 -> 211 [color = black, style = dotted]
	234 -> 235 [color = white, style = solid]
	102 -> 103 [color = white, style = solid]
	155 -> 158 [color = white, style = solid]
	170 -> 200 [color = white, style = solid]
	251 -> 252 [color = white, style = solid]
	48 -> 59 [color = white, style = solid]
	285 -> 299 [color = white, style = solid]
	245 -> 246 [color = white, style = solid]
	227 -> 228 [color = white, style = solid]
	61 -> 78 [color = white, style = solid]
	78 -> 83 [color = white, style = solid]
	subgraph cluster7 {
		label = dev_thread
		color = blue
		173  [label = "317: IntrStatus = 1;"]
		115  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		275  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		230  [label = "530: intr_mask = 0;"]
		262  [label = "537: assume(!status1);"]
		170  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		214  [label = "598: IntrStatus = IntrStatus & (~val);"]
		237  [label = "532: handled2 = 1;"]
		210  [label = "597: assert(dev_on != 0);"]
		89  [label = "305a: assume(irq_sem == 0);"]
		205  [label = "524: handled2 = 0;"]
		240  [label = "534a: val = status1;"]
		234  [label = "433a: assume(napi_enabled != 0);"]
		260  [label = "535: status1 = IntrStatus;"]
		268  [label = "305b: irq_sem = 1;"]
		271  [label = "310a: irq_sem = 0;"]
		252  [label = "598: IntrStatus = IntrStatus & (~val);"]
		267  [label = "305a: assume(irq_sem == 0);"]
		220  [label = "529a: val = 0;"]
		235  [label = "434: napi_scheduled = 1;"]
		217  [label = "528a: assume(intr_mask != 0);"]
		251  [label = "597: assert(dev_on != 0);", color = red]
		93  [label = "310a: irq_sem = 0;"]
		238  [label = "535: status1 = IntrStatus;"]
		90  [label = "305b: irq_sem = 1;"]
		256  [label = "528b: assume(!(intr_mask != 0));"]
		227  [label = "591: assert(dev_on != 0);"]
		208  [label = "534a: val = status1;"]
		206  [label = "526: status1 = IntrStatus;"]
		200  [label = "307: assert(intr_mask != 0);"]
		228  [label = "592: IntrMask = val;"]
	}
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		285  [label = "568b: assume(!((!netif_running) == 0));"]
		299  [label = "342: reset_task_ready = 0;"]
		282  [label = "565b: rtnl_lock = 1;"]
		108  [label = "340a: assume(reset_task_ready == 0);"]
		281  [label = "565a: assume(rtnl_lock == 0);"]
		274  [label = "340b: assume(!(reset_task_ready == 0));"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		111  [label = "241: want_dev = 5;"]
		38  [label = "629a: assume(sysfs_lock == 0);"]
		176  [label = "638: want_sysfs = 5;"]
		179  [label = "642: want_sysfs = 0;"]
		69  [label = "482: ret4 = 0;"]
		113  [label = "244: dev_lock = 5;"]
		187  [label = "647a: sysfs_lock = 0;"]
		82  [label = "238a: assume(probe1 == 0);"]
		65  [label = "476: rc1 = ret2;"]
		178  [label = "641: sysfs_lock = 5;"]
		112  [label = "243: assume(dev_lock == 0);"]
		39  [label = "629b: sysfs_lock = 1;"]
		68  [label = "479b: assume(!(rc1 < 0));"]
		292  [label = "398: registered = 0;"]
		182  [label = "457: sysfs_registered = 0;"]
		60  [label = "389: ret2 = 0;"]
		46  [label = "631a: sysfs_lock = 0;"]
		48  [label = "477: hw_start = drv_hw_start;"]
		177  [label = "640: assume(sysfs_lock == 0);"]
		79  [label = "237: probe1 = ret4;"]
		59  [label = "388: registered = 1;"]
		114  [label = "245: want_dev = 0;"]
		42  [label = "452: sysfs_registered = 1;"]
		293  [label = "399: assume(!(netif_running != 0));"]
		296  [label = "250a: dev_lock = 0;"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		99  [label = "280b: assume(!(ret1 == 0));"]
		159  [label = "281: netif_running = 1;"]
		261  [label = "426: napi_enabled = 0;"]
		247  [label = "447a: irq_sem = 0;"]
		166  [label = "261a: assume(open1 == 0);"]
		150  [label = "592: IntrMask = val;"]
		96  [label = "279: ret1 = ret5;"]
		106  [label = "261b: assume(!(open1 == 0));"]
		273  [label = "292: netif_running = 0;"]
		83  [label = "496: rc2 = ret3;"]
		163  [label = "260: open1 = ret1;"]
		154  [label = "492a: assert(hw_start != 0);"]
		78  [label = "409: ret3 = -1;"]
		146  [label = "605: intr_mask = 1;"]
		88  [label = "499: ret5 = rc2;"]
		185  [label = "560: reset_task_ready = 1;"]
		191  [label = "291a: assume(netif_running != 0);"]
		246  [label = "446b: irq_sem = 1;"]
		155  [label = "279: ret1 = ret5;"]
		279  [label = "295a: rtnl_lock = 0;"]
		85  [label = "494: IntrMask = 0;"]
		61  [label = "278a: assume(registered != 0);"]
		213  [label = "591: assert(dev_on != 0);"]
		278  [label = "290b: rtnl_lock = 1;"]
		145  [label = "603: dev_on = 1;"]
		136  [label = "494: IntrMask = 0;"]
		149  [label = "591: assert(dev_on != 0);"]
		87  [label = "498a: assume(rc2 < 0);"]
		123  [label = "278a: assume(registered != 0);"]
		158  [label = "280a: assume(ret1 == 0);"]
		196  [label = "416: irq_enabled = 0;"]
		277  [label = "290a: assume(rtnl_lock == 0);"]
		95  [label = "492a: assert(hw_start != 0);"]
		138  [label = "498b: assume(!(rc2 < 0));"]
		134  [label = "496: rc2 = ret3;"]
		211  [label = "611a: val = 0;"]
		55  [label = "275: ret1 = 0;"]
		162  [label = "284a: rtnl_lock = 0;"]
		249  [label = "615: dev_on = 0;"]
		141  [label = "421: napi_enabled = 1;"]
		103  [label = "260: open1 = ret1;"]
		100  [label = "277a: assume(rtnl_lock == 0);"]
		245  [label = "446a: assume(irq_sem == 0);"]
		224  [label = "592: IntrMask = val;"]
		121  [label = "275: ret1 = 0;"]
		132  [label = "406: irq_enabled = 1;"]
		101  [label = "277b: rtnl_lock = 1;"]
		133  [label = "407: ret3 = 0;"]
		153  [label = "503: ret5 = 0;"]
		266  [label = "427b: napi_sem = 1;"]
		161  [label = "277b: rtnl_lock = 1;"]
		102  [label = "284a: rtnl_lock = 0;"]
		147  [label = "604a: val = 1;"]
		265  [label = "427a: assume(napi_sem == 0);"]
		160  [label = "277a: assume(rtnl_lock == 0);"]
	}
}
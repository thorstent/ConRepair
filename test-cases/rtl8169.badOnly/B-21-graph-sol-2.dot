digraph Counterexample {
	215 -> 216 [color = black, style = dotted]
	148 -> 244 [color = black, style = solid, constraint = false]
	273 -> 276 [color = white, style = solid]
	209 -> 215 [color = black, style = dotted]
	67 -> 83 [color = white, style = solid]
	114 -> 120 [color = white, style = solid]
	65 -> 67 [color = white, style = solid]
	133 -> 134 [color = white, style = solid]
	153 -> 155 [color = white, style = solid]
	120 -> 121 [color = white, style = solid]
	197 -> 200 [color = white, style = solid]
	240 -> 267 [color = white, style = solid]
	83 -> 85 [color = black, style = solid, constraint = false]
	233 -> 234 [color = white, style = solid]
	228 -> 250 [color = black, style = dotted]
	30 -> 31 [color = white, style = solid]
	177 -> 181 [color = black, style = dotted]
	165 -> 177 [color = black, style = solid, constraint = false]
	284 -> 285 [color = white, style = solid]
	285 -> 287 [color = white, style = solid]
	224 -> 233 [color = white, style = solid]
	113 -> 114 [color = white, style = solid]
	137 -> 139 [color = white, style = solid]
	217 -> 219 [color = black, style = dotted]
	192 -> 196 [color = black, style = solid, constraint = false]
	189 -> 190 [color = black, style = dotted]
	184 -> 188 [color = black, style = dotted]
	220 -> 224 [color = white, style = solid]
	152 -> 153 [color = white, style = solid]
	161 -> 162 [color = white, style = solid]
	228 -> 245 [color = black, style = solid, constraint = false]
	141 -> 144 [color = white, style = solid]
	91 -> 101 [color = white, style = solid]
	166 -> 171 [color = white, style = solid]
	35 -> 68 [color = black, style = solid, constraint = false]
	219 -> 220 [color = black, style = solid, constraint = false]
	29 -> 30 [color = white, style = solid]
	106 -> 115 [color = white, style = solid]
	101 -> 102 [color = white, style = solid]
	51 -> 52 [color = white, style = solid]
	287 -> 299 [color = white, style = solid]
	200 -> 241 [color = white, style = solid]
	244 -> 284 [color = white, style = solid]
	75 -> 78 [color = white, style = solid]
	61 -> 65 [color = white, style = solid]
	140 -> 141 [color = white, style = solid]
	134 -> 137 [color = white, style = solid]
	35 -> 91 [color = black, style = solid, constraint = false]
	206 -> 209 [color = black, style = dotted]
	257 -> 261 [color = white, style = solid]
	139 -> 140 [color = white, style = solid]
	90 -> 91 [color = white, style = solid]
	219 -> 226 [color = black, style = dotted]
	271 -> 272 [color = black, style = dotted]
	265 -> 296 [color = white, style = solid]
	263 -> 265 [color = white, style = solid]
	165 -> 166 [color = white, style = solid]
	268 -> 271 [color = black, style = dotted]
	272 -> 130 [color = red, style = solid, constraint = false]
	31 -> 35 [color = white, style = solid]
	38 -> 40 [color = white, style = solid]
	188 -> 189 [color = black, style = dotted]
	84 -> 94 [color = white, style = solid]
	235 -> 236 [color = white, style = solid]
	172 -> 174 [color = white, style = solid]
	79 -> 85 [color = white, style = solid]
	78 -> 79 [color = white, style = solid]
	37 -> 38 [color = white, style = solid]
	190 -> 192 [color = black, style = dotted]
	226 -> 228 [color = black, style = dotted]
	267 -> 289 [color = white, style = solid]
	245 -> 257 [color = white, style = solid]
	144 -> 148 [color = white, style = solid]
	205 -> 206 [color = black, style = dotted]
	119 -> 126 [color = white, style = solid]
	130 -> 133 [color = white, style = solid]
	122 -> 220 [color = white, style = solid]
	216 -> 217 [color = black, style = dotted]
	236 -> 240 [color = white, style = solid]
	156 -> 177 [color = white, style = solid]
	162 -> 163 [color = white, style = solid]
	83 -> 84 [color = white, style = solid]
	272 -> 273 [color = white, style = solid]
	174 -> 196 [color = white, style = solid]
	115 -> 119 [color = white, style = solid]
	45 -> 244 [color = white, style = solid]
	183 -> 184 [color = black, style = dotted]
	35 -> 161 [color = white, style = solid]
	163 -> 165 [color = white, style = solid]
	272 -> 284 [color = black, style = solid, constraint = false]
	148 -> 152 [color = white, style = solid]
	192 -> 204 [color = black, style = dotted]
	103 -> 106 [color = white, style = solid]
	243 -> 245 [color = white, style = solid]
	181 -> 183 [color = black, style = dotted]
	127 -> 129 [color = white, style = solid]
	204 -> 205 [color = black, style = dotted]
	98 -> 110 [color = white, style = solid]
	241 -> 243 [color = white, style = solid]
	130 -> 165 [color = black, style = solid, constraint = false]
	97 -> 98 [color = white, style = solid]
	196 -> 197 [color = white, style = solid]
	171 -> 172 [color = white, style = solid]
	126 -> 127 [color = white, style = solid]
	254 -> 255 [color = black, style = dotted]
	129 -> 130 [color = white, style = solid]
	261 -> 263 [color = white, style = solid]
	52 -> 61 [color = white, style = solid]
	110 -> 113 [color = white, style = solid]
	40 -> 123 [color = white, style = solid]
	255 -> 268 [color = black, style = dotted]
	234 -> 235 [color = white, style = solid]
	102 -> 103 [color = white, style = solid]
	121 -> 122 [color = white, style = solid]
	68 -> 165 [color = black, style = solid, constraint = false]
	85 -> 90 [color = white, style = solid]
	94 -> 97 [color = white, style = solid]
	250 -> 251 [color = black, style = dotted]
	45 -> 148 [color = black, style = solid, constraint = false]
	251 -> 254 [color = black, style = dotted]
	155 -> 156 [color = white, style = solid]
	123 -> 205 [color = black, style = solid, constraint = false]
	subgraph cluster7 {
		label = dev_thread
		color = blue
		68  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		299  [label = "342: reset_task_ready = 0;"]
		285  [label = "565b: rtnl_lock = 1;"]
		284  [label = "565a: assume(rtnl_lock == 0);"]
		244  [label = "340b: assume(!(reset_task_ready == 0));"]
		45  [label = "340a: assume(reset_task_ready == 0);"]
		287  [label = "568b: assume(!((!netif_running) == 0));"]
	}
	subgraph cluster4 {
		label = napi_thread
		color = blue
		40  [label = "329a: assume(napi_scheduled == 0);"]
		37  [label = "328a: assume(napi_sem == 0);"]
		38  [label = "328b: napi_sem = 1;"]
		123  [label = "332a: napi_sem = 0;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		196  [label = "597: assert(dev_on != 0);", color = red]
		245  [label = "592: IntrMask = val;"]
		30  [label = "305b: irq_sem = 1;"]
		261  [label = "433b: assume(!(napi_enabled != 0));"]
		172  [label = "526: status1 = IntrStatus;"]
		31  [label = "310a: irq_sem = 0;"]
		163  [label = "310a: irq_sem = 0;"]
		257  [label = "530: intr_mask = 0;"]
		241  [label = "529a: val = 0;"]
		296  [label = "537: assume(!status1);"]
		161  [label = "305a: assume(irq_sem == 0);"]
		166  [label = "307: assert(intr_mask != 0);"]
		243  [label = "591: assert(dev_on != 0);"]
		35  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		29  [label = "305a: assume(irq_sem == 0);"]
		165  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		171  [label = "524: handled2 = 0;"]
		200  [label = "528a: assume(intr_mask != 0);"]
		174  [label = "534a: val = status1;"]
		265  [label = "535: status1 = IntrStatus;"]
		162  [label = "305b: irq_sem = 1;"]
		197  [label = "598: IntrStatus = IntrStatus & (~val);"]
		263  [label = "532: handled2 = 1;"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		228  [label = "494: IntrMask = 0;"]
		79  [label = "277b: rtnl_lock = 1;"]
		273  [label = "260: open1 = ret1;"]
		272  [label = "284a: rtnl_lock = 0;"]
		192  [label = "615: dev_on = 0;"]
		254  [label = "498a: assume(rc2 < 0);"]
		134  [label = "279: ret1 = ret5;"]
		152  [label = "290a: assume(rtnl_lock == 0);"]
		140  [label = "284a: rtnl_lock = 0;"]
		251  [label = "496: rc2 = ret3;"]
		115  [label = "421: napi_enabled = 1;"]
		90  [label = "492a: assert(hw_start != 0);"]
		183  [label = "591: assert(dev_on != 0);"]
		217  [label = "277b: rtnl_lock = 1;"]
		216  [label = "277a: assume(rtnl_lock == 0);"]
		106  [label = "498b: assume(!(rc2 < 0));"]
		119  [label = "603: dev_on = 1;"]
		103  [label = "496: rc2 = ret3;"]
		189  [label = "446b: irq_sem = 1;"]
		153  [label = "290b: rtnl_lock = 1;"]
		75  [label = "275: ret1 = 0;"]
		276  [label = "261b: assume(!(open1 == 0));"]
		78  [label = "277a: assume(rtnl_lock == 0);"]
		271  [label = "280b: assume(!(ret1 == 0));"]
		155  [label = "291a: assume(netif_running != 0);"]
		219  [label = "278a: assume(registered != 0);"]
		127  [label = "604a: val = 1;"]
		156  [label = "292: netif_running = 0;"]
		139  [label = "281: netif_running = 1;"]
		215  [label = "275: ret1 = 0;"]
		85  [label = "278a: assume(registered != 0);"]
		255  [label = "499: ret5 = rc2;"]
		190  [label = "447a: irq_sem = 0;"]
		133  [label = "503: ret5 = 0;"]
		129  [label = "591: assert(dev_on != 0);"]
		126  [label = "605: intr_mask = 1;"]
		144  [label = "261a: assume(open1 == 0);"]
		141  [label = "260: open1 = ret1;"]
		209  [label = "295a: rtnl_lock = 0;"]
		101  [label = "406: irq_enabled = 1;"]
		204  [label = "426: napi_enabled = 0;"]
		181  [label = "611a: val = 0;"]
		205  [label = "427a: assume(napi_sem == 0);"]
		226  [label = "492a: assert(hw_start != 0);"]
		130  [label = "592: IntrMask = val;"]
		206  [label = "427b: napi_sem = 1;"]
		91  [label = "494: IntrMask = 0;"]
		184  [label = "592: IntrMask = val;"]
		250  [label = "409: ret3 = -1;"]
		137  [label = "280a: assume(ret1 == 0);"]
		102  [label = "407: ret3 = 0;"]
		177  [label = "416: irq_enabled = 0;"]
		148  [label = "560: reset_task_ready = 1;"]
		268  [label = "279: ret1 = ret5;"]
		188  [label = "446a: assume(irq_sem == 0);"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		98  [label = "482: ret4 = 0;"]
		113  [label = "238a: assume(probe1 == 0);"]
		61  [label = "452: sysfs_registered = 1;"]
		224  [label = "399: assume(!(netif_running != 0));"]
		234  [label = "640: assume(sysfs_lock == 0);"]
		289  [label = "250a: dev_lock = 0;"]
		97  [label = "479b: assume(!(rc1 < 0));"]
		114  [label = "241: want_dev = 5;"]
		240  [label = "457: sysfs_registered = 0;"]
		94  [label = "476: rc1 = ret2;"]
		233  [label = "638: want_sysfs = 5;"]
		121  [label = "244: dev_lock = 5;"]
		67  [label = "477: hw_start = drv_hw_start;"]
		51  [label = "629a: assume(sysfs_lock == 0);"]
		65  [label = "631a: sysfs_lock = 0;"]
		122  [label = "245: want_dev = 0;"]
		236  [label = "642: want_sysfs = 0;"]
		84  [label = "389: ret2 = 0;"]
		110  [label = "237: probe1 = ret4;"]
		83  [label = "388: registered = 1;"]
		220  [label = "398: registered = 0;"]
		52  [label = "629b: sysfs_lock = 1;"]
		120  [label = "243: assume(dev_lock == 0);"]
		267  [label = "647a: sysfs_lock = 0;"]
		235  [label = "641: sysfs_lock = 5;"]
	}
}
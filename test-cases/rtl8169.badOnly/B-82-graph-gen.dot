digraph Counterexample {
	204 -> 205 [color = white, style = solid]
	125 -> 126 [color = white, style = solid]
	187 -> 201 [color = white, style = solid]
	228 -> 230 [color = white, style = solid]
	117 -> 125 [color = white, style = solid]
	179 -> 180 [color = white, style = solid]
	139 -> 152 [color = white, style = solid]
	182 -> 184 [color = white, style = solid]
	129 -> 135 [color = white, style = solid]
	193 -> 194 [color = white, style = solid]
	183 -> 193 [color = white, style = solid]
	67 -> 150 [color = white, style = solid]
	230 -> 231 [color = white, style = solid]
	168 -> 180 [color = black, style = solid, constraint = false]
	76 -> 77 [color = white, style = solid]
	235 -> 236 [color = white, style = solid]
	32 -> 34 [color = white, style = solid]
	63 -> 71 [color = white, style = solid]
	257 -> 259 [color = white, style = solid]
	239 -> 269 [color = white, style = solid]
	175 -> 176 [color = white, style = solid]
	56 -> 59 [color = white, style = solid]
	216 -> 217 [color = white, style = solid]
	236 -> 237 [color = white, style = solid]
	62 -> 63 [color = white, style = solid]
	59 -> 62 [color = white, style = solid]
	222 -> 223 [color = white, style = solid]
	144 -> 181 [color = black, style = solid, constraint = false]
	75 -> 76 [color = white, style = solid]
	180 -> 182 [color = white, style = solid]
	103 -> 104 [color = white, style = solid]
	71 -> 74 [color = white, style = solid]
	181 -> 210 [color = black, style = solid, constraint = false]
	98 -> 116 [color = white, style = solid]
	55 -> 129 [color = black, style = solid, constraint = false]
	231 -> 235 [color = white, style = solid]
	34 -> 38 [color = white, style = solid]
	194 -> 212 [color = white, style = solid]
	129 -> 138 [color = black, style = solid, constraint = false]
	176 -> 179 [color = white, style = solid]
	216 -> 239 [color = black, style = solid, constraint = false]
	201 -> 202 [color = white, style = solid]
	252 -> 255 [color = white, style = solid]
	47 -> 48 [color = white, style = solid]
	159 -> 181 [color = white, style = solid]
	38 -> 55 [color = white, style = solid]
	205 -> 210 [color = white, style = solid]
	83 -> 84 [color = white, style = solid]
	113 -> 118 [color = white, style = solid]
	49 -> 51 [color = white, style = solid]
	152 -> 153 [color = white, style = solid]
	27 -> 28 [color = white, style = solid]
	55 -> 56 [color = white, style = solid]
	51 -> 55 [color = black, style = solid, constraint = false]
	142 -> 144 [color = white, style = solid]
	249 -> 251 [color = white, style = solid]
	259 -> 264 [color = white, style = solid]
	153 -> 154 [color = white, style = solid]
	166 -> 167 [color = white, style = solid]
	210 -> 220 [color = white, style = solid]
	181 -> 183 [color = white, style = solid]
	245 -> 249 [color = white, style = solid]
	78 -> 101 [color = white, style = solid]
	127 -> 129 [color = white, style = solid]
	51 -> 83 [color = white, style = solid]
	28 -> 32 [color = white, style = solid]
	151 -> 159 [color = white, style = solid]
	225 -> 241 [color = white, style = solid]
	104 -> 113 [color = white, style = solid]
	154 -> 157 [color = white, style = solid]
	84 -> 87 [color = white, style = solid]
	223 -> 228 [color = white, style = solid]
	255 -> 257 [color = white, style = solid]
	97 -> 98 [color = white, style = solid]
	184 -> 187 [color = white, style = solid]
	172 -> 175 [color = white, style = solid]
	202 -> 204 [color = white, style = solid]
	171 -> 172 [color = white, style = solid]
	126 -> 127 [color = white, style = solid]
	91 -> 97 [color = white, style = solid]
	167 -> 169 [color = white, style = solid]
	220 -> 222 [color = white, style = solid]
	169 -> 171 [color = white, style = solid]
	162 -> 166 [color = white, style = solid]
	242 -> 245 [color = white, style = solid]
	239 -> 241 [color = black, style = solid, constraint = false]
	101 -> 102 [color = white, style = solid]
	67 -> 139 [color = black, style = solid, constraint = false]
	168 -> 260 [color = white, style = solid]
	150 -> 151 [color = white, style = solid]
	87 -> 91 [color = white, style = solid]
	118 -> 138 [color = white, style = solid]
	212 -> 216 [color = white, style = solid]
	57 -> 58 [color = white, style = solid]
	241 -> 242 [color = white, style = solid]
	157 -> 162 [color = white, style = solid]
	102 -> 103 [color = white, style = solid]
	172 -> 181 [color = black, style = solid, constraint = false]
	58 -> 64 [color = white, style = solid]
	264 -> 287 [color = white, style = solid]
	74 -> 75 [color = white, style = solid]
	251 -> 252 [color = white, style = solid]
	64 -> 67 [color = white, style = solid]
	77 -> 78 [color = white, style = solid]
	67 -> 142 [color = black, style = solid, constraint = false]
	237 -> 239 [color = white, style = solid]
	48 -> 49 [color = white, style = solid]
	221 -> 225 [color = white, style = solid]
	217 -> 221 [color = white, style = solid]
	138 -> 168 [color = white, style = solid]
	116 -> 117 [color = white, style = solid]
	287 -> 288 [color = white, style = solid]
	135 -> 139 [color = white, style = solid]
	subgraph cluster7 {
		label = dev_thread
		color = blue
		142  [label = "317: IntrStatus = 1;"]
		144  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		58  [label = "305b: irq_sem = 1;"]
		249  [label = "433b: assume(!(napi_enabled != 0));"]
		212  [label = "534a: val = status1;"]
		159  [label = "310a: irq_sem = 0;"]
		257  [label = "597: assert(dev_on != 0);"]
		193  [label = "524: handled2 = 0;"]
		216  [label = "597: assert(dev_on != 0);"]
		183  [label = "307: assert(intr_mask != 0);"]
		242  [label = "592: IntrMask = val;"]
		64  [label = "310a: irq_sem = 0;"]
		264  [label = "528b: assume(!(intr_mask != 0));"]
		245  [label = "530: intr_mask = 0;"]
		241  [label = "591: assert(dev_on != 0);", color = red]
		181  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		194  [label = "526: status1 = IntrStatus;"]
		288  [label = "537: assume(!status1);"]
		221  [label = "528a: assume(intr_mask != 0);"]
		150  [label = "305a: assume(irq_sem == 0);"]
		287  [label = "535: status1 = IntrStatus;"]
		67  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		151  [label = "305b: irq_sem = 1;"]
		259  [label = "598: IntrStatus = IntrStatus & (~val);"]
		225  [label = "529a: val = 0;"]
		251  [label = "532: handled2 = 1;"]
		217  [label = "598: IntrStatus = IntrStatus & (~val);"]
		252  [label = "535: status1 = IntrStatus;"]
		255  [label = "534a: val = status1;"]
		57  [label = "305a: assume(irq_sem == 0);"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		55  [label = "388: registered = 1;"]
		113  [label = "457: sysfs_registered = 0;"]
		56  [label = "389: ret2 = 0;"]
		27  [label = "629a: assume(sysfs_lock == 0);"]
		74  [label = "238a: assume(probe1 == 0);"]
		76  [label = "243: assume(dev_lock == 0);"]
		77  [label = "244: dev_lock = 5;"]
		78  [label = "245: want_dev = 0;"]
		32  [label = "452: sysfs_registered = 1;"]
		103  [label = "641: sysfs_lock = 5;"]
		138  [label = "398: registered = 0;"]
		71  [label = "237: probe1 = ret4;"]
		168  [label = "399: assume(!(netif_running != 0));"]
		75  [label = "241: want_dev = 5;"]
		260  [label = "250a: dev_lock = 0;"]
		38  [label = "477: hw_start = drv_hw_start;"]
		62  [label = "479b: assume(!(rc1 < 0));"]
		34  [label = "631a: sysfs_lock = 0;"]
		59  [label = "476: rc1 = ret2;"]
		104  [label = "642: want_sysfs = 0;"]
		63  [label = "482: ret4 = 0;"]
		28  [label = "629b: sysfs_lock = 1;"]
		101  [label = "638: want_sysfs = 5;"]
		102  [label = "640: assume(sysfs_lock == 0);"]
		118  [label = "647a: sysfs_lock = 0;"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		204  [label = "291a: assume(netif_running != 0);"]
		228  [label = "611a: val = 0;"]
		126  [label = "277a: assume(rtnl_lock == 0);"]
		83  [label = "284a: rtnl_lock = 0;"]
		210  [label = "416: irq_enabled = 0;"]
		223  [label = "427b: napi_sem = 1;"]
		91  [label = "560: reset_task_ready = 1;"]
		97  [label = "290a: assume(rtnl_lock == 0);"]
		139  [label = "494: IntrMask = 0;"]
		236  [label = "446b: irq_sem = 1;"]
		153  [label = "407: ret3 = 0;"]
		179  [label = "280a: assume(ret1 == 0);"]
		116  [label = "291b: assume(!(netif_running != 0));"]
		98  [label = "290b: rtnl_lock = 1;"]
		176  [label = "279: ret1 = ret5;"]
		184  [label = "260: open1 = ret1;"]
		235  [label = "446a: assume(irq_sem == 0);"]
		182  [label = "284a: rtnl_lock = 0;"]
		172  [label = "592: IntrMask = val;"]
		269  [label = "295a: rtnl_lock = 0;"]
		239  [label = "615: dev_on = 0;"]
		157  [label = "498b: assume(!(rc2 < 0));"]
		117  [label = "295a: rtnl_lock = 0;"]
		47  [label = "275: ret1 = 0;"]
		166  [label = "603: dev_on = 1;"]
		222  [label = "427a: assume(napi_sem == 0);"]
		162  [label = "421: napi_enabled = 1;"]
		205  [label = "292: netif_running = 0;"]
		202  [label = "290b: rtnl_lock = 1;"]
		48  [label = "277a: assume(rtnl_lock == 0);"]
		152  [label = "406: irq_enabled = 1;"]
		167  [label = "605: intr_mask = 1;"]
		87  [label = "261a: assume(open1 == 0);"]
		230  [label = "591: assert(dev_on != 0);"]
		169  [label = "604a: val = 1;"]
		180  [label = "281: netif_running = 1;"]
		175  [label = "503: ret5 = 0;"]
		201  [label = "290a: assume(rtnl_lock == 0);"]
		127  [label = "277b: rtnl_lock = 1;"]
		84  [label = "260: open1 = ret1;"]
		171  [label = "591: assert(dev_on != 0);"]
		187  [label = "261a: assume(open1 == 0);"]
		129  [label = "278a: assume(registered != 0);"]
		220  [label = "426: napi_enabled = 0;"]
		49  [label = "277b: rtnl_lock = 1;"]
		154  [label = "496: rc2 = ret3;"]
		237  [label = "447a: irq_sem = 0;"]
		51  [label = "278b: assume(!(registered != 0));"]
		231  [label = "592: IntrMask = val;"]
		125  [label = "275: ret1 = 0;"]
		135  [label = "492a: assert(hw_start != 0);"]
	}
}
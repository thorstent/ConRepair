digraph Counterexample {
	211 -> 213 [color = white, style = solid]
	189 -> 191 [color = white, style = solid]
	191 -> 194 [color = white, style = solid]
	202 -> 207 [color = white, style = solid]
	213 -> 214 [color = white, style = solid]
	95 -> 96 [color = white, style = solid]
	51 -> 71 [color = white, style = solid]
	35 -> 40 [color = white, style = solid]
	269 -> 271 [color = white, style = solid]
	214 -> 222 [color = white, style = solid]
	56 -> 58 [color = white, style = solid]
	222 -> 223 [color = white, style = solid]
	265 -> 269 [color = white, style = solid]
	188 -> 189 [color = white, style = solid]
	181 -> 183 [color = black, style = solid, constraint = false]
	278 -> 280 [color = white, style = solid]
	173 -> 174 [color = white, style = solid]
	226 -> 231 [color = white, style = solid]
	227 -> 230 [color = white, style = solid]
	136 -> 137 [color = white, style = solid]
	49 -> 51 [color = white, style = solid]
	152 -> 153 [color = white, style = solid]
	161 -> 162 [color = white, style = solid]
	231 -> 245 [color = white, style = solid]
	115 -> 118 [color = white, style = solid]
	124 -> 174 [color = black, style = solid, constraint = false]
	169 -> 170 [color = white, style = solid]
	260 -> 262 [color = white, style = solid]
	153 -> 246 [color = black, style = solid, constraint = false]
	71 -> 90 [color = white, style = solid]
	42 -> 45 [color = white, style = solid]
	34 -> 35 [color = white, style = solid]
	174 -> 187 [color = white, style = solid]
	62 -> 90 [color = black, style = solid, constraint = false]
	40 -> 175 [color = white, style = solid]
	262 -> 263 [color = white, style = solid]
	245 -> 278 [color = black, style = solid, constraint = false]
	158 -> 161 [color = white, style = solid]
	241 -> 257 [color = white, style = solid]
	145 -> 160 [color = white, style = solid]
	252 -> 258 [color = white, style = solid]
	149 -> 150 [color = white, style = solid]
	100 -> 102 [color = white, style = solid]
	246 -> 247 [color = white, style = solid]
	48 -> 49 [color = white, style = solid]
	242 -> 243 [color = white, style = solid]
	263 -> 265 [color = white, style = solid]
	123 -> 124 [color = white, style = solid]
	215 -> 225 [color = white, style = solid]
	240 -> 241 [color = white, style = solid]
	112 -> 136 [color = white, style = solid]
	234 -> 239 [color = white, style = solid]
	239 -> 240 [color = white, style = solid]
	128 -> 129 [color = white, style = solid]
	175 -> 176 [color = white, style = solid]
	37 -> 38 [color = white, style = solid]
	96 -> 103 [color = white, style = solid]
	38 -> 39 [color = white, style = solid]
	131 -> 145 [color = white, style = solid]
	146 -> 158 [color = white, style = solid]
	166 -> 169 [color = white, style = solid]
	140 -> 142 [color = white, style = solid]
	271 -> 278 [color = white, style = solid]
	247 -> 250 [color = white, style = solid]
	30 -> 95 [color = black, style = solid, constraint = false]
	106 -> 107 [color = white, style = solid]
	45 -> 48 [color = white, style = solid]
	170 -> 173 [color = white, style = solid]
	81 -> 83 [color = white, style = solid]
	176 -> 179 [color = white, style = solid]
	90 -> 100 [color = white, style = solid]
	86 -> 95 [color = white, style = solid]
	40 -> 181 [color = black, style = solid, constraint = false]
	179 -> 183 [color = white, style = solid]
	27 -> 30 [color = white, style = solid]
	147 -> 149 [color = white, style = solid]
	160 -> 234 [color = white, style = solid]
	280 -> 292 [color = white, style = solid]
	142 -> 146 [color = white, style = solid]
	55 -> 56 [color = white, style = solid]
	130 -> 131 [color = white, style = solid]
	231 -> 242 [color = black, style = solid, constraint = false]
	95 -> 102 [color = black, style = solid, constraint = false]
	30 -> 37 [color = white, style = solid]
	58 -> 147 [color = white, style = solid]
	164 -> 166 [color = white, style = solid]
	230 -> 242 [color = white, style = solid]
	103 -> 106 [color = white, style = solid]
	83 -> 86 [color = white, style = solid]
	137 -> 138 [color = white, style = solid]
	138 -> 140 [color = white, style = solid]
	199 -> 200 [color = white, style = solid]
	102 -> 123 [color = black, style = solid, constraint = false]
	124 -> 128 [color = white, style = solid]
	225 -> 227 [color = white, style = solid]
	118 -> 123 [color = white, style = solid]
	166 -> 183 [color = black, style = solid, constraint = false]
	129 -> 130 [color = white, style = solid]
	39 -> 42 [color = white, style = solid]
	207 -> 211 [color = white, style = solid]
	223 -> 226 [color = white, style = solid]
	183 -> 207 [color = black, style = solid, constraint = false]
	200 -> 202 [color = white, style = solid]
	150 -> 152 [color = white, style = solid]
	40 -> 136 [color = black, style = solid, constraint = false]
	183 -> 215 [color = white, style = solid]
	162 -> 164 [color = white, style = solid]
	78 -> 81 [color = white, style = solid]
	187 -> 188 [color = white, style = solid]
	250 -> 252 [color = white, style = solid]
	245 -> 246 [color = white, style = solid]
	243 -> 260 [color = white, style = solid]
	77 -> 78 [color = white, style = solid]
	102 -> 112 [color = white, style = solid]
	33 -> 34 [color = white, style = solid]
	107 -> 115 [color = white, style = solid]
	194 -> 199 [color = white, style = solid]
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		62  [label = "340a: assume(reset_task_ready == 0);"]
	}
	subgraph cluster4 {
		label = napi_thread
		color = blue
		55  [label = "328a: assume(napi_sem == 0);"]
		150  [label = "328b: napi_sem = 1;"]
		147  [label = "332a: napi_sem = 0;"]
		58  [label = "329a: assume(napi_scheduled == 0);"]
		56  [label = "328b: napi_sem = 1;"]
		153  [label = "332a: napi_sem = 0;"]
		152  [label = "329a: assume(napi_scheduled == 0);"]
		149  [label = "328a: assume(napi_sem == 0);"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		257  [label = "250a: dev_lock = 0;"]
		241  [label = "245: want_dev = 0;"]
		123  [label = "398: registered = 0;"]
		77  [label = "629a: assume(sysfs_lock == 0);"]
		118  [label = "238a: assume(probe1 == 0);"]
		107  [label = "482: ret4 = 0;"]
		129  [label = "640: assume(sysfs_lock == 0);"]
		83  [label = "631a: sysfs_lock = 0;"]
		130  [label = "641: sysfs_lock = 5;"]
		124  [label = "399: assume(!(netif_running != 0));"]
		81  [label = "452: sysfs_registered = 1;"]
		106  [label = "479b: assume(!(rc1 < 0));"]
		95  [label = "388: registered = 1;"]
		239  [label = "243: assume(dev_lock == 0);"]
		86  [label = "477: hw_start = drv_hw_start;"]
		131  [label = "642: want_sysfs = 0;"]
		103  [label = "476: rc1 = ret2;"]
		240  [label = "244: dev_lock = 5;"]
		145  [label = "457: sysfs_registered = 0;"]
		78  [label = "629b: sysfs_lock = 1;"]
		234  [label = "241: want_dev = 5;"]
		96  [label = "389: ret2 = 0;"]
		160  [label = "647a: sysfs_lock = 0;"]
		128  [label = "638: want_sysfs = 5;"]
		115  [label = "237: probe1 = ret4;"]
	}
	subgraph cluster7 {
		label = dev_thread
		color = blue
		181  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		183  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		176  [label = "305b: irq_sem = 1;"]
		278  [label = "433b: assume(!(napi_enabled != 0));"]
		34  [label = "305b: irq_sem = 1;"]
		33  [label = "305a: assume(irq_sem == 0);"]
		230  [label = "534a: val = status1;"]
		280  [label = "532: handled2 = 1;"]
		175  [label = "305a: assume(irq_sem == 0);"]
		292  [label = "537: assume(!status1);"]
		265  [label = "591: assert(dev_on != 0);"]
		179  [label = "310a: irq_sem = 0;"]
		269  [label = "592: IntrMask = val;"]
		262  [label = "528a: assume(intr_mask != 0);"]
		35  [label = "310a: irq_sem = 0;"]
		227  [label = "526: status1 = IntrStatus;"]
		260  [label = "535: status1 = IntrStatus;"]
		243  [label = "598: IntrStatus = IntrStatus & (~val);"]
		215  [label = "307: assert(intr_mask != 0);"]
		271  [label = "530: intr_mask = 0;"]
		40  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		225  [label = "524: handled2 = 0;"]
		263  [label = "529a: val = 0;"]
		242  [label = "597: assert(dev_on != 0);", color = red]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		162  [label = "604a: val = 1;"]
		39  [label = "284a: rtnl_lock = 0;"]
		166  [label = "592: IntrMask = val;"]
		169  [label = "503: ret5 = 0;"]
		71  [label = "295a: rtnl_lock = 0;"]
		136  [label = "406: irq_enabled = 1;"]
		191  [label = "260: open1 = ret1;"]
		51  [label = "291b: assume(!(netif_running != 0));"]
		226  [label = "447a: irq_sem = 0;"]
		222  [label = "446a: assume(irq_sem == 0);"]
		231  [label = "615: dev_on = 0;"]
		188  [label = "277b: rtnl_lock = 1;"]
		161  [label = "605: intr_mask = 1;"]
		102  [label = "278a: assume(registered != 0);"]
		137  [label = "407: ret3 = 0;"]
		27  [label = "275: ret1 = 0;"]
		246  [label = "427a: assume(napi_sem == 0);"]
		48  [label = "290a: assume(rtnl_lock == 0);"]
		223  [label = "446b: irq_sem = 1;"]
		213  [label = "591: assert(dev_on != 0);"]
		146  [label = "421: napi_enabled = 1;"]
		250  [label = "292: netif_running = 0;"]
		200  [label = "290b: rtnl_lock = 1;"]
		252  [label = "295a: rtnl_lock = 0;"]
		42  [label = "260: open1 = ret1;"]
		174  [label = "281: netif_running = 1;"]
		245  [label = "426: napi_enabled = 0;"]
		214  [label = "592: IntrMask = val;"]
		173  [label = "280a: assume(ret1 == 0);"]
		207  [label = "416: irq_enabled = 0;"]
		30  [label = "278b: assume(!(registered != 0));"]
		187  [label = "277a: assume(rtnl_lock == 0);"]
		247  [label = "427b: napi_sem = 1;"]
		199  [label = "290a: assume(rtnl_lock == 0);"]
		45  [label = "261a: assume(open1 == 0);"]
		211  [label = "611a: val = 0;"]
		158  [label = "603: dev_on = 1;"]
		189  [label = "284a: rtnl_lock = 0;"]
		164  [label = "591: assert(dev_on != 0);"]
		138  [label = "496: rc2 = ret3;"]
		49  [label = "290b: rtnl_lock = 1;"]
		38  [label = "277b: rtnl_lock = 1;"]
		37  [label = "277a: assume(rtnl_lock == 0);"]
		90  [label = "560: reset_task_ready = 1;"]
		142  [label = "498b: assume(!(rc2 < 0));"]
		140  [label = "494: IntrMask = 0;"]
		258  [label = "560: reset_task_ready = 1;"]
		170  [label = "279: ret1 = ret5;"]
		100  [label = "275: ret1 = 0;"]
		194  [label = "261a: assume(open1 == 0);"]
		202  [label = "291a: assume(netif_running != 0);"]
		112  [label = "492a: assert(hw_start != 0);"]
	}
}
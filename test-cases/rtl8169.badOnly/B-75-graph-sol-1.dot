digraph Counterexample {
	267 -> 268 [color = white, style = solid]
	126 -> 129 [color = white, style = solid]
	188 -> 190 [color = white, style = solid]
	42 -> 46 [color = white, style = solid]
	217 -> 249 [color = black, style = solid, constraint = false]
	166 -> 175 [color = black, style = solid, constraint = false]
	221 -> 224 [color = white, style = solid]
	231 -> 239 [color = white, style = solid]
	269 -> 270 [color = white, style = solid]
	116 -> 120 [color = white, style = solid]
	120 -> 121 [color = white, style = solid]
	56 -> 58 [color = white, style = solid]
	113 -> 116 [color = white, style = solid]
	124 -> 126 [color = white, style = solid]
	74 -> 78 [color = white, style = solid]
	220 -> 221 [color = white, style = solid]
	79 -> 82 [color = white, style = solid]
	139 -> 142 [color = white, style = solid]
	173 -> 174 [color = white, style = solid]
	227 -> 231 [color = white, style = solid]
	86 -> 89 [color = white, style = solid]
	35 -> 151 [color = white, style = solid]
	260 -> 272 [color = white, style = solid]
	241 -> 244 [color = white, style = solid]
	53 -> 54 [color = white, style = solid]
	195 -> 207 [color = white, style = solid]
	258 -> 260 [color = white, style = solid]
	136 -> 137 [color = white, style = solid]
	46 -> 53 [color = white, style = solid]
	96 -> 98 [color = white, style = solid]
	223 -> 226 [color = black, style = solid, constraint = false]
	217 -> 218 [color = white, style = solid]
	135 -> 136 [color = white, style = solid]
	131 -> 134 [color = white, style = solid]
	67 -> 69 [color = white, style = solid]
	35 -> 218 [color = black, style = solid, constraint = false]
	40 -> 42 [color = white, style = solid]
	111 -> 113 [color = white, style = solid]
	98 -> 107 [color = white, style = solid]
	32 -> 35 [color = white, style = solid]
	109 -> 111 [color = white, style = solid]
	89 -> 96 [color = white, style = solid]
	195 -> 206 [color = black, style = solid, constraint = false]
	181 -> 186 [color = white, style = solid]
	98 -> 292 [color = black, style = solid, constraint = false]
	37 -> 40 [color = white, style = solid]
	308 -> 309 [color = white, style = solid]
	146 -> 159 [color = white, style = solid]
	107 -> 108 [color = white, style = solid]
	207 -> 208 [color = white, style = solid]
	249 -> 250 [color = white, style = solid]
	251 -> 255 [color = white, style = solid]
	151 -> 250 [color = black, style = solid, constraint = false]
	122 -> 124 [color = white, style = solid]
	268 -> 269 [color = white, style = solid]
	154 -> 166 [color = white, style = solid]
	306 -> 307 [color = white, style = solid]
	149 -> 150 [color = white, style = solid]
	218 -> 220 [color = white, style = solid]
	292 -> 293 [color = white, style = solid]
	54 -> 170 [color = white, style = solid]
	270 -> 280 [color = white, style = solid]
	246 -> 248 [color = white, style = solid]
	204 -> 206 [color = white, style = solid]
	108 -> 109 [color = white, style = solid]
	53 -> 58 [color = black, style = solid, constraint = false]
	224 -> 226 [color = white, style = solid]
	256 -> 257 [color = black, style = solid, constraint = false]
	255 -> 293 [color = black, style = solid, constraint = false]
	280 -> 287 [color = white, style = solid]
	293 -> 305 [color = white, style = solid]
	244 -> 245 [color = white, style = solid]
	78 -> 79 [color = white, style = solid]
	190 -> 192 [color = white, style = solid]
	257 -> 258 [color = white, style = solid]
	36 -> 37 [color = white, style = solid]
	134 -> 135 [color = white, style = solid]
	159 -> 160 [color = white, style = solid]
	71 -> 73 [color = white, style = solid]
	204 -> 223 [color = black, style = solid, constraint = false]
	193 -> 195 [color = white, style = solid]
	166 -> 181 [color = white, style = solid]
	138 -> 139 [color = white, style = solid]
	170 -> 173 [color = white, style = solid]
	160 -> 164 [color = white, style = solid]
	58 -> 67 [color = white, style = solid]
	85 -> 86 [color = white, style = solid]
	201 -> 202 [color = white, style = solid]
	206 -> 217 [color = black, style = dotted]
	208 -> 213 [color = white, style = solid]
	199 -> 201 [color = white, style = solid]
	73 -> 74 [color = white, style = solid]
	192 -> 194 [color = white, style = solid]
	83 -> 84 [color = white, style = solid]
	250 -> 251 [color = white, style = solid]
	142 -> 146 [color = white, style = solid]
	130 -> 131 [color = white, style = solid]
	69 -> 71 [color = white, style = solid]
	174 -> 235 [color = white, style = solid]
	126 -> 166 [color = black, style = solid, constraint = false]
	239 -> 241 [color = white, style = solid]
	235 -> 238 [color = white, style = solid]
	213 -> 223 [color = white, style = solid]
	146 -> 176 [color = black, style = solid, constraint = false]
	164 -> 175 [color = white, style = solid]
	307 -> 308 [color = white, style = solid]
	137 -> 138 [color = white, style = solid]
	176 -> 257 [color = white, style = solid]
	31 -> 32 [color = white, style = solid]
	202 -> 204 [color = white, style = solid]
	287 -> 292 [color = white, style = solid]
	223 -> 249 [color = white, style = solid]
	249 -> 195 [color = red, style = solid, constraint = false]
	84 -> 85 [color = white, style = solid]
	238 -> 267 [color = white, style = solid]
	129 -> 130 [color = white, style = solid]
	82 -> 83 [color = white, style = solid]
	180 -> 193 [color = white, style = solid]
	175 -> 180 [color = white, style = solid]
	186 -> 188 [color = white, style = solid]
	150 -> 154 [color = white, style = solid]
	121 -> 122 [color = white, style = solid]
	245 -> 246 [color = white, style = solid]
	255 -> 256 [color = white, style = solid]
	226 -> 227 [color = white, style = solid]
	162 -> 166 [color = black, style = solid, constraint = false]
	305 -> 306 [color = white, style = solid]
	194 -> 199 [color = white, style = solid]
	subgraph cluster7 {
		label = dev_thread
		color = blue
		162  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster4 {
		label = napi_thread
		color = blue
		32  [label = "328b: napi_sem = 1;"]
		31  [label = "328a: assume(napi_sem == 0);"]
		35  [label = "329a: assume(napi_scheduled == 0);"]
		151  [label = "332a: napi_sem = 0;"]
	}
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		176  [label = "340b: assume(!(reset_task_ready == 0));"]
		257  [label = "565a: assume(rtnl_lock == 0);"]
		258  [label = "565b: rtnl_lock = 1;"]
		260  [label = "568b: assume(!((!netif_running) == 0));"]
		272  [label = "342: reset_task_ready = 0;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		154  [label = "310a: irq_sem = 0;"]
		206  [label = "592: IntrMask = val;"]
		199  [label = "528a: assume(intr_mask != 0);"]
		244  [label = "305a: assume(irq_sem == 0);"]
		218  [label = "434: napi_scheduled = 1;"]
		190  [label = "534a: val = status1;"]
		149  [label = "305a: assume(irq_sem == 0);"]
		248  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		186  [label = "524: handled2 = 0;"]
		221  [label = "535: status1 = IntrStatus;"]
		241  [label = "537: assume(!status1);"]
		220  [label = "532: handled2 = 1;"]
		201  [label = "530: intr_mask = 0;"]
		204  [label = "591: assert(dev_on != 0);"]
		245  [label = "305b: irq_sem = 1;"]
		217  [label = "433a: assume(napi_enabled != 0);"]
		224  [label = "534a: val = status1;"]
		239  [label = "535: status1 = IntrStatus;"]
		194  [label = "598: IntrStatus = IntrStatus & (~val);"]
		192  [label = "597: assert(dev_on != 0);"]
		226  [label = "597: assert(dev_on != 0);", color = red]
		246  [label = "310a: irq_sem = 0;"]
		202  [label = "529a: val = 0;"]
		150  [label = "305b: irq_sem = 1;"]
		227  [label = "598: IntrStatus = IntrStatus & (~val);"]
		188  [label = "526: status1 = IntrStatus;"]
		231  [label = "528b: assume(!(intr_mask != 0));"]
		181  [label = "307: assert(intr_mask != 0);"]
		166  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		267  [label = "638: want_sysfs = 5;"]
		42  [label = "631a: sysfs_lock = 0;"]
		37  [label = "629b: sysfs_lock = 1;"]
		269  [label = "641: sysfs_lock = 5;"]
		270  [label = "642: want_sysfs = 0;"]
		174  [label = "482: ret4 = 0;"]
		46  [label = "477: hw_start = drv_hw_start;"]
		309  [label = "250a: dev_lock = 0;"]
		170  [label = "476: rc1 = ret2;"]
		287  [label = "647a: sysfs_lock = 0;"]
		307  [label = "244: dev_lock = 5;"]
		53  [label = "388: registered = 1;"]
		305  [label = "241: want_dev = 5;"]
		292  [label = "398: registered = 0;"]
		36  [label = "629a: assume(sysfs_lock == 0);"]
		235  [label = "237: probe1 = ret4;"]
		238  [label = "238a: assume(probe1 == 0);"]
		173  [label = "479b: assume(!(rc1 < 0));"]
		280  [label = "457: sysfs_registered = 0;"]
		54  [label = "389: ret2 = 0;"]
		40  [label = "452: sysfs_registered = 1;"]
		308  [label = "245: want_dev = 0;"]
		306  [label = "243: assume(dev_lock == 0);"]
		293  [label = "399: assume(!(netif_running != 0));"]
		268  [label = "640: assume(sysfs_lock == 0);"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		213  [label = "447a: irq_sem = 0;"]
		135  [label = "281: netif_running = 1;"]
		79  [label = "279: ret1 = ret5;"]
		195  [label = "592: IntrMask = val;"]
		142  [label = "261a: assume(open1 == 0);"]
		180  [label = "611a: val = 0;"]
		108  [label = "407: ret3 = 0;"]
		98  [label = "278a: assume(registered != 0);"]
		126  [label = "592: IntrMask = val;"]
		208  [label = "446b: irq_sem = 1;"]
		146  [label = "560: reset_task_ready = 1;"]
		175  [label = "416: irq_enabled = 0;"]
		56  [label = "275: ret1 = 0;"]
		116  [label = "421: napi_enabled = 1;"]
		124  [label = "591: assert(dev_on != 0);"]
		250  [label = "427a: assume(napi_sem == 0);"]
		160  [label = "290b: rtnl_lock = 1;"]
		193  [label = "591: assert(dev_on != 0);"]
		58  [label = "278a: assume(registered != 0);"]
		136  [label = "277a: assume(rtnl_lock == 0);"]
		138  [label = "284a: rtnl_lock = 0;"]
		84  [label = "277b: rtnl_lock = 1;"]
		255  [label = "292: netif_running = 0;"]
		139  [label = "260: open1 = ret1;"]
		109  [label = "496: rc2 = ret3;"]
		85  [label = "284a: rtnl_lock = 0;"]
		107  [label = "406: irq_enabled = 1;"]
		71  [label = "494: IntrMask = 0;"]
		69  [label = "496: rc2 = ret3;"]
		131  [label = "279: ret1 = ret5;"]
		256  [label = "295a: rtnl_lock = 0;"]
		137  [label = "277b: rtnl_lock = 1;"]
		73  [label = "498a: assume(rc2 < 0);"]
		78  [label = "492a: assert(hw_start != 0);"]
		207  [label = "446a: assume(irq_sem == 0);"]
		86  [label = "260: open1 = ret1;"]
		120  [label = "603: dev_on = 1;"]
		130  [label = "492a: assert(hw_start != 0);"]
		67  [label = "409: ret3 = -1;"]
		223  [label = "615: dev_on = 0;"]
		164  [label = "291a: assume(netif_running != 0);"]
		74  [label = "499: ret5 = rc2;"]
		121  [label = "605: intr_mask = 1;"]
		251  [label = "427b: napi_sem = 1;"]
		111  [label = "494: IntrMask = 0;"]
		96  [label = "275: ret1 = 0;"]
		159  [label = "290a: assume(rtnl_lock == 0);"]
		122  [label = "604a: val = 1;"]
		129  [label = "503: ret5 = 0;"]
		113  [label = "498b: assume(!(rc2 < 0));"]
		83  [label = "277a: assume(rtnl_lock == 0);"]
		134  [label = "280a: assume(ret1 == 0);"]
		249  [label = "426: napi_enabled = 0;"]
		82  [label = "280b: assume(!(ret1 == 0));"]
		89  [label = "261b: assume(!(open1 == 0));"]
	}
}
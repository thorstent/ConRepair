digraph Counterexample {
	204 -> 205 [color = white, style = solid]
	215 -> 216 [color = white, style = solid]
	125 -> 126 [color = white, style = solid]
	157 -> 158 [color = white, style = solid]
	171 -> 236 [color = black, style = solid, constraint = false]
	224 -> 226 [color = white, style = solid]
	192 -> 195 [color = white, style = solid]
	189 -> 191 [color = white, style = solid]
	230 -> 231 [color = white, style = solid]
	29 -> 32 [color = white, style = solid]
	158 -> 160 [color = white, style = solid]
	71 -> 72 [color = white, style = solid]
	167 -> 168 [color = white, style = solid]
	206 -> 236 [color = white, style = solid]
	93 -> 141 [color = black, style = solid, constraint = false]
	65 -> 71 [color = white, style = solid]
	216 -> 218 [color = white, style = solid]
	133 -> 144 [color = white, style = solid]
	168 -> 171 [color = white, style = solid]
	148 -> 150 [color = white, style = solid]
	86 -> 91 [color = white, style = solid]
	111 -> 206 [color = white, style = solid]
	221 -> 224 [color = white, style = solid]
	36 -> 40 [color = white, style = solid]
	131 -> 176 [color = white, style = solid]
	128 -> 131 [color = white, style = solid]
	45 -> 46 [color = white, style = solid]
	236 -> 237 [color = white, style = solid]
	196 -> 198 [color = white, style = solid]
	258 -> 259 [color = white, style = solid]
	63 -> 64 [color = white, style = solid]
	160 -> 191 [color = black, style = solid, constraint = false]
	144 -> 148 [color = white, style = solid]
	111 -> 114 [color = black, style = solid, constraint = false]
	50 -> 51 [color = white, style = solid]
	32 -> 36 [color = white, style = solid]
	259 -> 260 [color = white, style = solid]
	260 -> 269 [color = white, style = solid]
	114 -> 125 [color = white, style = solid]
	205 -> 248 [color = white, style = solid]
	141 -> 144 [color = black, style = solid, constraint = false]
	151 -> 156 [color = white, style = solid]
	120 -> 141 [color = white, style = solid]
	28 -> 29 [color = white, style = solid]
	220 -> 221 [color = white, style = solid]
	141 -> 173 [color = white, style = solid]
	40 -> 50 [color = white, style = solid]
	85 -> 86 [color = white, style = solid]
	51 -> 60 [color = white, style = solid]
	208 -> 213 [color = white, style = solid]
	72 -> 73 [color = white, style = solid]
	195 -> 196 [color = white, style = solid]
	227 -> 230 [color = white, style = solid]
	64 -> 128 [color = white, style = solid]
	231 -> 232 [color = white, style = solid]
	177 -> 202 [color = white, style = solid]
	213 -> 215 [color = white, style = solid]
	202 -> 203 [color = white, style = solid]
	232 -> 234 [color = white, style = solid]
	79 -> 84 [color = white, style = solid]
	239 -> 265 [color = white, style = solid]
	52 -> 54 [color = white, style = solid]
	50 -> 54 [color = black, style = solid, constraint = false]
	166 -> 167 [color = white, style = solid]
	73 -> 76 [color = white, style = solid]
	96 -> 97 [color = white, style = solid]
	173 -> 186 [color = white, style = solid]
	54 -> 176 [color = black, style = solid, constraint = false]
	156 -> 157 [color = white, style = solid]
	118 -> 119 [color = white, style = solid]
	100 -> 101 [color = white, style = solid]
	132 -> 133 [color = white, style = solid]
	191 -> 192 [color = white, style = solid]
	199 -> 208 [color = white, style = solid]
	101 -> 104 [color = white, style = solid]
	46 -> 52 [color = white, style = solid]
	93 -> 96 [color = white, style = solid]
	186 -> 187 [color = white, style = solid]
	107 -> 114 [color = white, style = solid]
	42 -> 45 [color = white, style = solid]
	250 -> 254 [color = white, style = solid]
	138 -> 141 [color = black, style = solid, constraint = false]
	176 -> 177 [color = white, style = solid]
	84 -> 85 [color = white, style = solid]
	248 -> 250 [color = white, style = solid]
	59 -> 65 [color = white, style = solid]
	114 -> 206 [color = black, style = solid, constraint = false]
	133 -> 177 [color = black, style = solid, constraint = false]
	104 -> 107 [color = white, style = solid]
	54 -> 59 [color = white, style = solid]
	150 -> 151 [color = white, style = solid]
	166 -> 213 [color = black, style = solid, constraint = false]
	160 -> 166 [color = white, style = solid]
	126 -> 132 [color = white, style = solid]
	97 -> 100 [color = white, style = solid]
	254 -> 258 [color = white, style = solid]
	218 -> 220 [color = white, style = solid]
	119 -> 120 [color = white, style = solid]
	60 -> 63 [color = white, style = solid]
	91 -> 93 [color = white, style = solid]
	198 -> 199 [color = white, style = solid]
	237 -> 239 [color = white, style = solid]
	226 -> 227 [color = white, style = solid]
	187 -> 189 [color = white, style = solid]
	76 -> 79 [color = white, style = solid]
	203 -> 204 [color = white, style = solid]
	subgraph cluster7 {
		label = dev_thread
		color = blue
		138  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		111  [label = "340a: assume(reset_task_ready == 0);"]
		206  [label = "340b: assume(!(reset_task_ready == 0));"]
		236  [label = "565a: assume(rtnl_lock == 0);"]
		265  [label = "342: reset_task_ready = 0;"]
		237  [label = "565b: rtnl_lock = 1;"]
		239  [label = "568b: assume(!((!netif_running) == 0));"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		192  [label = "598: IntrStatus = IntrStatus & (~val);"]
		230  [label = "305a: assume(irq_sem == 0);"]
		187  [label = "526: status1 = IntrStatus;"]
		231  [label = "305b: irq_sem = 1;"]
		215  [label = "532: handled2 = 1;"]
		224  [label = "528b: assume(!(intr_mask != 0));"]
		141  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		173  [label = "307: assert(intr_mask != 0);"]
		216  [label = "535: status1 = IntrStatus;"]
		199  [label = "592: IntrMask = val;"]
		226  [label = "535: status1 = IntrStatus;"]
		227  [label = "537: assume(!status1);"]
		118  [label = "305a: assume(irq_sem == 0);"]
		208  [label = "530: intr_mask = 0;"]
		232  [label = "310a: irq_sem = 0;"]
		186  [label = "524: handled2 = 0;"]
		221  [label = "598: IntrStatus = IntrStatus & (~val);"]
		119  [label = "305b: irq_sem = 1;"]
		213  [label = "433b: assume(!(napi_enabled != 0));"]
		189  [label = "534a: val = status1;"]
		220  [label = "597: assert(dev_on != 0);"]
		198  [label = "591: assert(dev_on != 0);"]
		234  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		120  [label = "310a: irq_sem = 0;"]
		218  [label = "534a: val = status1;"]
		196  [label = "529a: val = 0;"]
		195  [label = "528a: assume(intr_mask != 0);"]
		191  [label = "597: assert(dev_on != 0);", color = red]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		73  [label = "496: rc2 = ret3;"]
		125  [label = "290a: assume(rtnl_lock == 0);"]
		45  [label = "277a: assume(rtnl_lock == 0);"]
		150  [label = "591: assert(dev_on != 0);"]
		97  [label = "279: ret1 = ret5;"]
		76  [label = "498b: assume(!(rc2 < 0));"]
		86  [label = "604a: val = 1;"]
		167  [label = "427a: assume(napi_sem == 0);"]
		104  [label = "260: open1 = ret1;"]
		84  [label = "603: dev_on = 1;"]
		151  [label = "592: IntrMask = val;"]
		93  [label = "592: IntrMask = val;"]
		166  [label = "426: napi_enabled = 0;"]
		107  [label = "261a: assume(open1 == 0);"]
		160  [label = "615: dev_on = 0;"]
		132  [label = "291a: assume(netif_running != 0);"]
		133  [label = "292: netif_running = 0;"]
		96  [label = "503: ret5 = 0;"]
		156  [label = "446a: assume(irq_sem == 0);"]
		72  [label = "407: ret3 = 0;"]
		100  [label = "280a: assume(ret1 == 0);"]
		114  [label = "560: reset_task_ready = 1;"]
		148  [label = "611a: val = 0;"]
		79  [label = "421: napi_enabled = 1;"]
		144  [label = "416: irq_enabled = 0;"]
		157  [label = "446b: irq_sem = 1;"]
		59  [label = "492a: assert(hw_start != 0);"]
		168  [label = "427b: napi_sem = 1;"]
		52  [label = "284a: rtnl_lock = 0;"]
		171  [label = "295a: rtnl_lock = 0;"]
		101  [label = "281: netif_running = 1;"]
		42  [label = "275: ret1 = 0;"]
		71  [label = "406: irq_enabled = 1;"]
		85  [label = "605: intr_mask = 1;"]
		158  [label = "447a: irq_sem = 0;"]
		54  [label = "278a: assume(registered != 0);"]
		126  [label = "290b: rtnl_lock = 1;"]
		46  [label = "277b: rtnl_lock = 1;"]
		65  [label = "494: IntrMask = 0;"]
		91  [label = "591: assert(dev_on != 0);"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		259  [label = "244: dev_lock = 5;"]
		254  [label = "241: want_dev = 5;"]
		50  [label = "388: registered = 1;"]
		177  [label = "399: assume(!(netif_running != 0));"]
		205  [label = "642: want_sysfs = 0;"]
		51  [label = "389: ret2 = 0;"]
		250  [label = "647a: sysfs_lock = 0;"]
		28  [label = "629a: assume(sysfs_lock == 0);"]
		248  [label = "457: sysfs_registered = 0;"]
		32  [label = "452: sysfs_registered = 1;"]
		258  [label = "243: assume(dev_lock == 0);"]
		204  [label = "641: sysfs_lock = 5;"]
		36  [label = "631a: sysfs_lock = 0;"]
		260  [label = "245: want_dev = 0;"]
		269  [label = "250a: dev_lock = 0;"]
		64  [label = "482: ret4 = 0;"]
		202  [label = "638: want_sysfs = 5;"]
		29  [label = "629b: sysfs_lock = 1;"]
		176  [label = "398: registered = 0;"]
		63  [label = "479b: assume(!(rc1 < 0));"]
		40  [label = "477: hw_start = drv_hw_start;"]
		128  [label = "237: probe1 = ret4;"]
		131  [label = "238a: assume(probe1 == 0);"]
		60  [label = "476: rc1 = ret2;"]
		203  [label = "640: assume(sysfs_lock == 0);"]
	}
}
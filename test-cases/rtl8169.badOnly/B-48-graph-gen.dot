digraph Counterexample {
	234 -> 236 [color = white, style = solid]
	192 -> 195 [color = white, style = solid]
	262 -> 263 [color = black, style = solid, constraint = false]
	154 -> 174 [color = white, style = solid]
	281 -> 293 [color = white, style = solid]
	230 -> 231 [color = white, style = solid]
	68 -> 212 [color = black, style = solid, constraint = false]
	59 -> 84 [color = black, style = solid, constraint = false]
	90 -> 101 [color = white, style = solid]
	247 -> 248 [color = white, style = solid]
	184 -> 188 [color = white, style = solid]
	252 -> 253 [color = white, style = solid]
	122 -> 123 [color = white, style = solid]
	233 -> 234 [color = white, style = solid]
	47 -> 68 [color = white, style = solid]
	110 -> 112 [color = white, style = solid]
	188 -> 189 [color = white, style = solid]
	160 -> 213 [color = black, style = solid, constraint = false]
	107 -> 109 [color = white, style = solid]
	255 -> 258 [color = white, style = solid]
	79 -> 82 [color = white, style = solid]
	251 -> 291 [color = white, style = solid]
	68 -> 84 [color = white, style = solid]
	114 -> 170 [color = black, style = solid, constraint = false]
	85 -> 91 [color = white, style = solid]
	192 -> 225 [color = black, style = solid, constraint = false]
	86 -> 89 [color = white, style = solid]
	148 -> 149 [color = white, style = solid]
	160 -> 169 [color = white, style = solid]
	274 -> 275 [color = white, style = solid]
	227 -> 230 [color = white, style = solid]
	54 -> 63 [color = white, style = solid]
	231 -> 233 [color = white, style = solid]
	166 -> 170 [color = white, style = solid]
	118 -> 119 [color = white, style = solid]
	133 -> 159 [color = white, style = solid]
	181 -> 183 [color = white, style = solid]
	33 -> 44 [color = white, style = solid]
	240 -> 242 [color = white, style = solid]
	64 -> 79 [color = white, style = solid]
	112 -> 114 [color = white, style = solid]
	254 -> 255 [color = white, style = solid]
	215 -> 217 [color = white, style = solid]
	93 -> 95 [color = white, style = solid]
	217 -> 252 [color = white, style = solid]
	196 -> 199 [color = white, style = solid]
	101 -> 102 [color = white, style = solid]
	51 -> 52 [color = white, style = solid]
	212 -> 213 [color = white, style = solid]
	263 -> 277 [color = white, style = solid]
	117 -> 118 [color = white, style = solid]
	277 -> 278 [color = white, style = solid]
	212 -> 217 [color = black, style = solid, constraint = false]
	119 -> 122 [color = white, style = solid]
	218 -> 220 [color = white, style = solid]
	55 -> 59 [color = white, style = solid]
	109 -> 110 [color = white, style = solid]
	242 -> 243 [color = white, style = solid]
	165 -> 166 [color = white, style = solid]
	258 -> 262 [color = white, style = solid]
	147 -> 148 [color = white, style = solid]
	262 -> 268 [color = white, style = solid]
	123 -> 124 [color = white, style = solid]
	114 -> 117 [color = white, style = solid]
	273 -> 274 [color = white, style = solid]
	291 -> 298 [color = white, style = solid]
	278 -> 281 [color = white, style = solid]
	190 -> 192 [color = white, style = solid]
	172 -> 177 [color = white, style = solid]
	268 -> 273 [color = white, style = solid]
	159 -> 160 [color = white, style = solid]
	44 -> 49 [color = white, style = solid]
	63 -> 64 [color = white, style = solid]
	275 -> 277 [color = black, style = solid, constraint = false]
	99 -> 107 [color = white, style = solid]
	130 -> 133 [color = white, style = solid]
	32 -> 33 [color = white, style = solid]
	170 -> 177 [color = black, style = solid, constraint = false]
	245 -> 247 [color = white, style = solid]
	236 -> 240 [color = white, style = solid]
	195 -> 196 [color = white, style = solid]
	174 -> 212 [color = white, style = solid]
	63 -> 68 [color = black, style = solid, constraint = false]
	125 -> 129 [color = white, style = solid]
	177 -> 181 [color = white, style = solid]
	248 -> 251 [color = white, style = solid]
	213 -> 223 [color = white, style = solid]
	243 -> 245 [color = white, style = solid]
	83 -> 86 [color = white, style = solid]
	253 -> 254 [color = white, style = solid]
	52 -> 55 [color = white, style = solid]
	59 -> 69 [color = black, style = solid, constraint = false]
	225 -> 227 [color = white, style = solid]
	170 -> 197 [color = white, style = solid]
	89 -> 90 [color = white, style = solid]
	211 -> 218 [color = white, style = solid]
	171 -> 172 [color = white, style = solid]
	84 -> 85 [color = white, style = solid]
	169 -> 171 [color = white, style = solid]
	164 -> 165 [color = white, style = solid]
	103 -> 142 [color = white, style = solid]
	49 -> 54 [color = white, style = solid]
	82 -> 83 [color = white, style = solid]
	189 -> 190 [color = white, style = solid]
	129 -> 130 [color = white, style = solid]
	59 -> 164 [color = white, style = solid]
	69 -> 170 [color = black, style = solid, constraint = false]
	102 -> 103 [color = white, style = solid]
	199 -> 215 [color = white, style = solid]
	149 -> 154 [color = white, style = solid]
	91 -> 93 [color = white, style = solid]
	135 -> 263 [color = white, style = solid]
	220 -> 225 [color = white, style = solid]
	183 -> 184 [color = white, style = solid]
	124 -> 125 [color = white, style = solid]
	142 -> 147 [color = white, style = solid]
	135 -> 262 [color = black, style = solid, constraint = false]
	197 -> 211 [color = white, style = solid]
	95 -> 99 [color = white, style = solid]
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		278  [label = "565b: rtnl_lock = 1;"]
		277  [label = "565a: assume(rtnl_lock == 0);"]
		281  [label = "568b: assume(!((!netif_running) == 0));"]
		135  [label = "340a: assume(reset_task_ready == 0);"]
		263  [label = "340b: assume(!(reset_task_ready == 0));"]
		293  [label = "342: reset_task_ready = 0;"]
	}
	subgraph cluster7 {
		label = dev_thread
		color = blue
		69  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		247  [label = "597: assert(dev_on != 0);"]
		245  [label = "534a: val = status1;"]
		197  [label = "307: assert(intr_mask != 0);"]
		248  [label = "598: IntrStatus = IntrStatus & (~val);"]
		240  [label = "433b: assume(!(napi_enabled != 0));"]
		170  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		55  [label = "310a: irq_sem = 0;"]
		165  [label = "305b: irq_sem = 1;"]
		298  [label = "537: assume(!status1);"]
		236  [label = "530: intr_mask = 0;"]
		220  [label = "534a: val = status1;"]
		225  [label = "597: assert(dev_on != 0);", color = red]
		231  [label = "529a: val = 0;"]
		218  [label = "526: status1 = IntrStatus;"]
		243  [label = "535: status1 = IntrStatus;"]
		164  [label = "305a: assume(irq_sem == 0);"]
		52  [label = "305b: irq_sem = 1;"]
		230  [label = "528a: assume(intr_mask != 0);"]
		233  [label = "591: assert(dev_on != 0);"]
		51  [label = "305a: assume(irq_sem == 0);"]
		166  [label = "310a: irq_sem = 0;"]
		59  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		234  [label = "592: IntrMask = val;"]
		211  [label = "524: handled2 = 0;"]
		227  [label = "598: IntrStatus = IntrStatus & (~val);"]
		242  [label = "532: handled2 = 1;"]
		251  [label = "528b: assume(!(intr_mask != 0));"]
		291  [label = "535: status1 = IntrStatus;"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		147  [label = "640: assume(sysfs_lock == 0);"]
		82  [label = "479b: assume(!(rc1 < 0));"]
		89  [label = "238a: assume(probe1 == 0);"]
		33  [label = "629b: sysfs_lock = 1;"]
		83  [label = "482: ret4 = 0;"]
		103  [label = "245: want_dev = 0;"]
		154  [label = "457: sysfs_registered = 0;"]
		86  [label = "237: probe1 = ret4;"]
		212  [label = "398: registered = 0;"]
		148  [label = "641: sysfs_lock = 5;"]
		149  [label = "642: want_sysfs = 0;"]
		64  [label = "389: ret2 = 0;"]
		32  [label = "629a: assume(sysfs_lock == 0);"]
		174  [label = "647a: sysfs_lock = 0;"]
		102  [label = "244: dev_lock = 5;"]
		44  [label = "452: sysfs_registered = 1;"]
		49  [label = "631a: sysfs_lock = 0;"]
		223  [label = "250a: dev_lock = 0;"]
		101  [label = "243: assume(dev_lock == 0);"]
		142  [label = "638: want_sysfs = 5;"]
		213  [label = "399: assume(!(netif_running != 0));"]
		90  [label = "241: want_dev = 5;"]
		79  [label = "476: rc1 = ret2;"]
		54  [label = "477: hw_start = drv_hw_start;"]
		63  [label = "388: registered = 1;"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		91  [label = "496: rc2 = ret3;"]
		192  [label = "615: dev_on = 0;"]
		124  [label = "277a: assume(rtnl_lock == 0);"]
		133  [label = "261a: assume(open1 == 0);"]
		119  [label = "279: ret1 = ret5;"]
		262  [label = "560: reset_task_ready = 1;"]
		84  [label = "406: irq_enabled = 1;"]
		130  [label = "260: open1 = ret1;"]
		129  [label = "284a: rtnl_lock = 0;"]
		195  [label = "290a: assume(rtnl_lock == 0);"]
		254  [label = "284a: rtnl_lock = 0;"]
		183  [label = "591: assert(dev_on != 0);"]
		122  [label = "280a: assume(ret1 == 0);"]
		189  [label = "446b: irq_sem = 1;"]
		47  [label = "275: ret1 = 0;"]
		159  [label = "291a: assume(netif_running != 0);"]
		253  [label = "277b: rtnl_lock = 1;"]
		171  [label = "427a: assume(napi_sem == 0);"]
		107  [label = "603: dev_on = 1;"]
		217  [label = "278b: assume(!(registered != 0));"]
		169  [label = "426: napi_enabled = 0;"]
		258  [label = "261a: assume(open1 == 0);"]
		123  [label = "281: netif_running = 1;"]
		112  [label = "591: assert(dev_on != 0);"]
		252  [label = "277a: assume(rtnl_lock == 0);"]
		215  [label = "275: ret1 = 0;"]
		117  [label = "503: ret5 = 0;"]
		68  [label = "278a: assume(registered != 0);"]
		114  [label = "592: IntrMask = val;"]
		125  [label = "277b: rtnl_lock = 1;"]
		190  [label = "447a: irq_sem = 0;"]
		118  [label = "492a: assert(hw_start != 0);"]
		196  [label = "290b: rtnl_lock = 1;"]
		255  [label = "260: open1 = ret1;"]
		172  [label = "427b: napi_sem = 1;"]
		275  [label = "295a: rtnl_lock = 0;"]
		95  [label = "498b: assume(!(rc2 < 0));"]
		181  [label = "611a: val = 0;"]
		99  [label = "421: napi_enabled = 1;"]
		85  [label = "407: ret3 = 0;"]
		110  [label = "604a: val = 1;"]
		274  [label = "290b: rtnl_lock = 1;"]
		268  [label = "291b: assume(!(netif_running != 0));"]
		160  [label = "292: netif_running = 0;"]
		184  [label = "592: IntrMask = val;"]
		93  [label = "494: IntrMask = 0;"]
		273  [label = "290a: assume(rtnl_lock == 0);"]
		199  [label = "295a: rtnl_lock = 0;"]
		177  [label = "416: irq_enabled = 0;"]
		109  [label = "605: intr_mask = 1;"]
		188  [label = "446a: assume(irq_sem == 0);"]
	}
}
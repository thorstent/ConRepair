digraph Counterexample {
	104 -> 114 [color = black, style = solid, constraint = false]
	61 -> 69 [color = black, style = dotted]
	88 -> 98 [color = white, style = solid]
	105 -> 115 [color = white, style = solid]
	238 -> 276 [color = white, style = solid]
	76 -> 77 [color = white, style = solid]
	146 -> 209 [color = black, style = solid, constraint = false]
	154 -> 155 [color = white, style = solid]
	252 -> 254 [color = white, style = solid]
	175 -> 187 [color = white, style = solid]
	55 -> 61 [color = white, style = solid]
	196 -> 198 [color = white, style = solid]
	67 -> 128 [color = black, style = solid, constraint = false]
	33 -> 35 [color = white, style = solid]
	231 -> 235 [color = white, style = solid]
	188 -> 211 [color = white, style = solid]
	77 -> 80 [color = white, style = solid]
	173 -> 174 [color = white, style = solid]
	112 -> 114 [color = black, style = dotted]
	98 -> 104 [color = white, style = solid]
	224 -> 236 [color = black, style = solid, constraint = false]
	114 -> 238 [color = black, style = solid, constraint = false]
	228 -> 231 [color = white, style = solid]
	211 -> 215 [color = white, style = solid]
	132 -> 134 [color = black, style = dotted]
	81 -> 82 [color = white, style = solid]
	217 -> 218 [color = white, style = solid]
	72 -> 106 [color = black, style = dotted]
	261 -> 264 [color = white, style = solid]
	166 -> 171 [color = white, style = solid]
	151 -> 154 [color = white, style = solid]
	254 -> 256 [color = white, style = solid]
	118 -> 119 [color = white, style = solid]
	115 -> 118 [color = white, style = solid]
	191 -> 192 [color = white, style = solid]
	67 -> 93 [color = black, style = solid, constraint = false]
	35 -> 104 [color = black, style = solid, constraint = false]
	190 -> 191 [color = white, style = solid]
	241 -> 248 [color = white, style = solid]
	203 -> 207 [color = white, style = solid]
	211 -> 61 [color = red, style = solid, constraint = false]
	215 -> 217 [color = white, style = solid]
	130 -> 132 [color = black, style = dotted]
	231 -> 254 [color = black, style = solid, constraint = false]
	192 -> 196 [color = white, style = solid]
	248 -> 250 [color = white, style = solid]
	158 -> 161 [color = white, style = solid]
	171 -> 182 [color = white, style = solid]
	35 -> 49 [color = white, style = solid]
	59 -> 63 [color = white, style = solid]
	51 -> 52 [color = white, style = solid]
	150 -> 151 [color = white, style = solid]
	141 -> 142 [color = black, style = dotted]
	237 -> 246 [color = white, style = solid]
	157 -> 162 [color = white, style = solid]
	149 -> 150 [color = white, style = solid]
	188 -> 276 [color = black, style = solid, constraint = false]
	218 -> 225 [color = white, style = solid]
	58 -> 59 [color = white, style = solid]
	106 -> 112 [color = black, style = dotted]
	265 -> 267 [color = white, style = solid]
	174 -> 175 [color = white, style = solid]
	67 -> 202 [color = white, style = solid]
	104 -> 105 [color = white, style = solid]
	119 -> 158 [color = white, style = solid]
	256 -> 260 [color = white, style = solid]
	143 -> 145 [color = black, style = dotted]
	276 -> 282 [color = white, style = solid]
	273 -> 274 [color = white, style = solid]
	235 -> 236 [color = white, style = solid]
	41 -> 81 [color = white, style = solid]
	168 -> 173 [color = white, style = solid]
	236 -> 237 [color = white, style = solid]
	142 -> 143 [color = black, style = dotted]
	87 -> 221 [color = white, style = solid]
	146 -> 149 [color = white, style = solid]
	222 -> 224 [color = white, style = solid]
	50 -> 51 [color = white, style = solid]
	93 -> 209 [color = black, style = solid, constraint = false]
	128 -> 129 [color = black, style = dotted]
	69 -> 70 [color = black, style = dotted]
	260 -> 261 [color = white, style = solid]
	187 -> 190 [color = white, style = solid]
	162 -> 163 [color = white, style = solid]
	198 -> 238 [color = white, style = solid]
	264 -> 265 [color = white, style = solid]
	202 -> 203 [color = white, style = solid]
	274 -> 289 [color = white, style = solid]
	163 -> 166 [color = white, style = solid]
	45 -> 61 [color = black, style = solid, constraint = false]
	271 -> 273 [color = white, style = solid]
	235 -> 271 [color = black, style = solid, constraint = false]
	137 -> 141 [color = black, style = dotted]
	156 -> 157 [color = white, style = solid]
	134 -> 137 [color = black, style = dotted]
	84 -> 87 [color = white, style = solid]
	183 -> 186 [color = white, style = solid]
	52 -> 55 [color = white, style = solid]
	161 -> 168 [color = white, style = solid]
	207 -> 209 [color = white, style = solid]
	70 -> 72 [color = black, style = dotted]
	209 -> 241 [color = white, style = solid]
	182 -> 183 [color = white, style = solid]
	186 -> 188 [color = white, style = solid]
	82 -> 84 [color = white, style = solid]
	250 -> 252 [color = white, style = solid]
	114 -> 128 [color = black, style = dotted]
	221 -> 222 [color = white, style = solid]
	226 -> 228 [color = white, style = solid]
	225 -> 226 [color = white, style = solid]
	209 -> 211 [color = black, style = solid, constraint = false]
	267 -> 271 [color = white, style = solid]
	80 -> 88 [color = white, style = solid]
	129 -> 130 [color = black, style = dotted]
	63 -> 67 [color = white, style = solid]
	155 -> 156 [color = white, style = solid]
	49 -> 50 [color = white, style = solid]
	145 -> 146 [color = black, style = dotted]
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		45  [label = "340a: assume(reset_task_ready == 0);"]
	}
	subgraph cluster4 {
		label = napi_thread
		color = blue
		222  [label = "328b: napi_sem = 1;"]
		87  [label = "329a: assume(napi_scheduled == 0);"]
		81  [label = "328a: assume(napi_sem == 0);"]
		41  [label = "329a: assume(napi_scheduled == 0);"]
		224  [label = "332a: napi_sem = 0;"]
		84  [label = "332a: napi_sem = 0;"]
		82  [label = "328b: napi_sem = 1;"]
		221  [label = "328a: assume(napi_sem == 0);"]
	}
	subgraph cluster7 {
		label = dev_thread
		color = blue
		93  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		174  [label = "244: dev_lock = 5;"]
		104  [label = "388: registered = 1;"]
		187  [label = "638: want_sysfs = 5;"]
		173  [label = "243: assume(dev_lock == 0);"]
		98  [label = "477: hw_start = drv_hw_start;"]
		282  [label = "250a: dev_lock = 0;"]
		80  [label = "452: sysfs_registered = 1;"]
		276  [label = "399: assume(!(netif_running != 0));"]
		119  [label = "482: ret4 = 0;"]
		77  [label = "629b: sysfs_lock = 1;"]
		198  [label = "647a: sysfs_lock = 0;"]
		196  [label = "457: sysfs_registered = 0;"]
		175  [label = "245: want_dev = 0;"]
		158  [label = "237: probe1 = ret4;"]
		192  [label = "642: want_sysfs = 0;"]
		76  [label = "629a: assume(sysfs_lock == 0);"]
		115  [label = "476: rc1 = ret2;"]
		118  [label = "479b: assume(!(rc1 < 0));"]
		190  [label = "640: assume(sysfs_lock == 0);"]
		168  [label = "241: want_dev = 5;"]
		105  [label = "389: ret2 = 0;"]
		191  [label = "641: sysfs_lock = 5;"]
		161  [label = "238a: assume(probe1 == 0);"]
		88  [label = "631a: sysfs_lock = 0;"]
		238  [label = "398: registered = 0;"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		134  [label = "498b: assume(!(rc2 < 0));"]
		217  [label = "591: assert(dev_on != 0);"]
		49  [label = "277a: assume(rtnl_lock == 0);"]
		171  [label = "560: reset_task_ready = 1;"]
		166  [label = "261a: assume(open1 == 0);"]
		215  [label = "611a: val = 0;"]
		182  [label = "290a: assume(rtnl_lock == 0);"]
		163  [label = "260: open1 = ret1;"]
		225  [label = "446a: assume(irq_sem == 0);"]
		236  [label = "427a: assume(napi_sem == 0);"]
		226  [label = "446b: irq_sem = 1;"]
		186  [label = "291a: assume(netif_running != 0);"]
		211  [label = "416: irq_enabled = 0;"]
		156  [label = "277a: assume(rtnl_lock == 0);"]
		129  [label = "407: ret3 = 0;"]
		151  [label = "279: ret1 = ret5;"]
		231  [label = "615: dev_on = 0;"]
		35  [label = "278b: assume(!(registered != 0));"]
		155  [label = "281: netif_running = 1;"]
		154  [label = "280a: assume(ret1 == 0);"]
		188  [label = "292: netif_running = 0;"]
		228  [label = "447a: irq_sem = 0;"]
		55  [label = "261a: assume(open1 == 0);"]
		143  [label = "604a: val = 1;"]
		51  [label = "284a: rtnl_lock = 0;"]
		61  [label = "560: reset_task_ready = 1;"]
		218  [label = "592: IntrMask = val;"]
		52  [label = "260: open1 = ret1;"]
		145  [label = "591: assert(dev_on != 0);"]
		69  [label = "290a: assume(rtnl_lock == 0);"]
		130  [label = "496: rc2 = ret3;"]
		150  [label = "492a: assert(hw_start != 0);"]
		33  [label = "275: ret1 = 0;"]
		157  [label = "277b: rtnl_lock = 1;"]
		106  [label = "295a: rtnl_lock = 0;"]
		72  [label = "291b: assume(!(netif_running != 0));"]
		183  [label = "290b: rtnl_lock = 1;"]
		246  [label = "295a: rtnl_lock = 0;"]
		114  [label = "278a: assume(registered != 0);"]
		162  [label = "284a: rtnl_lock = 0;"]
		141  [label = "603: dev_on = 1;"]
		146  [label = "592: IntrMask = val;"]
		70  [label = "290b: rtnl_lock = 1;"]
		149  [label = "503: ret5 = 0;"]
		142  [label = "605: intr_mask = 1;"]
		132  [label = "494: IntrMask = 0;"]
		237  [label = "427b: napi_sem = 1;"]
		128  [label = "406: irq_enabled = 1;"]
		50  [label = "277b: rtnl_lock = 1;"]
		112  [label = "275: ret1 = 0;"]
		137  [label = "421: napi_enabled = 1;"]
		235  [label = "426: napi_enabled = 0;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		252  [label = "534a: val = status1;"]
		241  [label = "307: assert(intr_mask != 0);"]
		248  [label = "524: handled2 = 0;"]
		267  [label = "530: intr_mask = 0;"]
		209  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		250  [label = "526: status1 = IntrStatus;"]
		256  [label = "598: IntrStatus = IntrStatus & (~val);"]
		58  [label = "305a: assume(irq_sem == 0);"]
		63  [label = "310a: irq_sem = 0;"]
		202  [label = "305a: assume(irq_sem == 0);"]
		289  [label = "537: assume(!status1);"]
		264  [label = "591: assert(dev_on != 0);"]
		67  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		203  [label = "305b: irq_sem = 1;"]
		254  [label = "597: assert(dev_on != 0);", color = red]
		271  [label = "433b: assume(!(napi_enabled != 0));"]
		265  [label = "592: IntrMask = val;"]
		59  [label = "305b: irq_sem = 1;"]
		260  [label = "528a: assume(intr_mask != 0);"]
		207  [label = "310a: irq_sem = 0;"]
		261  [label = "529a: val = 0;"]
		273  [label = "532: handled2 = 1;"]
		274  [label = "535: status1 = IntrStatus;"]
	}
}
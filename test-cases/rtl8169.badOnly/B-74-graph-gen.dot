digraph Counterexample {
	215 -> 216 [color = white, style = solid]
	203 -> 204 [color = white, style = solid]
	160 -> 179 [color = white, style = solid]
	267 -> 268 [color = white, style = solid]
	204 -> 206 [color = white, style = solid]
	185 -> 187 [color = white, style = solid]
	224 -> 226 [color = white, style = solid]
	142 -> 143 [color = white, style = solid]
	236 -> 238 [color = white, style = solid]
	250 -> 266 [color = white, style = solid]
	36 -> 103 [color = black, style = solid, constraint = false]
	148 -> 158 [color = white, style = solid]
	123 -> 124 [color = white, style = solid]
	40 -> 41 [color = white, style = solid]
	181 -> 192 [color = white, style = solid]
	235 -> 236 [color = white, style = solid]
	171 -> 174 [color = white, style = solid]
	228 -> 232 [color = white, style = solid]
	216 -> 218 [color = white, style = solid]
	155 -> 159 [color = white, style = solid]
	247 -> 248 [color = white, style = solid]
	89 -> 94 [color = black, style = solid, constraint = false]
	133 -> 134 [color = white, style = solid]
	41 -> 42 [color = white, style = solid]
	175 -> 176 [color = white, style = solid]
	139 -> 147 [color = white, style = solid]
	68 -> 69 [color = white, style = solid]
	143 -> 157 [color = white, style = solid]
	197 -> 200 [color = white, style = solid]
	176 -> 180 [color = black, style = solid, constraint = false]
	258 -> 259 [color = white, style = solid]
	159 -> 160 [color = white, style = solid]
	112 -> 116 [color = white, style = solid]
	222 -> 223 [color = white, style = solid]
	29 -> 89 [color = black, style = solid, constraint = false]
	103 -> 104 [color = white, style = solid]
	200 -> 201 [color = white, style = solid]
	176 -> 194 [color = white, style = solid]
	26 -> 29 [color = white, style = solid]
	107 -> 109 [color = white, style = solid]
	90 -> 120 [color = white, style = solid]
	60 -> 62 [color = white, style = solid]
	206 -> 235 [color = white, style = solid]
	120 -> 123 [color = white, style = solid]
	255 -> 258 [color = white, style = solid]
	94 -> 175 [color = black, style = solid, constraint = false]
	179 -> 181 [color = white, style = solid]
	82 -> 92 [color = white, style = solid]
	32 -> 33 [color = white, style = solid]
	71 -> 82 [color = white, style = solid]
	53 -> 54 [color = white, style = solid]
	105 -> 107 [color = white, style = solid]
	141 -> 142 [color = white, style = solid]
	109 -> 112 [color = white, style = solid]
	187 -> 190 [color = white, style = solid]
	242 -> 246 [color = white, style = solid]
	272 -> 273 [color = white, style = solid]
	218 -> 228 [color = white, style = solid]
	190 -> 215 [color = white, style = solid]
	266 -> 267 [color = white, style = solid]
	268 -> 275 [color = white, style = solid]
	69 -> 71 [color = white, style = solid]
	45 -> 68 [color = white, style = solid]
	118 -> 133 [color = white, style = solid]
	238 -> 253 [color = white, style = solid]
	151 -> 155 [color = white, style = solid]
	159 -> 228 [color = black, style = solid, constraint = false]
	253 -> 255 [color = white, style = solid]
	54 -> 57 [color = white, style = solid]
	223 -> 224 [color = white, style = solid]
	128 -> 137 [color = white, style = solid]
	34 -> 36 [color = white, style = solid]
	92 -> 94 [color = white, style = solid]
	232 -> 240 [color = white, style = solid]
	240 -> 242 [color = white, style = solid]
	201 -> 203 [color = white, style = solid]
	94 -> 103 [color = white, style = solid]
	42 -> 45 [color = white, style = solid]
	125 -> 128 [color = white, style = solid]
	196 -> 197 [color = white, style = solid]
	89 -> 90 [color = white, style = solid]
	180 -> 183 [color = white, style = solid]
	57 -> 60 [color = white, style = solid]
	194 -> 222 [color = white, style = solid]
	137 -> 141 [color = white, style = solid]
	275 -> 276 [color = white, style = solid]
	192 -> 196 [color = white, style = solid]
	184 -> 185 [color = white, style = solid]
	248 -> 250 [color = white, style = solid]
	204 -> 242 [color = black, style = solid, constraint = false]
	158 -> 159 [color = black, style = solid, constraint = false]
	150 -> 151 [color = white, style = solid]
	250 -> 258 [color = black, style = solid, constraint = false]
	162 -> 175 [color = white, style = solid]
	62 -> 89 [color = white, style = solid]
	117 -> 118 [color = white, style = solid]
	134 -> 139 [color = white, style = solid]
	157 -> 162 [color = white, style = solid]
	235 -> 266 [color = black, style = solid, constraint = false]
	147 -> 171 [color = white, style = solid]
	174 -> 180 [color = white, style = solid]
	36 -> 150 [color = white, style = solid]
	39 -> 40 [color = white, style = solid]
	246 -> 247 [color = white, style = solid]
	183 -> 184 [color = white, style = solid]
	124 -> 125 [color = white, style = solid]
	259 -> 262 [color = white, style = solid]
	262 -> 272 [color = white, style = solid]
	134 -> 159 [color = black, style = solid, constraint = false]
	33 -> 34 [color = white, style = solid]
	116 -> 117 [color = white, style = solid]
	36 -> 148 [color = black, style = solid, constraint = false]
	104 -> 105 [color = white, style = solid]
	29 -> 39 [color = white, style = solid]
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		78  [label = "340a: assume(reset_task_ready == 0);"]
	}
	subgraph cluster7 {
		label = dev_thread
		color = blue
		158  [label = "317: IntrStatus = 1;"]
		148  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		128  [label = "238a: assume(probe1 == 0);"]
		124  [label = "482: ret4 = 0;"]
		89  [label = "388: registered = 1;"]
		137  [label = "638: want_sysfs = 5;"]
		60  [label = "631a: sysfs_lock = 0;"]
		224  [label = "245: want_dev = 0;"]
		194  [label = "241: want_dev = 5;"]
		141  [label = "640: assume(sysfs_lock == 0);"]
		54  [label = "629b: sysfs_lock = 1;"]
		142  [label = "641: sysfs_lock = 5;"]
		226  [label = "250a: dev_lock = 0;"]
		62  [label = "477: hw_start = drv_hw_start;"]
		90  [label = "389: ret2 = 0;"]
		222  [label = "243: assume(dev_lock == 0);"]
		175  [label = "398: registered = 0;"]
		123  [label = "479b: assume(!(rc1 < 0));"]
		176  [label = "399: assume(!(netif_running != 0));"]
		53  [label = "629a: assume(sysfs_lock == 0);"]
		125  [label = "237: probe1 = ret4;"]
		162  [label = "647a: sysfs_lock = 0;"]
		223  [label = "244: dev_lock = 5;"]
		120  [label = "476: rc1 = ret2;"]
		143  [label = "642: want_sysfs = 0;"]
		157  [label = "457: sysfs_registered = 0;"]
		57  [label = "452: sysfs_registered = 1;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		179  [label = "524: handled2 = 0;"]
		272  [label = "535: status1 = IntrStatus;"]
		155  [label = "310a: irq_sem = 0;"]
		206  [label = "530: intr_mask = 0;"]
		34  [label = "310a: irq_sem = 0;"]
		181  [label = "526: status1 = IntrStatus;"]
		262  [label = "528b: assume(!(intr_mask != 0));"]
		201  [label = "529a: val = 0;"]
		238  [label = "532: handled2 = 1;"]
		160  [label = "307: assert(intr_mask != 0);"]
		203  [label = "591: assert(dev_on != 0);"]
		197  [label = "598: IntrStatus = IntrStatus & (~val);"]
		258  [label = "597: assert(dev_on != 0);", color = red]
		33  [label = "305b: irq_sem = 1;"]
		159  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		192  [label = "534a: val = status1;"]
		150  [label = "305a: assume(irq_sem == 0);"]
		196  [label = "597: assert(dev_on != 0);"]
		32  [label = "305a: assume(irq_sem == 0);"]
		151  [label = "305b: irq_sem = 1;"]
		259  [label = "598: IntrStatus = IntrStatus & (~val);"]
		253  [label = "535: status1 = IntrStatus;"]
		273  [label = "537: assume(!status1);"]
		235  [label = "433a: assume(napi_enabled != 0);"]
		200  [label = "528a: assume(intr_mask != 0);"]
		255  [label = "534a: val = status1;"]
		236  [label = "434: napi_scheduled = 1;"]
		204  [label = "592: IntrMask = val;"]
		36  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		116  [label = "603: dev_on = 1;"]
		82  [label = "295a: rtnl_lock = 0;"]
		107  [label = "494: IntrMask = 0;"]
		246  [label = "446a: assume(irq_sem == 0);"]
		248  [label = "447a: irq_sem = 0;"]
		118  [label = "604a: val = 1;"]
		183  [label = "277a: assume(rtnl_lock == 0);"]
		147  [label = "492a: assert(hw_start != 0);"]
		268  [label = "427b: napi_sem = 1;"]
		105  [label = "496: rc2 = ret3;"]
		171  [label = "279: ret1 = ret5;"]
		134  [label = "592: IntrMask = val;"]
		184  [label = "277b: rtnl_lock = 1;"]
		187  [label = "260: open1 = ret1;"]
		40  [label = "277b: rtnl_lock = 1;"]
		218  [label = "291a: assume(netif_running != 0);"]
		216  [label = "290b: rtnl_lock = 1;"]
		71  [label = "291b: assume(!(netif_running != 0));"]
		242  [label = "592: IntrMask = val;"]
		109  [label = "498b: assume(!(rc2 < 0));"]
		185  [label = "284a: rtnl_lock = 0;"]
		68  [label = "290a: assume(rtnl_lock == 0);"]
		69  [label = "290b: rtnl_lock = 1;"]
		42  [label = "260: open1 = ret1;"]
		240  [label = "591: assert(dev_on != 0);"]
		250  [label = "615: dev_on = 0;"]
		104  [label = "407: ret3 = 0;"]
		247  [label = "446b: irq_sem = 1;"]
		232  [label = "611a: val = 0;"]
		103  [label = "406: irq_enabled = 1;"]
		41  [label = "284a: rtnl_lock = 0;"]
		180  [label = "281: netif_running = 1;"]
		133  [label = "591: assert(dev_on != 0);"]
		45  [label = "261a: assume(open1 == 0);"]
		94  [label = "278a: assume(registered != 0);"]
		275  [label = "292: netif_running = 0;"]
		29  [label = "278b: assume(!(registered != 0));"]
		26  [label = "275: ret1 = 0;"]
		39  [label = "277a: assume(rtnl_lock == 0);"]
		92  [label = "275: ret1 = 0;"]
		215  [label = "290a: assume(rtnl_lock == 0);"]
		267  [label = "427a: assume(napi_sem == 0);"]
		228  [label = "416: irq_enabled = 0;"]
		117  [label = "605: intr_mask = 1;"]
		190  [label = "261a: assume(open1 == 0);"]
		112  [label = "421: napi_enabled = 1;"]
		174  [label = "280a: assume(ret1 == 0);"]
		276  [label = "295a: rtnl_lock = 0;"]
		266  [label = "426: napi_enabled = 0;"]
		139  [label = "503: ret5 = 0;"]
	}
}
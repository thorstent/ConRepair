digraph Counterexample {
	267 -> 268 [color = white, style = solid]
	107 -> 116 [color = black, style = dotted]
	191 -> 196 [color = white, style = solid]
	213 -> 214 [color = white, style = solid]
	202 -> 206 [color = white, style = solid]
	100 -> 105 [color = white, style = solid]
	146 -> 147 [color = white, style = solid]
	197 -> 198 [color = white, style = solid]
	60 -> 61 [color = white, style = solid]
	122 -> 125 [color = black, style = dotted]
	170 -> 171 [color = white, style = solid]
	83 -> 89 [color = black, style = dotted]
	59 -> 60 [color = white, style = solid]
	147 -> 191 [color = white, style = solid]
	227 -> 231 [color = white, style = solid]
	214 -> 218 [color = white, style = solid]
	125 -> 129 [color = black, style = dotted]
	51 -> 105 [color = black, style = solid, constraint = false]
	96 -> 98 [color = white, style = solid]
	49 -> 51 [color = white, style = solid]
	79 -> 81 [color = white, style = solid]
	161 -> 162 [color = white, style = solid]
	198 -> 227 [color = white, style = solid]
	282 -> 287 [color = white, style = solid]
	287 -> 289 [color = white, style = solid]
	106 -> 135 [color = white, style = solid]
	169 -> 170 [color = white, style = solid]
	158 -> 182 [color = black, style = solid, constraint = false]
	186 -> 187 [color = white, style = solid]
	118 -> 120 [color = black, style = dotted]
	69 -> 132 [color = black, style = solid, constraint = false]
	167 -> 169 [color = white, style = solid]
	296 -> 297 [color = white, style = solid]
	190 -> 241 [color = black, style = solid, constraint = false]
	190 -> 200 [color = white, style = solid]
	158 -> 161 [color = white, style = solid]
	268 -> 271 [color = white, style = solid]
	69 -> 73 [color = white, style = solid]
	34 -> 132 [color = white, style = solid]
	150 -> 151 [color = white, style = solid]
	236 -> 276 [color = white, style = solid]
	74 -> 76 [color = black, style = dotted]
	193 -> 263 [color = black, style = solid, constraint = false]
	273 -> 275 [color = white, style = solid]
	277 -> 282 [color = white, style = solid]
	145 -> 146 [color = white, style = solid]
	265 -> 267 [color = white, style = solid]
	105 -> 106 [color = white, style = solid]
	139 -> 140 [color = white, style = solid]
	233 -> 236 [color = white, style = solid]
	51 -> 59 [color = white, style = solid]
	263 -> 265 [color = white, style = solid]
	219 -> 220 [color = white, style = solid]
	65 -> 69 [color = white, style = solid]
	132 -> 232 [color = white, style = solid]
	301 -> 302 [color = white, style = solid]
	240 -> 241 [color = white, style = solid]
	130 -> 131 [color = black, style = dotted]
	78 -> 79 [color = white, style = solid]
	231 -> 240 [color = white, style = solid]
	81 -> 150 [color = white, style = solid]
	81 -> 154 [color = black, style = solid, constraint = false]
	151 -> 152 [color = white, style = solid]
	55 -> 96 [color = white, style = solid]
	297 -> 300 [color = white, style = solid]
	206 -> 210 [color = white, style = solid]
	154 -> 193 [color = white, style = solid]
	200 -> 201 [color = white, style = solid]
	138 -> 139 [color = white, style = solid]
	300 -> 301 [color = white, style = solid]
	144 -> 145 [color = white, style = solid]
	105 -> 107 [color = black, style = solid, constraint = false]
	182 -> 193 [color = black, style = solid, constraint = false]
	89 -> 107 [color = black, style = dotted]
	292 -> 294 [color = white, style = solid]
	62 -> 65 [color = white, style = solid]
	201 -> 202 [color = white, style = solid]
	275 -> 277 [color = white, style = solid]
	73 -> 74 [color = white, style = solid]
	162 -> 163 [color = white, style = solid]
	163 -> 166 [color = white, style = solid]
	98 -> 100 [color = white, style = solid]
	232 -> 233 [color = white, style = solid]
	81 -> 116 [color = black, style = solid, constraint = false]
	143 -> 144 [color = white, style = solid]
	54 -> 55 [color = white, style = solid]
	154 -> 182 [color = black, style = solid, constraint = false]
	135 -> 138 [color = white, style = solid]
	131 -> 149 [color = black, style = dotted]
	166 -> 167 [color = white, style = solid]
	256 -> 261 [color = white, style = solid]
	271 -> 273 [color = white, style = solid]
	222 -> 267 [color = black, style = solid, constraint = false]
	210 -> 213 [color = white, style = solid]
	140 -> 143 [color = white, style = solid]
	116 -> 117 [color = black, style = dotted]
	294 -> 296 [color = white, style = solid]
	182 -> 206 [color = black, style = solid, constraint = false]
	196 -> 197 [color = white, style = solid]
	172 -> 175 [color = white, style = solid]
	206 -> 74 [color = red, style = solid, constraint = false]
	171 -> 172 [color = white, style = solid]
	218 -> 219 [color = white, style = solid]
	61 -> 62 [color = white, style = solid]
	220 -> 222 [color = white, style = solid]
	34 -> 69 [color = black, style = solid, constraint = false]
	189 -> 190 [color = white, style = solid]
	261 -> 263 [color = white, style = solid]
	120 -> 122 [color = black, style = dotted]
	132 -> 180 [color = black, style = solid, constraint = false]
	175 -> 180 [color = white, style = solid]
	180 -> 186 [color = white, style = solid]
	76 -> 83 [color = black, style = dotted]
	152 -> 182 [color = white, style = solid]
	182 -> 256 [color = white, style = solid]
	222 -> 230 [color = white, style = solid]
	149 -> 158 [color = black, style = dotted]
	230 -> 232 [color = black, style = solid, constraint = false]
	77 -> 78 [color = white, style = solid]
	107 -> 240 [color = black, style = solid, constraint = false]
	241 -> 251 [color = white, style = solid]
	289 -> 292 [color = white, style = solid]
	187 -> 189 [color = white, style = solid]
	129 -> 130 [color = black, style = dotted]
	117 -> 118 [color = black, style = dotted]
	subgraph cluster7 {
		label = dev_thread
		color = blue
		154  [label = "317: IntrStatus = 1;"]
		193  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		232  [label = "565a: assume(rtnl_lock == 0);"]
		236  [label = "568b: assume(!((!netif_running) == 0));"]
		276  [label = "342: reset_task_ready = 0;"]
		34  [label = "340a: assume(reset_task_ready == 0);"]
		132  [label = "340b: assume(!(reset_task_ready == 0));"]
		233  [label = "565b: rtnl_lock = 1;"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		49  [label = "275: ret1 = 0;"]
		131  [label = "604a: val = 1;"]
		210  [label = "611a: val = 0;"]
		201  [label = "427a: assume(napi_sem == 0);"]
		158  [label = "592: IntrMask = val;"]
		220  [label = "447a: irq_sem = 0;"]
		167  [label = "281: netif_running = 1;"]
		83  [label = "295a: rtnl_lock = 0;"]
		130  [label = "605: intr_mask = 1;"]
		218  [label = "446a: assume(irq_sem == 0);"]
		187  [label = "290b: rtnl_lock = 1;"]
		65  [label = "261a: assume(open1 == 0);"]
		129  [label = "603: dev_on = 1;"]
		169  [label = "277a: assume(rtnl_lock == 0);"]
		213  [label = "591: assert(dev_on != 0);"]
		118  [label = "496: rc2 = ret3;"]
		107  [label = "278a: assume(registered != 0);"]
		117  [label = "407: ret3 = 0;"]
		122  [label = "498b: assume(!(rc2 < 0));"]
		202  [label = "427b: napi_sem = 1;"]
		219  [label = "446b: irq_sem = 1;"]
		186  [label = "290a: assume(rtnl_lock == 0);"]
		149  [label = "591: assert(dev_on != 0);"]
		166  [label = "280a: assume(ret1 == 0);"]
		172  [label = "260: open1 = ret1;"]
		230  [label = "295a: rtnl_lock = 0;"]
		163  [label = "279: ret1 = ret5;"]
		189  [label = "291a: assume(netif_running != 0);"]
		61  [label = "284a: rtnl_lock = 0;"]
		190  [label = "292: netif_running = 0;"]
		76  [label = "291b: assume(!(netif_running != 0));"]
		214  [label = "592: IntrMask = val;"]
		69  [label = "560: reset_task_ready = 1;"]
		206  [label = "416: irq_enabled = 0;"]
		161  [label = "503: ret5 = 0;"]
		116  [label = "406: irq_enabled = 1;"]
		171  [label = "284a: rtnl_lock = 0;"]
		180  [label = "560: reset_task_ready = 1;"]
		175  [label = "261a: assume(open1 == 0);"]
		222  [label = "615: dev_on = 0;"]
		200  [label = "426: napi_enabled = 0;"]
		60  [label = "277b: rtnl_lock = 1;"]
		62  [label = "260: open1 = ret1;"]
		74  [label = "290b: rtnl_lock = 1;"]
		125  [label = "421: napi_enabled = 1;"]
		73  [label = "290a: assume(rtnl_lock == 0);"]
		162  [label = "492a: assert(hw_start != 0);"]
		51  [label = "278b: assume(!(registered != 0));"]
		59  [label = "277a: assume(rtnl_lock == 0);"]
		170  [label = "277b: rtnl_lock = 1;"]
		120  [label = "494: IntrMask = 0;"]
		89  [label = "275: ret1 = 0;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		282  [label = "530: intr_mask = 0;"]
		275  [label = "591: assert(dev_on != 0);"]
		261  [label = "524: handled2 = 0;"]
		267  [label = "597: assert(dev_on != 0);", color = red]
		81  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		277  [label = "592: IntrMask = val;"]
		78  [label = "305b: irq_sem = 1;"]
		292  [label = "535: status1 = IntrStatus;"]
		77  [label = "305a: assume(irq_sem == 0);"]
		79  [label = "310a: irq_sem = 0;"]
		302  [label = "537: assume(!status1);"]
		271  [label = "528a: assume(intr_mask != 0);"]
		300  [label = "528b: assume(!(intr_mask != 0));"]
		294  [label = "534a: val = status1;"]
		182  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		287  [label = "433b: assume(!(napi_enabled != 0));"]
		297  [label = "598: IntrStatus = IntrStatus & (~val);"]
		150  [label = "305a: assume(irq_sem == 0);"]
		152  [label = "310a: irq_sem = 0;"]
		273  [label = "529a: val = 0;"]
		151  [label = "305b: irq_sem = 1;"]
		289  [label = "532: handled2 = 1;"]
		263  [label = "526: status1 = IntrStatus;"]
		301  [label = "535: status1 = IntrStatus;"]
		256  [label = "307: assert(intr_mask != 0);"]
		268  [label = "598: IntrStatus = IntrStatus & (~val);"]
		265  [label = "534a: val = status1;"]
		296  [label = "597: assert(dev_on != 0);"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		196  [label = "640: assume(sysfs_lock == 0);"]
		146  [label = "244: dev_lock = 5;"]
		135  [label = "476: rc1 = ret2;"]
		100  [label = "477: hw_start = drv_hw_start;"]
		227  [label = "457: sysfs_registered = 0;"]
		55  [label = "629b: sysfs_lock = 1;"]
		54  [label = "629a: assume(sysfs_lock == 0);"]
		143  [label = "238a: assume(probe1 == 0);"]
		191  [label = "638: want_sysfs = 5;"]
		98  [label = "631a: sysfs_lock = 0;"]
		144  [label = "241: want_dev = 5;"]
		231  [label = "647a: sysfs_lock = 0;"]
		105  [label = "388: registered = 1;"]
		240  [label = "398: registered = 0;"]
		251  [label = "250a: dev_lock = 0;"]
		241  [label = "399: assume(!(netif_running != 0));"]
		106  [label = "389: ret2 = 0;"]
		147  [label = "245: want_dev = 0;"]
		139  [label = "482: ret4 = 0;"]
		96  [label = "452: sysfs_registered = 1;"]
		140  [label = "237: probe1 = ret4;"]
		145  [label = "243: assume(dev_lock == 0);"]
		138  [label = "479b: assume(!(rc1 < 0));"]
		197  [label = "641: sysfs_lock = 5;"]
		198  [label = "642: want_sysfs = 0;"]
	}
}
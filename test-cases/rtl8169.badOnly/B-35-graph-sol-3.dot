digraph Counterexample {
	29 -> 31 [color = white, style = solid]
	234 -> 236 [color = white, style = solid]
	99 -> 100 [color = white, style = solid]
	201 -> 276 [color = white, style = solid]
	246 -> 276 [color = black, style = solid, constraint = false]
	209 -> 211 [color = white, style = solid]
	295 -> 308 [color = white, style = solid]
	94 -> 95 [color = black, style = dotted]
	76 -> 77 [color = white, style = solid]
	86 -> 163 [color = white, style = solid]
	89 -> 99 [color = white, style = solid]
	243 -> 246 [color = white, style = solid]
	154 -> 155 [color = white, style = solid]
	198 -> 202 [color = white, style = solid]
	109 -> 114 [color = black, style = dotted]
	261 -> 262 [color = white, style = solid]
	165 -> 171 [color = white, style = solid]
	184 -> 186 [color = white, style = solid]
	129 -> 131 [color = white, style = solid]
	61 -> 68 [color = white, style = solid]
	226 -> 230 [color = white, style = solid]
	80 -> 81 [color = white, style = solid]
	314 -> 319 [color = white, style = solid]
	130 -> 136 [color = black, style = dotted]
	203 -> 206 [color = white, style = solid]
	77 -> 80 [color = white, style = solid]
	186 -> 192 [color = black, style = solid, constraint = false]
	141 -> 142 [color = white, style = solid]
	43 -> 65 [color = white, style = solid]
	75 -> 113 [color = black, style = solid, constraint = false]
	265 -> 297 [color = white, style = solid]
	81 -> 82 [color = white, style = solid]
	307 -> 314 [color = white, style = solid]
	161 -> 162 [color = white, style = solid]
	267 -> 269 [color = white, style = solid]
	35 -> 118 [color = black, style = solid, constraint = false]
	87 -> 90 [color = black, style = dotted]
	82 -> 85 [color = white, style = solid]
	158 -> 180 [color = white, style = solid]
	100 -> 101 [color = white, style = solid]
	172 -> 176 [color = white, style = solid]
	309 -> 312 [color = white, style = solid]
	179 -> 195 [color = white, style = solid]
	90 -> 91 [color = black, style = dotted]
	65 -> 225 [color = black, style = solid, constraint = false]
	173 -> 209 [color = white, style = solid]
	145 -> 149 [color = white, style = solid]
	56 -> 61 [color = white, style = solid]
	106 -> 109 [color = black, style = dotted]
	308 -> 309 [color = white, style = solid]
	269 -> 273 [color = white, style = solid]
	262 -> 263 [color = white, style = solid]
	105 -> 106 [color = black, style = dotted]
	211 -> 212 [color = white, style = solid]
	212 -> 213 [color = white, style = solid]
	123 -> 163 [color = black, style = solid, constraint = false]
	281 -> 283 [color = white, style = solid]
	192 -> 199 [color = black, style = solid, constraint = false]
	118 -> 192 [color = white, style = solid]
	101 -> 113 [color = white, style = solid]
	284 -> 286 [color = white, style = solid]
	237 -> 241 [color = white, style = solid]
	140 -> 141 [color = white, style = solid]
	224 -> 225 [color = white, style = solid]
	122 -> 123 [color = black, style = dotted]
	131 -> 140 [color = white, style = solid]
	51 -> 148 [color = white, style = solid]
	292 -> 293 [color = white, style = solid]
	283 -> 284 [color = white, style = solid]
	305 -> 307 [color = white, style = solid]
	116 -> 120 [color = black, style = dotted]
	300 -> 304 [color = white, style = solid]
	171 -> 173 [color = white, style = solid]
	242 -> 243 [color = white, style = solid]
	230 -> 234 [color = white, style = solid]
	163 -> 164 [color = white, style = solid]
	215 -> 216 [color = white, style = solid]
	176 -> 186 [color = black, style = solid, constraint = false]
	263 -> 265 [color = white, style = solid]
	91 -> 92 [color = black, style = dotted]
	113 -> 129 [color = white, style = solid]
	114 -> 116 [color = black, style = dotted]
	277 -> 280 [color = white, style = solid]
	40 -> 41 [color = white, style = solid]
	137 -> 138 [color = black, style = dotted]
	31 -> 35 [color = white, style = solid]
	213 -> 267 [color = white, style = solid]
	216 -> 218 [color = white, style = solid]
	293 -> 295 [color = white, style = solid]
	136 -> 137 [color = black, style = dotted]
	149 -> 160 [color = white, style = solid]
	95 -> 96 [color = black, style = dotted]
	286 -> 290 [color = white, style = solid]
	96 -> 97 [color = black, style = dotted]
	180 -> 211 [color = black, style = solid, constraint = false]
	236 -> 237 [color = white, style = solid]
	160 -> 161 [color = white, style = solid]
	121 -> 122 [color = black, style = dotted]
	297 -> 300 [color = white, style = solid]
	75 -> 76 [color = white, style = solid]
	50 -> 56 [color = white, style = solid]
	280 -> 281 [color = white, style = solid]
	138 -> 209 [color = black, style = solid, constraint = false]
	28 -> 29 [color = white, style = solid]
	246 -> 249 [color = white, style = solid]
	86 -> 87 [color = black, style = solid, constraint = false]
	176 -> 179 [color = white, style = solid]
	85 -> 86 [color = white, style = solid]
	162 -> 172 [color = white, style = solid]
	254 -> 260 [color = white, style = solid]
	35 -> 131 [color = black, style = solid, constraint = false]
	260 -> 261 [color = white, style = solid]
	199 -> 201 [color = white, style = solid]
	202 -> 203 [color = white, style = solid]
	290 -> 292 [color = white, style = solid]
	35 -> 182 [color = white, style = solid]
	153 -> 154 [color = white, style = solid]
	97 -> 104 [color = black, style = dotted]
	41 -> 43 [color = white, style = solid]
	276 -> 277 [color = white, style = solid]
	312 -> 332 [color = white, style = solid]
	195 -> 198 [color = white, style = solid]
	186 -> 230 [color = black, style = solid, constraint = false]
	104 -> 105 [color = black, style = dotted]
	142 -> 145 [color = white, style = solid]
	173 -> 202 [color = black, style = solid, constraint = false]
	123 -> 130 [color = black, style = dotted]
	209 -> 86 [color = red, style = solid, constraint = false]
	188 -> 194 [color = white, style = solid]
	68 -> 75 [color = white, style = solid]
	218 -> 219 [color = white, style = solid]
	304 -> 305 [color = white, style = solid]
	164 -> 165 [color = white, style = solid]
	219 -> 224 [color = white, style = solid]
	138 -> 153 [color = white, style = solid]
	118 -> 186 [color = black, style = solid, constraint = false]
	182 -> 183 [color = white, style = solid]
	113 -> 171 [color = black, style = solid, constraint = false]
	186 -> 188 [color = white, style = solid]
	332 -> 334 [color = white, style = solid]
	120 -> 121 [color = black, style = dotted]
	241 -> 242 [color = white, style = solid]
	155 -> 158 [color = white, style = solid]
	206 -> 215 [color = white, style = solid]
	93 -> 94 [color = black, style = dotted]
	148 -> 254 [color = black, style = solid, constraint = false]
	183 -> 184 [color = white, style = solid]
	225 -> 226 [color = white, style = solid]
	249 -> 254 [color = white, style = solid]
	92 -> 93 [color = black, style = dotted]
	49 -> 50 [color = white, style = solid]
	194 -> 199 [color = white, style = solid]
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		148  [label = "340a: assume(reset_task_ready == 0);"]
		51  [label = "340a: assume(reset_task_ready == 0);"]
	}
	subgraph cluster4 {
		label = napi_thread
		color = blue
		43  [label = "329a: assume(napi_scheduled == 0);"]
		41  [label = "328b: napi_sem = 1;"]
		40  [label = "328a: assume(napi_sem == 0);"]
		65  [label = "332a: napi_sem = 0;"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		273  [label = "250a: dev_lock = 0;"]
		61  [label = "631a: sysfs_lock = 0;"]
		86  [label = "241: want_dev = 5;"]
		80  [label = "479b: assume(!(rc1 < 0));"]
		81  [label = "482: ret4 = 0;"]
		164  [label = "244: dev_lock = 5;"]
		165  [label = "245: want_dev = 0;"]
		211  [label = "640: assume(sysfs_lock == 0);"]
		75  [label = "388: registered = 1;"]
		77  [label = "476: rc1 = ret2;"]
		269  [label = "647a: sysfs_lock = 0;"]
		173  [label = "399: assume(!(netif_running != 0));"]
		56  [label = "452: sysfs_registered = 1;"]
		209  [label = "638: want_sysfs = 5;"]
		76  [label = "389: ret2 = 0;"]
		212  [label = "641: sysfs_lock = 5;"]
		163  [label = "243: assume(dev_lock == 0);"]
		171  [label = "398: registered = 0;"]
		50  [label = "629b: sysfs_lock = 1;"]
		267  [label = "457: sysfs_registered = 0;"]
		213  [label = "642: want_sysfs = 0;"]
		85  [label = "238a: assume(probe1 == 0);"]
		82  [label = "237: probe1 = ret4;"]
		68  [label = "477: hw_start = drv_hw_start;"]
		49  [label = "629a: assume(sysfs_lock == 0);"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		28  [label = "305a: assume(irq_sem == 0);"]
		332  [label = "535: status1 = IntrStatus;"]
		183  [label = "305b: irq_sem = 1;"]
		29  [label = "305b: irq_sem = 1;"]
		182  [label = "305a: assume(irq_sem == 0);"]
		280  [label = "528a: assume(intr_mask != 0);"]
		277  [label = "598: IntrStatus = IntrStatus & (~val);"]
		290  [label = "433b: assume(!(napi_enabled != 0));"]
		281  [label = "529a: val = 0;"]
		284  [label = "592: IntrMask = val;"]
		286  [label = "530: intr_mask = 0;"]
		293  [label = "535: status1 = IntrStatus;"]
		199  [label = "526: status1 = IntrStatus;"]
		309  [label = "598: IntrStatus = IntrStatus & (~val);"]
		312  [label = "528b: assume(!(intr_mask != 0));"]
		308  [label = "597: assert(dev_on != 0);"]
		292  [label = "532: handled2 = 1;"]
		31  [label = "310a: irq_sem = 0;"]
		295  [label = "534a: val = status1;"]
		186  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		188  [label = "307: assert(intr_mask != 0);"]
		201  [label = "534a: val = status1;"]
		334  [label = "537: assume(!status1);"]
		276  [label = "597: assert(dev_on != 0);", color = red]
		283  [label = "591: assert(dev_on != 0);"]
		35  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		194  [label = "524: handled2 = 0;"]
		184  [label = "310a: irq_sem = 0;"]
	}
	subgraph cluster7 {
		label = dev_thread
		color = blue
		192  [label = "317: IntrStatus = 1;"]
		118  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster6 {
		label = sysfs_thread
		color = blue
		138  [label = "358: want_sysfs = 0;"]
		106  [label = "374a: off = nondet1;"]
		109  [label = "585: nondet2 = nondet_int();"]
		116  [label = "364: want_dev = 6;"]
		92  [label = "368: want_dev = 0;"]
		105  [label = "373: nondet1 = nondet_int();"]
		91  [label = "367: dev_lock = 6;"]
		120  [label = "366: assume(dev_lock == 0);"]
		155  [label = "374a: off = nondet1;"]
		95  [label = "356: assume(sysfs_lock == 0);"]
		87  [label = "364: want_dev = 6;"]
		122  [label = "368: want_dev = 0;"]
		130  [label = "354: want_sysfs = 6;"]
		93  [label = "376a: dev_lock = 0;"]
		104  [label = "372a: assume(sysfs_registered != 0);"]
		123  [label = "376a: dev_lock = 0;"]
		97  [label = "358: want_sysfs = 0;"]
		153  [label = "372a: assume(sysfs_registered != 0);"]
		121  [label = "367: dev_lock = 6;"]
		137  [label = "357: sysfs_lock = 6;"]
		114  [label = "377a: sysfs_lock = 0;"]
		180  [label = "377a: sysfs_lock = 0;"]
		154  [label = "373: nondet1 = nondet_int();"]
		90  [label = "366: assume(dev_lock == 0);"]
		136  [label = "356: assume(sysfs_lock == 0);"]
		96  [label = "357: sysfs_lock = 6;"]
		94  [label = "354: want_sysfs = 6;"]
		158  [label = "585: nondet2 = nondet_int();"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		129  [label = "492a: assert(hw_start != 0);"]
		162  [label = "604a: val = 1;"]
		176  [label = "592: IntrMask = val;"]
		226  [label = "427b: napi_sem = 1;"]
		304  [label = "290a: assume(rtnl_lock == 0);"]
		203  [label = "260: open1 = ret1;"]
		145  [label = "498b: assume(!(rc2 < 0));"]
		249  [label = "295a: rtnl_lock = 0;"]
		225  [label = "427a: assume(napi_sem == 0);"]
		243  [label = "447a: irq_sem = 0;"]
		101  [label = "284a: rtnl_lock = 0;"]
		237  [label = "592: IntrMask = val;"]
		202  [label = "281: netif_running = 1;"]
		297  [label = "260: open1 = ret1;"]
		260  [label = "275: ret1 = 0;"]
		241  [label = "446a: assume(irq_sem == 0);"]
		172  [label = "591: assert(dev_on != 0);"]
		149  [label = "421: napi_enabled = 1;"]
		218  [label = "291a: assume(netif_running != 0);"]
		216  [label = "290b: rtnl_lock = 1;"]
		161  [label = "605: intr_mask = 1;"]
		131  [label = "494: IntrMask = 0;"]
		224  [label = "426: napi_enabled = 0;"]
		219  [label = "292: netif_running = 0;"]
		234  [label = "611a: val = 0;"]
		261  [label = "277a: assume(rtnl_lock == 0);"]
		141  [label = "407: ret3 = 0;"]
		262  [label = "277b: rtnl_lock = 1;"]
		319  [label = "560: reset_task_ready = 1;"]
		206  [label = "261a: assume(open1 == 0);"]
		254  [label = "560: reset_task_ready = 1;"]
		307  [label = "291b: assume(!(netif_running != 0));"]
		100  [label = "277b: rtnl_lock = 1;"]
		160  [label = "603: dev_on = 1;"]
		142  [label = "496: rc2 = ret3;"]
		230  [label = "416: irq_enabled = 0;"]
		300  [label = "261a: assume(open1 == 0);"]
		195  [label = "279: ret1 = ret5;"]
		265  [label = "278b: assume(!(registered != 0));"]
		140  [label = "406: irq_enabled = 1;"]
		246  [label = "615: dev_on = 0;"]
		263  [label = "284a: rtnl_lock = 0;"]
		215  [label = "290a: assume(rtnl_lock == 0);"]
		179  [label = "503: ret5 = 0;"]
		314  [label = "295a: rtnl_lock = 0;"]
		113  [label = "278a: assume(registered != 0);"]
		99  [label = "277a: assume(rtnl_lock == 0);"]
		236  [label = "591: assert(dev_on != 0);"]
		242  [label = "446b: irq_sem = 1;"]
		198  [label = "280a: assume(ret1 == 0);"]
		305  [label = "290b: rtnl_lock = 1;"]
		89  [label = "275: ret1 = 0;"]
	}
}
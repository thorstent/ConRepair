digraph Counterexample {
	157 -> 158 [color = white, style = solid]
	99 -> 100 [color = white, style = solid]
	191 -> 196 [color = white, style = solid]
	154 -> 161 [color = white, style = solid]
	188 -> 190 [color = white, style = solid]
	40 -> 82 [color = black, style = solid, constraint = false]
	228 -> 229 [color = white, style = solid]
	40 -> 156 [color = white, style = solid]
	252 -> 254 [color = white, style = solid]
	269 -> 270 [color = white, style = solid]
	35 -> 59 [color = white, style = solid]
	120 -> 121 [color = white, style = solid]
	216 -> 217 [color = white, style = solid]
	56 -> 58 [color = white, style = solid]
	239 -> 268 [color = white, style = solid]
	58 -> 93 [color = white, style = solid]
	73 -> 75 [color = white, style = solid]
	59 -> 60 [color = white, style = solid]
	222 -> 225 [color = white, style = solid]
	124 -> 129 [color = white, style = solid]
	233 -> 239 [color = white, style = solid]
	173 -> 233 [color = white, style = solid]
	241 -> 244 [color = white, style = solid]
	229 -> 248 [color = white, style = solid]
	72 -> 73 [color = white, style = solid]
	108 -> 142 [color = white, style = solid]
	136 -> 137 [color = white, style = solid]
	98 -> 99 [color = white, style = solid]
	135 -> 136 [color = white, style = solid]
	270 -> 271 [color = white, style = solid]
	161 -> 162 [color = white, style = solid]
	67 -> 69 [color = white, style = solid]
	174 -> 177 [color = white, style = solid]
	166 -> 171 [color = white, style = solid]
	151 -> 154 [color = white, style = solid]
	105 -> 108 [color = white, style = solid]
	29 -> 30 [color = white, style = solid]
	209 -> 210 [color = white, style = solid]
	190 -> 191 [color = white, style = solid]
	203 -> 207 [color = white, style = solid]
	254 -> 255 [color = white, style = solid]
	162 -> 163 [color = black, style = solid, constraint = false]
	263 -> 266 [color = white, style = solid]
	268 -> 269 [color = white, style = solid]
	51 -> 52 [color = white, style = solid]
	150 -> 151 [color = white, style = solid]
	52 -> 56 [color = white, style = solid]
	124 -> 142 [color = black, style = solid, constraint = false]
	118 -> 120 [color = white, style = solid]
	237 -> 241 [color = white, style = solid]
	266 -> 282 [color = white, style = solid]
	210 -> 235 [color = white, style = solid]
	60 -> 63 [color = white, style = solid]
	282 -> 284 [color = white, style = solid]
	257 -> 261 [color = white, style = solid]
	86 -> 111 [color = white, style = solid]
	104 -> 105 [color = white, style = solid]
	163 -> 164 [color = white, style = solid]
	69 -> 86 [color = white, style = solid]
	179 -> 180 [color = white, style = solid]
	38 -> 40 [color = white, style = solid]
	241 -> 261 [color = black, style = solid, constraint = false]
	235 -> 236 [color = white, style = solid]
	180 -> 181 [color = white, style = solid]
	82 -> 163 [color = black, style = solid, constraint = false]
	37 -> 38 [color = white, style = solid]
	219 -> 221 [color = white, style = solid]
	36 -> 37 [color = white, style = solid]
	30 -> 35 [color = white, style = solid]
	140 -> 144 [color = white, style = solid]
	236 -> 237 [color = white, style = solid]
	100 -> 103 [color = white, style = solid]
	172 -> 173 [color = white, style = solid]
	158 -> 163 [color = white, style = solid]
	93 -> 98 [color = white, style = solid]
	164 -> 216 [color = white, style = solid]
	103 -> 104 [color = white, style = solid]
	75 -> 84 [color = white, style = solid]
	170 -> 174 [color = white, style = solid]
	28 -> 29 [color = white, style = solid]
	228 -> 241 [color = black, style = solid, constraint = false]
	177 -> 179 [color = white, style = solid]
	201 -> 202 [color = white, style = solid]
	146 -> 179 [color = black, style = solid, constraint = false]
	202 -> 203 [color = white, style = solid]
	142 -> 146 [color = white, style = solid]
	271 -> 273 [color = white, style = solid]
	137 -> 140 [color = white, style = solid]
	217 -> 219 [color = white, style = solid]
	144 -> 150 [color = white, style = solid]
	66 -> 67 [color = white, style = solid]
	156 -> 157 [color = white, style = solid]
	146 -> 166 [color = white, style = solid]
	84 -> 202 [color = black, style = solid, constraint = false]
	130 -> 135 [color = white, style = solid]
	255 -> 257 [color = white, style = solid]
	184 -> 187 [color = white, style = solid]
	207 -> 209 [color = white, style = solid]
	171 -> 172 [color = white, style = solid]
	40 -> 130 [color = black, style = solid, constraint = false]
	248 -> 252 [color = white, style = solid]
	121 -> 124 [color = white, style = solid]
	129 -> 130 [color = white, style = solid]
	261 -> 263 [color = white, style = solid]
	162 -> 170 [color = white, style = solid]
	163 -> 196 [color = black, style = solid, constraint = false]
	187 -> 188 [color = white, style = solid]
	244 -> 262 [color = white, style = solid]
	210 -> 229 [color = black, style = solid, constraint = false]
	111 -> 118 [color = white, style = solid]
	98 -> 124 [color = black, style = solid, constraint = false]
	181 -> 184 [color = white, style = solid]
	221 -> 222 [color = white, style = solid]
	226 -> 228 [color = white, style = solid]
	225 -> 226 [color = white, style = solid]
	35 -> 98 [color = black, style = solid, constraint = false]
	63 -> 66 [color = white, style = solid]
	196 -> 201 [color = white, style = solid]
	subgraph cluster4 {
		label = napi_thread
		color = blue
		73  [label = "328b: napi_sem = 1;"]
		72  [label = "328a: assume(napi_sem == 0);"]
		75  [label = "329a: assume(napi_scheduled == 0);"]
		84  [label = "332a: napi_sem = 0;"]
	}
	subgraph cluster7 {
		label = dev_thread
		color = blue
		82  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		282  [label = "535: status1 = IntrStatus;"]
		219  [label = "534a: val = status1;"]
		266  [label = "528b: assume(!(intr_mask != 0));"]
		216  [label = "524: handled2 = 0;"]
		284  [label = "537: assume(!status1);"]
		229  [label = "592: IntrMask = val;"]
		38  [label = "310a: irq_sem = 0;"]
		228  [label = "591: assert(dev_on != 0);"]
		248  [label = "530: intr_mask = 0;"]
		163  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		263  [label = "598: IntrStatus = IntrStatus & (~val);"]
		217  [label = "526: status1 = IntrStatus;"]
		40  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		222  [label = "598: IntrStatus = IntrStatus & (~val);"]
		158  [label = "310a: irq_sem = 0;"]
		252  [label = "433b: assume(!(napi_enabled != 0));"]
		36  [label = "305a: assume(irq_sem == 0);"]
		221  [label = "597: assert(dev_on != 0);"]
		157  [label = "305b: irq_sem = 1;"]
		225  [label = "528a: assume(intr_mask != 0);"]
		261  [label = "597: assert(dev_on != 0);", color = red]
		255  [label = "535: status1 = IntrStatus;"]
		37  [label = "305b: irq_sem = 1;"]
		226  [label = "529a: val = 0;"]
		254  [label = "532: handled2 = 1;"]
		156  [label = "305a: assume(irq_sem == 0);"]
		164  [label = "307: assert(intr_mask != 0);"]
		257  [label = "534a: val = status1;"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		270  [label = "244: dev_lock = 5;"]
		271  [label = "245: want_dev = 0;"]
		273  [label = "250a: dev_lock = 0;"]
		98  [label = "388: registered = 1;"]
		58  [label = "631a: sysfs_lock = 0;"]
		99  [label = "389: ret2 = 0;"]
		166  [label = "638: want_sysfs = 5;"]
		233  [label = "457: sysfs_registered = 0;"]
		172  [label = "641: sysfs_lock = 5;"]
		105  [label = "237: probe1 = ret4;"]
		142  [label = "398: registered = 0;"]
		104  [label = "482: ret4 = 0;"]
		56  [label = "452: sysfs_registered = 1;"]
		173  [label = "642: want_sysfs = 0;"]
		93  [label = "477: hw_start = drv_hw_start;"]
		268  [label = "241: want_dev = 5;"]
		103  [label = "479b: assume(!(rc1 < 0));"]
		51  [label = "629a: assume(sysfs_lock == 0);"]
		146  [label = "399: assume(!(netif_running != 0));"]
		108  [label = "238a: assume(probe1 == 0);"]
		269  [label = "243: assume(dev_lock == 0);"]
		100  [label = "476: rc1 = ret2;"]
		239  [label = "647a: sysfs_lock = 0;"]
		52  [label = "629b: sysfs_lock = 1;"]
		171  [label = "640: assume(sysfs_lock == 0);"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		129  [label = "492a: assert(hw_start != 0);"]
		121  [label = "277b: rtnl_lock = 1;"]
		124  [label = "278a: assume(registered != 0);"]
		201  [label = "426: napi_enabled = 0;"]
		66  [label = "290a: assume(rtnl_lock == 0);"]
		188  [label = "290b: rtnl_lock = 1;"]
		135  [label = "406: irq_enabled = 1;"]
		118  [label = "275: ret1 = 0;"]
		187  [label = "290a: assume(rtnl_lock == 0);"]
		236  [label = "446b: irq_sem = 1;"]
		174  [label = "279: ret1 = ret5;"]
		262  [label = "560: reset_task_ready = 1;"]
		170  [label = "503: ret5 = 0;"]
		244  [label = "295a: rtnl_lock = 0;"]
		30  [label = "277b: rtnl_lock = 1;"]
		60  [label = "260: open1 = ret1;"]
		235  [label = "446a: assume(irq_sem == 0);"]
		207  [label = "611a: val = 0;"]
		202  [label = "427a: assume(napi_sem == 0);"]
		35  [label = "278b: assume(!(registered != 0));"]
		136  [label = "407: ret3 = 0;"]
		203  [label = "427b: napi_sem = 1;"]
		69  [label = "291b: assume(!(netif_running != 0));"]
		120  [label = "277a: assume(rtnl_lock == 0);"]
		177  [label = "280a: assume(ret1 == 0);"]
		181  [label = "260: open1 = ret1;"]
		190  [label = "291a: assume(netif_running != 0);"]
		150  [label = "603: dev_on = 1;"]
		86  [label = "295a: rtnl_lock = 0;"]
		28  [label = "275: ret1 = 0;"]
		137  [label = "496: rc2 = ret3;"]
		130  [label = "494: IntrMask = 0;"]
		196  [label = "416: irq_enabled = 0;"]
		144  [label = "421: napi_enabled = 1;"]
		154  [label = "604a: val = 1;"]
		59  [label = "284a: rtnl_lock = 0;"]
		184  [label = "261a: assume(open1 == 0);"]
		67  [label = "290b: rtnl_lock = 1;"]
		29  [label = "277a: assume(rtnl_lock == 0);"]
		209  [label = "591: assert(dev_on != 0);"]
		237  [label = "447a: irq_sem = 0;"]
		111  [label = "560: reset_task_ready = 1;"]
		140  [label = "498b: assume(!(rc2 < 0));"]
		63  [label = "261a: assume(open1 == 0);"]
		241  [label = "615: dev_on = 0;"]
		191  [label = "292: netif_running = 0;"]
		179  [label = "281: netif_running = 1;"]
		161  [label = "591: assert(dev_on != 0);"]
		162  [label = "592: IntrMask = val;"]
		210  [label = "592: IntrMask = val;"]
		151  [label = "605: intr_mask = 1;"]
		180  [label = "284a: rtnl_lock = 0;"]
	}
}
digraph Counterexample {
	205 -> 240 [color = white, style = solid]
	184 -> 205 [color = white, style = solid]
	142 -> 143 [color = white, style = solid]
	156 -> 160 [color = white, style = solid]
	152 -> 155 [color = white, style = solid]
	198 -> 209 [color = white, style = solid]
	143 -> 205 [color = black, style = solid, constraint = false]
	29 -> 32 [color = white, style = solid]
	240 -> 256 [color = white, style = solid]
	87 -> 88 [color = white, style = solid]
	213 -> 214 [color = white, style = solid]
	32 -> 34 [color = white, style = solid]
	116 -> 148 [color = black, style = solid, constraint = false]
	128 -> 129 [color = white, style = solid]
	88 -> 116 [color = white, style = solid]
	228 -> 229 [color = white, style = solid]
	252 -> 254 [color = white, style = solid]
	95 -> 96 [color = white, style = solid]
	257 -> 258 [color = white, style = solid]
	120 -> 121 [color = white, style = solid]
	160 -> 161 [color = white, style = solid]
	196 -> 198 [color = white, style = solid]
	100 -> 103 [color = white, style = solid]
	233 -> 234 [color = white, style = solid]
	216 -> 220 [color = white, style = solid]
	258 -> 259 [color = white, style = solid]
	140 -> 142 [color = white, style = solid]
	63 -> 64 [color = white, style = solid]
	178 -> 179 [color = white, style = solid]
	200 -> 201 [color = white, style = solid]
	114 -> 116 [color = black, style = solid, constraint = false]
	214 -> 216 [color = white, style = solid]
	107 -> 109 [color = white, style = solid]
	170 -> 209 [color = black, style = solid, constraint = false]
	28 -> 29 [color = white, style = solid]
	238 -> 239 [color = white, style = solid]
	113 -> 114 [color = white, style = solid]
	65 -> 68 [color = white, style = solid]
	136 -> 184 [color = white, style = solid]
	56 -> 184 [color = black, style = solid, constraint = false]
	195 -> 196 [color = white, style = solid]
	234 -> 237 [color = white, style = solid]
	203 -> 245 [color = white, style = solid]
	245 -> 248 [color = white, style = solid]
	111 -> 136 [color = white, style = solid]
	78 -> 116 [color = black, style = solid, constraint = false]
	229 -> 231 [color = white, style = solid]
	96 -> 98 [color = white, style = solid]
	83 -> 84 [color = white, style = solid]
	116 -> 119 [color = white, style = solid]
	34 -> 43 [color = white, style = solid]
	114 -> 118 [color = white, style = solid]
	250 -> 251 [color = white, style = solid]
	86 -> 87 [color = white, style = solid]
	231 -> 233 [color = white, style = solid]
	98 -> 100 [color = white, style = solid]
	81 -> 82 [color = white, style = solid]
	130 -> 131 [color = white, style = solid]
	54 -> 56 [color = black, style = solid, constraint = false]
	54 -> 55 [color = white, style = solid]
	131 -> 134 [color = white, style = solid]
	222 -> 226 [color = white, style = solid]
	45 -> 56 [color = white, style = solid]
	210 -> 213 [color = white, style = solid]
	148 -> 152 [color = white, style = solid]
	103 -> 107 [color = white, style = solid]
	170 -> 177 [color = white, style = solid]
	168 -> 170 [color = white, style = solid]
	143 -> 148 [color = white, style = solid]
	209 -> 210 [color = white, style = solid]
	256 -> 257 [color = white, style = solid]
	84 -> 111 [color = white, style = solid]
	201 -> 203 [color = white, style = solid]
	161 -> 168 [color = white, style = solid]
	177 -> 178 [color = white, style = solid]
	125 -> 128 [color = white, style = solid]
	239 -> 250 [color = white, style = solid]
	94 -> 95 [color = white, style = solid]
	220 -> 222 [color = white, style = solid]
	56 -> 94 [color = white, style = solid]
	237 -> 238 [color = white, style = solid]
	121 -> 124 [color = white, style = solid]
	129 -> 130 [color = white, style = solid]
	82 -> 83 [color = white, style = solid]
	43 -> 54 [color = white, style = solid]
	119 -> 195 [color = white, style = solid]
	55 -> 60 [color = white, style = solid]
	68 -> 81 [color = white, style = solid]
	110 -> 113 [color = white, style = solid]
	118 -> 120 [color = white, style = solid]
	134 -> 139 [color = white, style = solid]
	64 -> 65 [color = white, style = solid]
	179 -> 182 [color = white, style = solid]
	251 -> 252 [color = white, style = solid]
	189 -> 192 [color = black, style = solid, constraint = false]
	60 -> 63 [color = white, style = solid]
	226 -> 228 [color = white, style = solid]
	177 -> 226 [color = black, style = solid, constraint = false]
	124 -> 125 [color = white, style = solid]
	182 -> 189 [color = white, style = solid]
	192 -> 200 [color = white, style = solid]
	109 -> 110 [color = white, style = solid]
	139 -> 140 [color = white, style = solid]
	155 -> 156 [color = white, style = solid]
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		248  [label = "340a: assume(reset_task_ready == 0);"]
		200  [label = "565a: assume(rtnl_lock == 0);"]
		203  [label = "568b: assume(!((!netif_running) == 0));"]
		192  [label = "340b: assume(!(reset_task_ready == 0));"]
		245  [label = "342: reset_task_ready = 0;"]
		201  [label = "565b: rtnl_lock = 1;"]
	}
	subgraph cluster7 {
		label = dev_thread
		color = blue
		78  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		228  [label = "532: handled2 = 1;"]
		220  [label = "592: IntrMask = val;"]
		196  [label = "526: status1 = IntrStatus;"]
		222  [label = "530: intr_mask = 0;"]
		88  [label = "310a: irq_sem = 0;"]
		250  [label = "305a: assume(irq_sem == 0);"]
		116  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		237  [label = "528b: assume(!(intr_mask != 0));"]
		210  [label = "598: IntrStatus = IntrStatus & (~val);"]
		226  [label = "433b: assume(!(napi_enabled != 0));"]
		195  [label = "524: handled2 = 0;"]
		216  [label = "591: assert(dev_on != 0);"]
		87  [label = "305b: irq_sem = 1;"]
		231  [label = "534a: val = status1;"]
		209  [label = "597: assert(dev_on != 0);", color = red]
		198  [label = "534a: val = status1;"]
		213  [label = "528a: assume(intr_mask != 0);"]
		239  [label = "537: assume(!status1);"]
		233  [label = "597: assert(dev_on != 0);"]
		254  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		251  [label = "305b: irq_sem = 1;"]
		252  [label = "310a: irq_sem = 0;"]
		119  [label = "307: assert(intr_mask != 0);"]
		234  [label = "598: IntrStatus = IntrStatus & (~val);"]
		86  [label = "305a: assume(irq_sem == 0);"]
		238  [label = "535: status1 = IntrStatus;"]
		214  [label = "529a: val = 0;"]
		229  [label = "535: status1 = IntrStatus;"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		82  [label = "640: assume(sysfs_lock == 0);"]
		111  [label = "457: sysfs_registered = 0;"]
		184  [label = "398: registered = 0;"]
		258  [label = "245: want_dev = 0;"]
		83  [label = "641: sysfs_lock = 5;"]
		28  [label = "629a: assume(sysfs_lock == 0);"]
		32  [label = "452: sysfs_registered = 1;"]
		256  [label = "243: assume(dev_lock == 0);"]
		65  [label = "237: probe1 = ret4;"]
		84  [label = "642: want_sysfs = 0;"]
		68  [label = "238a: assume(probe1 == 0);"]
		240  [label = "241: want_dev = 5;"]
		64  [label = "482: ret4 = 0;"]
		205  [label = "399: assume(!(netif_running != 0));"]
		81  [label = "638: want_sysfs = 5;"]
		34  [label = "631a: sysfs_lock = 0;"]
		29  [label = "629b: sysfs_lock = 1;"]
		55  [label = "389: ret2 = 0;"]
		136  [label = "647a: sysfs_lock = 0;"]
		63  [label = "479b: assume(!(rc1 < 0));"]
		257  [label = "244: dev_lock = 5;"]
		43  [label = "477: hw_start = drv_hw_start;"]
		60  [label = "476: rc1 = ret2;"]
		259  [label = "250a: dev_lock = 0;"]
		54  [label = "388: registered = 1;"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		155  [label = "591: assert(dev_on != 0);"]
		189  [label = "560: reset_task_ready = 1;"]
		131  [label = "260: open1 = ret1;"]
		156  [label = "592: IntrMask = val;"]
		128  [label = "277a: assume(rtnl_lock == 0);"]
		168  [label = "447a: irq_sem = 0;"]
		160  [label = "446a: assume(irq_sem == 0);"]
		152  [label = "611a: val = 0;"]
		96  [label = "496: rc2 = ret3;"]
		121  [label = "279: ret1 = ret5;"]
		130  [label = "284a: rtnl_lock = 0;"]
		120  [label = "492a: assert(hw_start != 0);"]
		148  [label = "416: irq_enabled = 0;"]
		125  [label = "281: netif_running = 1;"]
		113  [label = "591: assert(dev_on != 0);"]
		124  [label = "280a: assume(ret1 == 0);"]
		177  [label = "426: napi_enabled = 0;"]
		178  [label = "427a: assume(napi_sem == 0);"]
		179  [label = "427b: napi_sem = 1;"]
		161  [label = "446b: irq_sem = 1;"]
		107  [label = "603: dev_on = 1;"]
		103  [label = "421: napi_enabled = 1;"]
		94  [label = "406: irq_enabled = 1;"]
		56  [label = "278a: assume(registered != 0);"]
		129  [label = "277b: rtnl_lock = 1;"]
		139  [label = "290a: assume(rtnl_lock == 0);"]
		182  [label = "295a: rtnl_lock = 0;"]
		114  [label = "592: IntrMask = val;"]
		143  [label = "292: netif_running = 0;"]
		142  [label = "291a: assume(netif_running != 0);"]
		98  [label = "494: IntrMask = 0;"]
		140  [label = "290b: rtnl_lock = 1;"]
		100  [label = "498b: assume(!(rc2 < 0));"]
		110  [label = "604a: val = 1;"]
		95  [label = "407: ret3 = 0;"]
		170  [label = "615: dev_on = 0;"]
		118  [label = "503: ret5 = 0;"]
		134  [label = "261a: assume(open1 == 0);"]
		45  [label = "275: ret1 = 0;"]
		109  [label = "605: intr_mask = 1;"]
	}
}
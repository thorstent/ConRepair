digraph Counterexample {
	28 -> 30 [color = white, style = solid]
	74 -> 77 [color = white, style = solid]
	205 -> 206 [color = white, style = solid]
	257 -> 264 [color = white, style = solid]
	273 -> 276 [color = white, style = solid]
	71 -> 72 [color = white, style = solid]
	117 -> 119 [color = white, style = solid]
	178 -> 184 [color = white, style = solid]
	218 -> 222 [color = white, style = solid]
	133 -> 134 [color = white, style = solid]
	35 -> 36 [color = white, style = solid]
	184 -> 186 [color = white, style = solid]
	252 -> 253 [color = white, style = solid]
	112 -> 123 [color = white, style = solid]
	210 -> 212 [color = white, style = solid]
	151 -> 156 [color = white, style = solid]
	65 -> 68 [color = white, style = solid]
	49 -> 159 [color = black, style = solid, constraint = false]
	183 -> 218 [color = black, style = solid, constraint = false]
	213 -> 218 [color = white, style = solid]
	26 -> 27 [color = white, style = solid]
	206 -> 225 [color = white, style = solid]
	197 -> 205 [color = white, style = solid]
	226 -> 227 [color = black, style = solid, constraint = false]
	72 -> 74 [color = white, style = solid]
	166 -> 171 [color = white, style = solid]
	49 -> 179 [color = white, style = solid]
	252 -> 271 [color = black, style = solid, constraint = false]
	181 -> 183 [color = white, style = solid]
	100 -> 101 [color = white, style = solid]
	191 -> 192 [color = white, style = solid]
	98 -> 253 [color = black, style = solid, constraint = false]
	209 -> 210 [color = white, style = solid]
	237 -> 248 [color = white, style = solid]
	119 -> 138 [color = white, style = solid]
	245 -> 260 [color = white, style = solid]
	243 -> 244 [color = white, style = solid]
	287 -> 291 [color = white, style = solid]
	101 -> 102 [color = white, style = solid]
	87 -> 91 [color = white, style = solid]
	212 -> 213 [color = white, style = solid]
	57 -> 58 [color = white, style = solid]
	64 -> 65 [color = white, style = solid]
	102 -> 105 [color = white, style = solid]
	283 -> 287 [color = white, style = solid]
	185 -> 191 [color = white, style = solid]
	194 -> 196 [color = white, style = solid]
	134 -> 137 [color = white, style = solid]
	77 -> 82 [color = white, style = solid]
	226 -> 235 [color = white, style = solid]
	276 -> 279 [color = white, style = solid]
	119 -> 169 [color = black, style = solid, constraint = false]
	105 -> 106 [color = white, style = solid]
	171 -> 173 [color = white, style = solid]
	139 -> 140 [color = white, style = solid]
	159 -> 183 [color = black, style = solid, constraint = false]
	224 -> 226 [color = white, style = solid]
	165 -> 166 [color = white, style = solid]
	179 -> 180 [color = white, style = solid]
	156 -> 162 [color = white, style = solid]
	282 -> 283 [color = white, style = solid]
	169 -> 172 [color = white, style = solid]
	30 -> 100 [color = black, style = solid, constraint = false]
	235 -> 236 [color = white, style = solid]
	244 -> 245 [color = white, style = solid]
	180 -> 181 [color = white, style = solid]
	137 -> 146 [color = white, style = solid]
	30 -> 64 [color = white, style = solid]
	236 -> 237 [color = white, style = solid]
	47 -> 49 [color = white, style = solid]
	222 -> 224 [color = white, style = solid]
	75 -> 76 [color = white, style = solid]
	36 -> 47 [color = white, style = solid]
	138 -> 139 [color = white, style = solid]
	203 -> 209 [color = white, style = solid]
	291 -> 292 [color = white, style = solid]
	146 -> 169 [color = white, style = solid]
	143 -> 145 [color = white, style = solid]
	60 -> 98 [color = white, style = solid]
	123 -> 132 [color = white, style = solid]
	100 -> 119 [color = black, style = solid, constraint = false]
	109 -> 112 [color = white, style = solid]
	82 -> 114 [color = white, style = solid]
	162 -> 163 [color = white, style = solid]
	192 -> 194 [color = white, style = solid]
	27 -> 28 [color = white, style = solid]
	254 -> 257 [color = white, style = solid]
	145 -> 151 [color = white, style = solid]
	227 -> 229 [color = white, style = solid]
	163 -> 165 [color = white, style = solid]
	271 -> 273 [color = white, style = solid]
	279 -> 282 [color = white, style = solid]
	173 -> 175 [color = white, style = solid]
	140 -> 143 [color = white, style = solid]
	172 -> 184 [color = black, style = solid, constraint = false]
	229 -> 271 [color = white, style = solid]
	132 -> 133 [color = white, style = solid]
	114 -> 116 [color = white, style = solid]
	172 -> 239 [color = white, style = solid]
	253 -> 254 [color = white, style = solid]
	225 -> 227 [color = white, style = solid]
	196 -> 197 [color = white, style = solid]
	186 -> 200 [color = white, style = solid]
	183 -> 185 [color = white, style = solid]
	175 -> 178 [color = white, style = solid]
	166 -> 183 [color = black, style = solid, constraint = false]
	248 -> 252 [color = white, style = solid]
	49 -> 138 [color = black, style = solid, constraint = false]
	106 -> 109 [color = white, style = solid]
	76 -> 87 [color = white, style = solid]
	58 -> 60 [color = white, style = solid]
	93 -> 100 [color = white, style = solid]
	91 -> 93 [color = white, style = solid]
	68 -> 71 [color = white, style = solid]
	239 -> 243 [color = white, style = solid]
	200 -> 203 [color = white, style = solid]
	225 -> 248 [color = black, style = solid, constraint = false]
	116 -> 117 [color = white, style = solid]
	subgraph cluster7 {
		label = dev_thread
		color = blue
		159  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		292  [label = "537: assume(!status1);"]
		283  [label = "598: IntrStatus = IntrStatus & (~val);"]
		192  [label = "526: status1 = IntrStatus;"]
		206  [label = "529a: val = 0;"]
		47  [label = "310a: irq_sem = 0;"]
		191  [label = "524: handled2 = 0;"]
		205  [label = "528a: assume(intr_mask != 0);"]
		185  [label = "307: assert(intr_mask != 0);"]
		279  [label = "534a: val = status1;"]
		271  [label = "433b: assume(!(napi_enabled != 0));"]
		197  [label = "598: IntrStatus = IntrStatus & (~val);"]
		179  [label = "305a: assume(irq_sem == 0);"]
		183  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		181  [label = "310a: irq_sem = 0;"]
		282  [label = "597: assert(dev_on != 0);", color = red]
		49  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		196  [label = "597: assert(dev_on != 0);"]
		287  [label = "528b: assume(!(intr_mask != 0));"]
		35  [label = "305a: assume(irq_sem == 0);"]
		229  [label = "530: intr_mask = 0;"]
		194  [label = "534a: val = status1;"]
		36  [label = "305b: irq_sem = 1;"]
		276  [label = "535: status1 = IntrStatus;"]
		227  [label = "592: IntrMask = val;"]
		180  [label = "305b: irq_sem = 1;"]
		291  [label = "535: status1 = IntrStatus;"]
		225  [label = "591: assert(dev_on != 0);"]
		273  [label = "532: handled2 = 1;"]
	}
	subgraph cluster4 {
		label = napi_thread
		color = blue
		60  [label = "329a: assume(napi_scheduled == 0);"]
		57  [label = "328a: assume(napi_sem == 0);"]
		98  [label = "332a: napi_sem = 0;"]
		58  [label = "328b: napi_sem = 1;"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		101  [label = "389: ret2 = 0;"]
		109  [label = "237: probe1 = ret4;"]
		100  [label = "388: registered = 1;"]
		76  [label = "629b: sysfs_lock = 1;"]
		169  [label = "398: registered = 0;"]
		244  [label = "244: dev_lock = 5;"]
		87  [label = "452: sysfs_registered = 1;"]
		123  [label = "638: want_sysfs = 5;"]
		133  [label = "641: sysfs_lock = 5;"]
		239  [label = "241: want_dev = 5;"]
		243  [label = "243: assume(dev_lock == 0);"]
		105  [label = "479b: assume(!(rc1 < 0));"]
		146  [label = "647a: sysfs_lock = 0;"]
		134  [label = "642: want_sysfs = 0;"]
		93  [label = "477: hw_start = drv_hw_start;"]
		260  [label = "250a: dev_lock = 0;"]
		102  [label = "476: rc1 = ret2;"]
		106  [label = "482: ret4 = 0;"]
		137  [label = "457: sysfs_registered = 0;"]
		75  [label = "629a: assume(sysfs_lock == 0);"]
		172  [label = "399: assume(!(netif_running != 0));"]
		112  [label = "238a: assume(probe1 == 0);"]
		91  [label = "631a: sysfs_lock = 0;"]
		245  [label = "245: want_dev = 0;"]
		132  [label = "640: assume(sysfs_lock == 0);"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		68  [label = "261a: assume(open1 == 0);"]
		212  [label = "291a: assume(netif_running != 0);"]
		200  [label = "260: open1 = ret1;"]
		114  [label = "275: ret1 = 0;"]
		253  [label = "427a: assume(napi_sem == 0);"]
		166  [label = "592: IntrMask = val;"]
		254  [label = "427b: napi_sem = 1;"]
		178  [label = "280a: assume(ret1 == 0);"]
		145  [label = "498b: assume(!(rc2 < 0));"]
		236  [label = "446b: irq_sem = 1;"]
		213  [label = "292: netif_running = 0;"]
		264  [label = "560: reset_task_ready = 1;"]
		65  [label = "260: open1 = ret1;"]
		74  [label = "291b: assume(!(netif_running != 0));"]
		139  [label = "407: ret3 = 0;"]
		28  [label = "277b: rtnl_lock = 1;"]
		143  [label = "494: IntrMask = 0;"]
		235  [label = "446a: assume(irq_sem == 0);"]
		117  [label = "277b: rtnl_lock = 1;"]
		184  [label = "281: netif_running = 1;"]
		222  [label = "611a: val = 0;"]
		72  [label = "290b: rtnl_lock = 1;"]
		203  [label = "261a: assume(open1 == 0);"]
		218  [label = "416: irq_enabled = 0;"]
		209  [label = "290a: assume(rtnl_lock == 0);"]
		156  [label = "603: dev_on = 1;"]
		77  [label = "295a: rtnl_lock = 0;"]
		173  [label = "492a: assert(hw_start != 0);"]
		224  [label = "591: assert(dev_on != 0);"]
		82  [label = "560: reset_task_ready = 1;"]
		210  [label = "290b: rtnl_lock = 1;"]
		186  [label = "284a: rtnl_lock = 0;"]
		165  [label = "591: assert(dev_on != 0);"]
		257  [label = "295a: rtnl_lock = 0;"]
		163  [label = "604a: val = 1;"]
		226  [label = "592: IntrMask = val;"]
		30  [label = "278b: assume(!(registered != 0));"]
		162  [label = "605: intr_mask = 1;"]
		26  [label = "275: ret1 = 0;"]
		138  [label = "406: irq_enabled = 1;"]
		116  [label = "277a: assume(rtnl_lock == 0);"]
		252  [label = "426: napi_enabled = 0;"]
		171  [label = "503: ret5 = 0;"]
		27  [label = "277a: assume(rtnl_lock == 0);"]
		119  [label = "278a: assume(registered != 0);"]
		237  [label = "447a: irq_sem = 0;"]
		140  [label = "496: rc2 = ret3;"]
		248  [label = "615: dev_on = 0;"]
		151  [label = "421: napi_enabled = 1;"]
		175  [label = "279: ret1 = ret5;"]
		71  [label = "290a: assume(rtnl_lock == 0);"]
		64  [label = "284a: rtnl_lock = 0;"]
	}
}
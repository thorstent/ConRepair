digraph Counterexample {
	267 -> 268 [color = white, style = solid]
	157 -> 158 [color = white, style = solid]
	144 -> 146 [color = white, style = solid]
	62 -> 99 [color = black, style = solid, constraint = false]
	142 -> 143 [color = white, style = solid]
	189 -> 191 [color = white, style = solid]
	220 -> 226 [color = white, style = solid]
	72 -> 75 [color = white, style = solid]
	191 -> 194 [color = white, style = solid]
	230 -> 231 [color = white, style = solid]
	152 -> 156 [color = white, style = solid]
	71 -> 72 [color = white, style = solid]
	65 -> 67 [color = white, style = solid]
	247 -> 248 [color = white, style = solid]
	95 -> 96 [color = white, style = solid]
	112 -> 113 [color = white, style = solid]
	129 -> 131 [color = white, style = solid]
	192 -> 202 [color = white, style = solid]
	146 -> 147 [color = white, style = solid]
	48 -> 68 [color = white, style = solid]
	188 -> 189 [color = white, style = solid]
	62 -> 187 [color = white, style = solid]
	180 -> 182 [color = white, style = solid]
	170 -> 171 [color = white, style = solid]
	113 -> 114 [color = white, style = solid]
	258 -> 261 [color = black, style = solid, constraint = false]
	272 -> 283 [color = white, style = solid]
	47 -> 48 [color = white, style = solid]
	99 -> 101 [color = white, style = solid]
	136 -> 137 [color = white, style = solid]
	131 -> 142 [color = white, style = solid]
	231 -> 232 [color = white, style = solid]
	96 -> 98 [color = white, style = solid]
	215 -> 220 [color = black, style = solid, constraint = false]
	98 -> 99 [color = white, style = solid]
	131 -> 136 [color = black, style = solid, constraint = false]
	107 -> 110 [color = white, style = solid]
	288 -> 289 [color = white, style = solid]
	247 -> 265 [color = black, style = solid, constraint = false]
	169 -> 170 [color = white, style = solid]
	254 -> 255 [color = white, style = solid]
	244 -> 258 [color = white, style = solid]
	58 -> 62 [color = white, style = solid]
	259 -> 261 [color = white, style = solid]
	165 -> 168 [color = white, style = solid]
	240 -> 243 [color = white, style = solid]
	248 -> 250 [color = white, style = solid]
	268 -> 271 [color = white, style = solid]
	207 -> 208 [color = white, style = solid]
	101 -> 102 [color = white, style = solid]
	211 -> 212 [color = white, style = solid]
	208 -> 211 [color = white, style = solid]
	258 -> 265 [color = white, style = solid]
	103 -> 267 [color = black, style = solid, constraint = false]
	64 -> 65 [color = white, style = solid]
	75 -> 78 [color = white, style = solid]
	67 -> 103 [color = white, style = solid]
	168 -> 169 [color = white, style = solid]
	55 -> 58 [color = white, style = solid]
	265 -> 267 [color = white, style = solid]
	84 -> 86 [color = white, style = solid]
	228 -> 230 [color = white, style = solid]
	179 -> 180 [color = white, style = solid]
	194 -> 201 [color = white, style = solid]
	102 -> 107 [color = white, style = solid]
	219 -> 220 [color = white, style = solid]
	114 -> 117 [color = white, style = solid]
	38 -> 40 [color = white, style = solid]
	158 -> 160 [color = white, style = solid]
	161 -> 164 [color = white, style = solid]
	60 -> 62 [color = black, style = solid, constraint = false]
	251 -> 259 [color = white, style = solid]
	110 -> 111 [color = white, style = solid]
	278 -> 288 [color = white, style = solid]
	149 -> 152 [color = white, style = solid]
	111 -> 112 [color = white, style = solid]
	78 -> 136 [color = white, style = solid]
	160 -> 161 [color = white, style = solid]
	172 -> 173 [color = white, style = solid]
	261 -> 266 [color = white, style = solid]
	161 -> 191 [color = black, style = solid, constraint = false]
	28 -> 29 [color = white, style = solid]
	40 -> 47 [color = white, style = solid]
	176 -> 179 [color = white, style = solid]
	271 -> 272 [color = white, style = solid]
	86 -> 95 [color = white, style = solid]
	147 -> 149 [color = white, style = solid]
	203 -> 205 [color = white, style = solid]
	182 -> 192 [color = white, style = solid]
	250 -> 251 [color = white, style = solid]
	137 -> 228 [color = white, style = solid]
	205 -> 207 [color = white, style = solid]
	54 -> 55 [color = white, style = solid]
	143 -> 144 [color = white, style = solid]
	117 -> 129 [color = white, style = solid]
	156 -> 157 [color = white, style = solid]
	35 -> 38 [color = white, style = solid]
	229 -> 247 [color = white, style = solid]
	47 -> 86 [color = black, style = solid, constraint = false]
	243 -> 253 [color = white, style = solid]
	201 -> 203 [color = white, style = solid]
	67 -> 248 [color = black, style = solid, constraint = false]
	253 -> 254 [color = white, style = solid]
	137 -> 169 [color = black, style = solid, constraint = false]
	255 -> 279 [color = white, style = solid]
	173 -> 176 [color = white, style = solid]
	171 -> 172 [color = white, style = solid]
	237 -> 240 [color = white, style = solid]
	215 -> 229 [color = white, style = solid]
	266 -> 278 [color = white, style = solid]
	164 -> 165 [color = white, style = solid]
	227 -> 244 [color = white, style = solid]
	212 -> 214 [color = white, style = solid]
	187 -> 188 [color = white, style = solid]
	232 -> 237 [color = white, style = solid]
	29 -> 35 [color = white, style = solid]
	202 -> 219 [color = white, style = solid]
	68 -> 71 [color = white, style = solid]
	191 -> 192 [color = black, style = solid, constraint = false]
	214 -> 215 [color = white, style = solid]
	226 -> 227 [color = white, style = solid]
	subgraph cluster7 {
		label = dev_thread
		color = blue
		60  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster4 {
		label = napi_thread
		color = blue
		64  [label = "328a: assume(napi_sem == 0);"]
		103  [label = "332a: napi_sem = 0;"]
		65  [label = "328b: napi_sem = 1;"]
		67  [label = "329a: assume(napi_scheduled == 0);"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		255  [label = "245: want_dev = 0;"]
		68  [label = "476: rc1 = ret2;"]
		279  [label = "250a: dev_lock = 0;"]
		75  [label = "237: probe1 = ret4;"]
		72  [label = "482: ret4 = 0;"]
		48  [label = "389: ret2 = 0;"]
		78  [label = "238a: assume(probe1 == 0);"]
		47  [label = "388: registered = 1;"]
		240  [label = "647a: sysfs_lock = 0;"]
		28  [label = "629a: assume(sysfs_lock == 0);"]
		228  [label = "638: want_sysfs = 5;"]
		136  [label = "398: registered = 0;"]
		38  [label = "631a: sysfs_lock = 0;"]
		231  [label = "641: sysfs_lock = 5;"]
		137  [label = "399: assume(!(netif_running != 0));"]
		243  [label = "241: want_dev = 5;"]
		29  [label = "629b: sysfs_lock = 1;"]
		237  [label = "457: sysfs_registered = 0;"]
		253  [label = "243: assume(dev_lock == 0);"]
		40  [label = "477: hw_start = drv_hw_start;"]
		230  [label = "640: assume(sysfs_lock == 0);"]
		71  [label = "479b: assume(!(rc1 < 0));"]
		35  [label = "452: sysfs_registered = 1;"]
		254  [label = "244: dev_lock = 5;"]
		232  [label = "642: want_sysfs = 0;"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		112  [label = "277b: rtnl_lock = 1;"]
		220  [label = "592: IntrMask = val;"]
		157  [label = "605: intr_mask = 1;"]
		129  [label = "275: ret1 = 0;"]
		160  [label = "591: assert(dev_on != 0);"]
		268  [label = "427b: napi_sem = 1;"]
		95  [label = "409: ret3 = -1;"]
		164  [label = "503: ret5 = 0;"]
		170  [label = "277a: assume(rtnl_lock == 0);"]
		96  [label = "496: rc2 = ret3;"]
		84  [label = "275: ret1 = 0;"]
		117  [label = "261b: assume(!(open1 == 0));"]
		172  [label = "284a: rtnl_lock = 0;"]
		111  [label = "277a: assume(rtnl_lock == 0);"]
		158  [label = "604a: val = 1;"]
		244  [label = "447a: irq_sem = 0;"]
		265  [label = "426: napi_enabled = 0;"]
		156  [label = "603: dev_on = 1;"]
		192  [label = "416: irq_enabled = 0;"]
		86  [label = "278a: assume(registered != 0);"]
		219  [label = "591: assert(dev_on != 0);"]
		173  [label = "260: open1 = ret1;"]
		227  [label = "446b: irq_sem = 1;"]
		179  [label = "290a: assume(rtnl_lock == 0);"]
		143  [label = "407: ret3 = 0;"]
		271  [label = "292: netif_running = 0;"]
		144  [label = "496: rc2 = ret3;"]
		272  [label = "295a: rtnl_lock = 0;"]
		99  [label = "494: IntrMask = 0;"]
		149  [label = "498b: assume(!(rc2 < 0));"]
		202  [label = "611a: val = 0;"]
		176  [label = "261a: assume(open1 == 0);"]
		98  [label = "492a: assert(hw_start != 0);"]
		107  [label = "279: ret1 = ret5;"]
		161  [label = "592: IntrMask = val;"]
		147  [label = "494: IntrMask = 0;"]
		142  [label = "406: irq_enabled = 1;"]
		226  [label = "446a: assume(irq_sem == 0);"]
		283  [label = "560: reset_task_ready = 1;"]
		152  [label = "421: napi_enabled = 1;"]
		146  [label = "492a: assert(hw_start != 0);"]
		258  [label = "615: dev_on = 0;"]
		101  [label = "498a: assume(rc2 < 0);"]
		267  [label = "427a: assume(napi_sem == 0);"]
		168  [label = "280a: assume(ret1 == 0);"]
		110  [label = "280b: assume(!(ret1 == 0));"]
		102  [label = "499: ret5 = rc2;"]
		113  [label = "284a: rtnl_lock = 0;"]
		171  [label = "277b: rtnl_lock = 1;"]
		182  [label = "291a: assume(netif_running != 0);"]
		165  [label = "279: ret1 = ret5;"]
		131  [label = "278a: assume(registered != 0);"]
		114  [label = "260: open1 = ret1;"]
		180  [label = "290b: rtnl_lock = 1;"]
		169  [label = "281: netif_running = 1;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		54  [label = "305a: assume(irq_sem == 0);"]
		205  [label = "534a: val = status1;"]
		259  [label = "534a: val = status1;"]
		187  [label = "305a: assume(irq_sem == 0);"]
		251  [label = "535: status1 = IntrStatus;"]
		248  [label = "434: napi_scheduled = 1;"]
		58  [label = "310a: irq_sem = 0;"]
		214  [label = "591: assert(dev_on != 0);"]
		207  [label = "597: assert(dev_on != 0);"]
		288  [label = "535: status1 = IntrStatus;"]
		212  [label = "529a: val = 0;"]
		247  [label = "433a: assume(napi_enabled != 0);"]
		250  [label = "532: handled2 = 1;"]
		215  [label = "592: IntrMask = val;"]
		266  [label = "598: IntrStatus = IntrStatus & (~val);"]
		189  [label = "310a: irq_sem = 0;"]
		208  [label = "598: IntrStatus = IntrStatus & (~val);"]
		211  [label = "528a: assume(intr_mask != 0);"]
		278  [label = "528b: assume(!(intr_mask != 0));"]
		289  [label = "537: assume(!status1);"]
		261  [label = "597: assert(dev_on != 0);", color = red]
		191  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		229  [label = "530: intr_mask = 0;"]
		203  [label = "526: status1 = IntrStatus;"]
		194  [label = "307: assert(intr_mask != 0);"]
		62  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		55  [label = "305b: irq_sem = 1;"]
		201  [label = "524: handled2 = 0;"]
		188  [label = "305b: irq_sem = 1;"]
	}
}
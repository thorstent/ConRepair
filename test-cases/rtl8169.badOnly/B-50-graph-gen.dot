digraph Counterexample {
	187 -> 199 [color = white, style = solid]
	157 -> 158 [color = white, style = solid]
	165 -> 166 [color = white, style = solid]
	133 -> 136 [color = white, style = solid]
	173 -> 184 [color = black, style = solid, constraint = false]
	205 -> 206 [color = white, style = solid]
	29 -> 32 [color = white, style = solid]
	219 -> 220 [color = white, style = solid]
	242 -> 244 [color = white, style = solid]
	206 -> 208 [color = white, style = solid]
	155 -> 157 [color = white, style = solid]
	136 -> 142 [color = white, style = solid]
	67 -> 68 [color = white, style = solid]
	124 -> 137 [color = white, style = solid]
	183 -> 191 [color = white, style = solid]
	137 -> 151 [color = white, style = solid]
	128 -> 129 [color = white, style = solid]
	150 -> 155 [color = white, style = solid]
	40 -> 49 [color = white, style = solid]
	42 -> 56 [color = white, style = solid]
	95 -> 96 [color = white, style = solid]
	36 -> 40 [color = white, style = solid]
	111 -> 112 [color = white, style = solid]
	112 -> 113 [color = white, style = solid]
	216 -> 217 [color = white, style = solid]
	166 -> 169 [color = white, style = solid]
	90 -> 92 [color = white, style = solid]
	55 -> 70 [color = white, style = solid]
	32 -> 36 [color = white, style = solid]
	129 -> 133 [color = white, style = solid]
	50 -> 51 [color = white, style = solid]
	80 -> 81 [color = white, style = solid]
	170 -> 174 [color = white, style = solid]
	117 -> 120 [color = white, style = solid]
	74 -> 76 [color = white, style = solid]
	134 -> 137 [color = black, style = solid, constraint = false]
	28 -> 29 [color = white, style = solid]
	230 -> 249 [color = white, style = solid]
	208 -> 230 [color = black, style = solid, constraint = false]
	158 -> 165 [color = white, style = solid]
	120 -> 123 [color = white, style = solid]
	79 -> 80 [color = white, style = solid]
	191 -> 193 [color = white, style = solid]
	260 -> 272 [color = white, style = solid]
	148 -> 149 [color = white, style = solid]
	99 -> 101 [color = white, style = solid]
	193 -> 257 [color = black, style = solid, constraint = false]
	151 -> 168 [color = white, style = solid]
	169 -> 173 [color = white, style = solid]
	264 -> 265 [color = white, style = solid]
	217 -> 218 [color = white, style = solid]
	229 -> 230 [color = white, style = solid]
	54 -> 55 [color = white, style = solid]
	56 -> 66 [color = white, style = solid]
	259 -> 264 [color = white, style = solid]
	137 -> 142 [color = black, style = solid, constraint = false]
	249 -> 259 [color = white, style = solid]
	96 -> 97 [color = white, style = solid]
	193 -> 205 [color = white, style = solid]
	94 -> 99 [color = white, style = solid]
	66 -> 67 [color = white, style = solid]
	168 -> 170 [color = white, style = solid]
	257 -> 260 [color = white, style = solid]
	118 -> 119 [color = white, style = solid]
	220 -> 223 [color = white, style = solid]
	109 -> 111 [color = white, style = solid]
	225 -> 229 [color = white, style = solid]
	92 -> 94 [color = white, style = solid]
	101 -> 104 [color = white, style = solid]
	142 -> 148 [color = white, style = solid]
	184 -> 187 [color = white, style = solid]
	244 -> 254 [color = white, style = solid]
	219 -> 241 [color = black, style = solid, constraint = false]
	218 -> 219 [color = white, style = solid]
	93 -> 95 [color = white, style = solid]
	177 -> 183 [color = white, style = solid]
	123 -> 128 [color = white, style = solid]
	70 -> 73 [color = white, style = solid]
	73 -> 77 [color = white, style = solid]
	77 -> 79 [color = white, style = solid]
	211 -> 212 [color = white, style = solid]
	106 -> 109 [color = white, style = solid]
	199 -> 225 [color = white, style = solid]
	246 -> 257 [color = white, style = solid]
	76 -> 84 [color = white, style = solid]
	212 -> 213 [color = white, style = solid]
	81 -> 93 [color = white, style = solid]
	237 -> 246 [color = white, style = solid]
	241 -> 242 [color = white, style = solid]
	84 -> 90 [color = white, style = solid]
	238 -> 241 [color = white, style = solid]
	51 -> 54 [color = white, style = solid]
	183 -> 238 [color = black, style = solid, constraint = false]
	149 -> 150 [color = white, style = solid]
	208 -> 210 [color = white, style = solid]
	113 -> 117 [color = white, style = solid]
	97 -> 237 [color = white, style = solid]
	174 -> 184 [color = white, style = solid]
	213 -> 216 [color = white, style = solid]
	101 -> 137 [color = black, style = solid, constraint = false]
	265 -> 267 [color = white, style = solid]
	105 -> 106 [color = white, style = solid]
	173 -> 177 [color = white, style = solid]
	210 -> 211 [color = white, style = solid]
	49 -> 56 [color = black, style = solid, constraint = false]
	49 -> 50 [color = white, style = solid]
	104 -> 105 [color = white, style = solid]
	119 -> 124 [color = white, style = solid]
	68 -> 74 [color = white, style = solid]
	subgraph cluster7 {
		label = dev_thread
		color = blue
		134  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		244  [label = "568b: assume(!((!netif_running) == 0));"]
		242  [label = "565b: rtnl_lock = 1;"]
		241  [label = "565a: assume(rtnl_lock == 0);"]
		238  [label = "340b: assume(!(reset_task_ready == 0));"]
		254  [label = "342: reset_task_ready = 0;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		119  [label = "305b: irq_sem = 1;"]
		137  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		184  [label = "597: assert(dev_on != 0);", color = red]
		199  [label = "528a: assume(intr_mask != 0);"]
		249  [label = "530: intr_mask = 0;"]
		259  [label = "433b: assume(!(napi_enabled != 0));"]
		230  [label = "592: IntrMask = val;"]
		118  [label = "305a: assume(irq_sem == 0);"]
		229  [label = "591: assert(dev_on != 0);"]
		225  [label = "529a: val = 0;"]
		124  [label = "310a: irq_sem = 0;"]
		170  [label = "526: status1 = IntrStatus;"]
		187  [label = "598: IntrStatus = IntrStatus & (~val);"]
		174  [label = "534a: val = status1;"]
		151  [label = "307: assert(intr_mask != 0);"]
		264  [label = "532: handled2 = 1;"]
		265  [label = "535: status1 = IntrStatus;"]
		267  [label = "537: assume(!status1);"]
		168  [label = "524: handled2 = 0;"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		51  [label = "476: rc1 = ret2;"]
		79  [label = "243: assume(dev_lock == 0);"]
		55  [label = "482: ret4 = 0;"]
		95  [label = "640: assume(sysfs_lock == 0);"]
		96  [label = "641: sysfs_lock = 5;"]
		93  [label = "638: want_sysfs = 5;"]
		50  [label = "389: ret2 = 0;"]
		77  [label = "241: want_dev = 5;"]
		54  [label = "479b: assume(!(rc1 < 0));"]
		257  [label = "398: registered = 0;"]
		260  [label = "399: assume(!(netif_running != 0));"]
		32  [label = "452: sysfs_registered = 1;"]
		28  [label = "629a: assume(sysfs_lock == 0);"]
		36  [label = "631a: sysfs_lock = 0;"]
		81  [label = "245: want_dev = 0;"]
		49  [label = "388: registered = 1;"]
		73  [label = "238a: assume(probe1 == 0);"]
		246  [label = "647a: sysfs_lock = 0;"]
		29  [label = "629b: sysfs_lock = 1;"]
		70  [label = "237: probe1 = ret4;"]
		237  [label = "457: sysfs_registered = 0;"]
		40  [label = "477: hw_start = drv_hw_start;"]
		80  [label = "244: dev_lock = 5;"]
		97  [label = "642: want_sysfs = 0;"]
		272  [label = "250a: dev_lock = 0;"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		99  [label = "591: assert(dev_on != 0);"]
		193  [label = "278a: assume(registered != 0);"]
		212  [label = "492a: assert(hw_start != 0);"]
		90  [label = "603: dev_on = 1;"]
		216  [label = "280b: assume(!(ret1 == 0));"]
		183  [label = "560: reset_task_ready = 1;"]
		74  [label = "494: IntrMask = 0;"]
		128  [label = "290a: assume(rtnl_lock == 0);"]
		76  [label = "498b: assume(!(rc2 < 0));"]
		158  [label = "592: IntrMask = val;"]
		67  [label = "407: ret3 = 0;"]
		92  [label = "605: intr_mask = 1;"]
		120  [label = "260: open1 = ret1;"]
		123  [label = "261a: assume(open1 == 0);"]
		155  [label = "611a: val = 0;"]
		218  [label = "277b: rtnl_lock = 1;"]
		129  [label = "290b: rtnl_lock = 1;"]
		206  [label = "496: rc2 = ret3;"]
		142  [label = "416: irq_enabled = 0;"]
		148  [label = "426: napi_enabled = 0;"]
		101  [label = "592: IntrMask = val;"]
		169  [label = "447a: irq_sem = 0;"]
		136  [label = "292: netif_running = 0;"]
		165  [label = "446a: assume(irq_sem == 0);"]
		177  [label = "295a: rtnl_lock = 0;"]
		211  [label = "499: ret5 = rc2;"]
		210  [label = "498a: assume(rc2 < 0);"]
		213  [label = "279: ret1 = ret5;"]
		56  [label = "278a: assume(registered != 0);"]
		219  [label = "284a: rtnl_lock = 0;"]
		105  [label = "492a: assert(hw_start != 0);"]
		150  [label = "427b: napi_sem = 1;"]
		208  [label = "494: IntrMask = 0;"]
		133  [label = "291a: assume(netif_running != 0);"]
		111  [label = "281: netif_running = 1;"]
		173  [label = "615: dev_on = 0;"]
		84  [label = "421: napi_enabled = 1;"]
		117  [label = "284a: rtnl_lock = 0;"]
		113  [label = "277b: rtnl_lock = 1;"]
		42  [label = "275: ret1 = 0;"]
		106  [label = "279: ret1 = ret5;"]
		217  [label = "277a: assume(rtnl_lock == 0);"]
		220  [label = "260: open1 = ret1;"]
		223  [label = "261b: assume(!(open1 == 0));"]
		205  [label = "409: ret3 = -1;"]
		166  [label = "446b: irq_sem = 1;"]
		104  [label = "503: ret5 = 0;"]
		191  [label = "275: ret1 = 0;"]
		68  [label = "496: rc2 = ret3;"]
		112  [label = "277a: assume(rtnl_lock == 0);"]
		94  [label = "604a: val = 1;"]
		66  [label = "406: irq_enabled = 1;"]
		149  [label = "427a: assume(napi_sem == 0);"]
		109  [label = "280a: assume(ret1 == 0);"]
		157  [label = "591: assert(dev_on != 0);"]
	}
}
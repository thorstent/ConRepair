digraph Counterexample {
	125 -> 126 [color = white, style = solid]
	167 -> 242 [color = black, style = solid, constraint = false]
	99 -> 100 [color = white, style = solid]
	211 -> 213 [color = white, style = solid]
	32 -> 42 [color = white, style = solid]
	63 -> 130 [color = black, style = solid, constraint = false]
	131 -> 141 [color = white, style = solid]
	147 -> 148 [color = white, style = solid]
	187 -> 232 [color = black, style = solid, constraint = false]
	68 -> 85 [color = white, style = solid]
	203 -> 213 [color = black, style = solid, constraint = false]
	205 -> 238 [color = white, style = solid]
	141 -> 184 [color = white, style = solid]
	121 -> 130 [color = white, style = solid]
	213 -> 214 [color = white, style = solid]
	186 -> 191 [color = white, style = solid]
	174 -> 178 [color = white, style = solid]
	154 -> 155 [color = white, style = solid]
	78 -> 79 [color = white, style = solid]
	116 -> 123 [color = white, style = solid]
	218 -> 222 [color = white, style = solid]
	133 -> 134 [color = white, style = solid]
	112 -> 113 [color = white, style = solid]
	184 -> 186 [color = white, style = solid]
	134 -> 135 [color = white, style = solid]
	120 -> 121 [color = white, style = solid]
	172 -> 173 [color = white, style = solid]
	151 -> 152 [color = white, style = solid]
	146 -> 147 [color = white, style = solid]
	207 -> 232 [color = white, style = solid]
	222 -> 224 [color = white, style = solid]
	80 -> 81 [color = white, style = solid]
	130 -> 178 [color = black, style = solid, constraint = false]
	123 -> 146 [color = white, style = solid]
	162 -> 205 [color = white, style = solid]
	113 -> 114 [color = white, style = solid]
	107 -> 112 [color = white, style = solid]
	214 -> 218 [color = white, style = solid]
	173 -> 174 [color = white, style = solid]
	57 -> 85 [color = black, style = solid, constraint = false]
	79 -> 80 [color = white, style = solid]
	238 -> 242 [color = white, style = solid]
	73 -> 74 [color = white, style = solid]
	85 -> 98 [color = white, style = solid]
	148 -> 151 [color = white, style = solid]
	152 -> 153 [color = white, style = solid]
	98 -> 99 [color = white, style = solid]
	82 -> 109 [color = white, style = solid]
	130 -> 131 [color = white, style = solid]
	81 -> 82 [color = white, style = solid]
	109 -> 124 [color = white, style = solid]
	153 -> 154 [color = white, style = solid]
	166 -> 167 [color = white, style = solid]
	164 -> 166 [color = white, style = solid]
	85 -> 238 [color = black, style = solid, constraint = false]
	159 -> 163 [color = white, style = solid]
	52 -> 57 [color = white, style = solid]
	191 -> 192 [color = white, style = solid]
	114 -> 116 [color = white, style = solid]
	225 -> 229 [color = white, style = solid]
	199 -> 200 [color = white, style = solid]
	31 -> 32 [color = white, style = solid]
	190 -> 198 [color = white, style = solid]
	242 -> 255 [color = white, style = solid]
	203 -> 207 [color = white, style = solid]
	192 -> 210 [color = white, style = solid]
	178 -> 182 [color = white, style = solid]
	135 -> 173 [color = black, style = solid, constraint = false]
	189 -> 190 [color = white, style = solid]
	70 -> 73 [color = white, style = solid]
	104 -> 107 [color = white, style = solid]
	48 -> 52 [color = white, style = solid]
	39 -> 187 [color = white, style = solid]
	191 -> 203 [color = black, style = solid, constraint = false]
	57 -> 58 [color = white, style = solid]
	123 -> 130 [color = black, style = solid, constraint = false]
	74 -> 75 [color = white, style = solid]
	75 -> 78 [color = white, style = solid]
	167 -> 172 [color = white, style = solid]
	102 -> 104 [color = white, style = solid]
	224 -> 225 [color = white, style = solid]
	58 -> 70 [color = white, style = solid]
	119 -> 120 [color = white, style = solid]
	100 -> 102 [color = white, style = solid]
	124 -> 125 [color = white, style = solid]
	198 -> 199 [color = white, style = solid]
	182 -> 189 [color = white, style = solid]
	126 -> 162 [color = white, style = solid]
	200 -> 203 [color = white, style = solid]
	42 -> 48 [color = white, style = solid]
	210 -> 211 [color = white, style = solid]
	155 -> 156 [color = white, style = solid]
	94 -> 133 [color = white, style = solid]
	156 -> 159 [color = white, style = solid]
	163 -> 164 [color = white, style = solid]
	subgraph cluster4 {
		label = napi_thread
		color = blue
		134  [label = "328b: napi_sem = 1;"]
		135  [label = "332a: napi_sem = 0;"]
		94  [label = "329a: assume(napi_scheduled == 0);"]
		133  [label = "328a: assume(napi_sem == 0);"]
	}
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		39  [label = "340a: assume(reset_task_ready == 0);"]
		187  [label = "340a: assume(reset_task_ready == 0);"]
	}
	subgraph cluster7 {
		label = dev_thread
		color = blue
		63  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		126  [label = "642: want_sysfs = 0;"]
		80  [label = "243: assume(dev_lock == 0);"]
		31  [label = "629a: assume(sysfs_lock == 0);"]
		48  [label = "631a: sysfs_lock = 0;"]
		75  [label = "237: probe1 = ret4;"]
		109  [label = "638: want_sysfs = 5;"]
		73  [label = "479b: assume(!(rc1 < 0));"]
		205  [label = "647a: sysfs_lock = 0;"]
		162  [label = "457: sysfs_registered = 0;"]
		82  [label = "245: want_dev = 0;"]
		78  [label = "238a: assume(probe1 == 0);"]
		58  [label = "389: ret2 = 0;"]
		125  [label = "641: sysfs_lock = 5;"]
		255  [label = "250a: dev_lock = 0;"]
		32  [label = "629b: sysfs_lock = 1;"]
		52  [label = "477: hw_start = drv_hw_start;"]
		70  [label = "476: rc1 = ret2;"]
		57  [label = "388: registered = 1;"]
		74  [label = "482: ret4 = 0;"]
		81  [label = "244: dev_lock = 5;"]
		124  [label = "640: assume(sysfs_lock == 0);"]
		42  [label = "452: sysfs_registered = 1;"]
		79  [label = "241: want_dev = 5;"]
		242  [label = "399: assume(!(netif_running != 0));"]
		238  [label = "398: registered = 0;"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		116  [label = "591: assert(dev_on != 0);"]
		199  [label = "446b: irq_sem = 1;"]
		107  [label = "421: napi_enabled = 1;"]
		100  [label = "496: rc2 = ret3;"]
		182  [label = "611a: val = 0;"]
		147  [label = "492a: assert(hw_start != 0);"]
		114  [label = "604a: val = 1;"]
		123  [label = "592: IntrMask = val;"]
		159  [label = "261a: assume(open1 == 0);"]
		104  [label = "498b: assume(!(rc2 < 0));"]
		198  [label = "446a: assume(irq_sem == 0);"]
		189  [label = "591: assert(dev_on != 0);"]
		151  [label = "280a: assume(ret1 == 0);"]
		178  [label = "416: irq_enabled = 0;"]
		232  [label = "560: reset_task_ready = 1;"]
		146  [label = "503: ret5 = 0;"]
		163  [label = "290a: assume(rtnl_lock == 0);"]
		112  [label = "603: dev_on = 1;"]
		173  [label = "427a: assume(napi_sem == 0);"]
		113  [label = "605: intr_mask = 1;"]
		99  [label = "407: ret3 = 0;"]
		85  [label = "278a: assume(registered != 0);"]
		152  [label = "281: netif_running = 1;"]
		167  [label = "292: netif_running = 0;"]
		190  [label = "592: IntrMask = val;"]
		203  [label = "615: dev_on = 0;"]
		156  [label = "260: open1 = ret1;"]
		172  [label = "426: napi_enabled = 0;"]
		200  [label = "447a: irq_sem = 0;"]
		102  [label = "494: IntrMask = 0;"]
		154  [label = "277b: rtnl_lock = 1;"]
		174  [label = "427b: napi_sem = 1;"]
		68  [label = "275: ret1 = 0;"]
		153  [label = "277a: assume(rtnl_lock == 0);"]
		207  [label = "295a: rtnl_lock = 0;"]
		98  [label = "406: irq_enabled = 1;"]
		155  [label = "284a: rtnl_lock = 0;"]
		166  [label = "291a: assume(netif_running != 0);"]
		164  [label = "290b: rtnl_lock = 1;"]
		148  [label = "279: ret1 = ret5;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		120  [label = "305b: irq_sem = 1;"]
		192  [label = "598: IntrStatus = IntrStatus & (~val);"]
		222  [label = "433b: assume(!(napi_enabled != 0));"]
		184  [label = "526: status1 = IntrStatus;"]
		214  [label = "592: IntrMask = val;"]
		210  [label = "528a: assume(intr_mask != 0);"]
		213  [label = "591: assert(dev_on != 0);", color = red]
		218  [label = "530: intr_mask = 0;"]
		131  [label = "307: assert(intr_mask != 0);"]
		211  [label = "529a: val = 0;"]
		119  [label = "305a: assume(irq_sem == 0);"]
		229  [label = "537: assume(!status1);"]
		130  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		141  [label = "524: handled2 = 0;"]
		191  [label = "597: assert(dev_on != 0);"]
		225  [label = "535: status1 = IntrStatus;"]
		224  [label = "532: handled2 = 1;"]
		121  [label = "310a: irq_sem = 0;"]
		186  [label = "534a: val = status1;"]
	}
}
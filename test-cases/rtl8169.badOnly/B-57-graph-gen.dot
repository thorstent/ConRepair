digraph Counterexample {
	99 -> 100 [color = white, style = solid]
	192 -> 195 [color = white, style = solid]
	123 -> 130 [color = white, style = solid]
	60 -> 65 [color = white, style = solid]
	145 -> 155 [color = white, style = solid]
	65 -> 67 [color = white, style = solid]
	228 -> 229 [color = white, style = solid]
	89 -> 92 [color = white, style = solid]
	35 -> 36 [color = white, style = solid]
	145 -> 175 [color = black, style = solid, constraint = false]
	107 -> 109 [color = white, style = solid]
	208 -> 209 [color = white, style = solid]
	59 -> 60 [color = white, style = solid]
	113 -> 114 [color = white, style = solid]
	79 -> 80 [color = white, style = solid]
	233 -> 239 [color = white, style = solid]
	53 -> 54 [color = white, style = solid]
	274 -> 275 [color = white, style = solid]
	49 -> 51 [color = white, style = solid]
	157 -> 159 [color = white, style = solid]
	67 -> 69 [color = white, style = solid]
	94 -> 99 [color = white, style = solid]
	90 -> 189 [color = white, style = solid]
	100 -> 101 [color = white, style = solid]
	90 -> 125 [color = black, style = solid, constraint = false]
	52 -> 53 [color = white, style = solid]
	169 -> 170 [color = white, style = solid]
	229 -> 233 [color = white, style = solid]
	186 -> 187 [color = white, style = solid]
	131 -> 132 [color = white, style = solid]
	34 -> 35 [color = white, style = solid]
	180 -> 183 [color = white, style = solid]
	286 -> 287 [color = white, style = solid]
	184 -> 185 [color = white, style = solid]
	90 -> 155 [color = black, style = solid, constraint = false]
	119 -> 123 [color = white, style = solid]
	207 -> 208 [color = white, style = solid]
	251 -> 255 [color = white, style = solid]
	101 -> 102 [color = white, style = solid]
	51 -> 52 [color = white, style = solid]
	214 -> 219 [color = white, style = solid]
	48 -> 78 [color = black, style = solid, constraint = false]
	170 -> 172 [color = white, style = solid]
	195 -> 200 [color = white, style = solid]
	187 -> 192 [color = white, style = solid]
	202 -> 213 [color = white, style = solid]
	168 -> 169 [color = white, style = solid]
	246 -> 247 [color = white, style = solid]
	240 -> 250 [color = white, style = solid]
	223 -> 235 [color = white, style = solid]
	47 -> 59 [color = black, style = solid, constraint = false]
	78 -> 145 [color = black, style = solid, constraint = false]
	179 -> 180 [color = white, style = solid]
	222 -> 228 [color = white, style = solid]
	102 -> 107 [color = white, style = solid]
	235 -> 237 [color = white, style = solid]
	247 -> 266 [color = white, style = solid]
	164 -> 168 [color = white, style = solid]
	109 -> 175 [color = white, style = solid]
	161 -> 164 [color = white, style = solid]
	213 -> 214 [color = black, style = solid, constraint = false]
	244 -> 245 [color = white, style = solid]
	283 -> 286 [color = white, style = solid]
	80 -> 83 [color = white, style = solid]
	280 -> 283 [color = white, style = solid]
	78 -> 79 [color = white, style = solid]
	137 -> 143 [color = white, style = solid]
	48 -> 113 [color = white, style = solid]
	175 -> 176 [color = white, style = solid]
	69 -> 78 [color = white, style = solid]
	219 -> 221 [color = white, style = solid]
	36 -> 37 [color = white, style = solid]
	176 -> 258 [color = white, style = solid]
	132 -> 137 [color = white, style = solid]
	172 -> 173 [color = white, style = solid]
	47 -> 49 [color = white, style = solid]
	178 -> 179 [color = white, style = solid]
	239 -> 250 [color = black, style = solid, constraint = false]
	85 -> 88 [color = white, style = solid]
	125 -> 146 [color = white, style = solid]
	114 -> 115 [color = white, style = solid]
	45 -> 48 [color = white, style = solid]
	268 -> 272 [color = white, style = solid]
	143 -> 145 [color = white, style = solid]
	275 -> 277 [color = white, style = solid]
	260 -> 261 [color = white, style = solid]
	76 -> 90 [color = white, style = solid]
	83 -> 84 [color = white, style = solid]
	70 -> 71 [color = white, style = solid]
	116 -> 119 [color = white, style = solid]
	250 -> 251 [color = white, style = solid]
	93 -> 94 [color = white, style = solid]
	173 -> 178 [color = white, style = solid]
	130 -> 131 [color = white, style = solid]
	71 -> 76 [color = white, style = solid]
	176 -> 184 [color = black, style = solid, constraint = false]
	257 -> 260 [color = white, style = solid]
	53 -> 89 [color = black, style = solid, constraint = false]
	213 -> 223 [color = white, style = solid]
	156 -> 157 [color = white, style = solid]
	279 -> 280 [color = white, style = solid]
	173 -> 213 [color = black, style = solid, constraint = false]
	39 -> 47 [color = white, style = solid]
	209 -> 214 [color = white, style = solid]
	255 -> 257 [color = white, style = solid]
	239 -> 244 [color = white, style = solid]
	237 -> 240 [color = white, style = solid]
	84 -> 85 [color = white, style = solid]
	37 -> 39 [color = white, style = solid]
	189 -> 190 [color = white, style = solid]
	277 -> 279 [color = white, style = solid]
	185 -> 186 [color = white, style = solid]
	54 -> 92 [color = black, style = solid, constraint = false]
	88 -> 89 [color = white, style = solid]
	159 -> 161 [color = white, style = solid]
	146 -> 213 [color = black, style = solid, constraint = false]
	200 -> 207 [color = white, style = solid]
	221 -> 222 [color = white, style = solid]
	245 -> 246 [color = white, style = solid]
	115 -> 116 [color = white, style = solid]
	183 -> 184 [color = white, style = solid]
	261 -> 268 [color = white, style = solid]
	155 -> 156 [color = white, style = solid]
	272 -> 274 [color = white, style = solid]
	190 -> 202 [color = white, style = solid]
	92 -> 93 [color = white, style = solid]
	subgraph cluster6 {
		label = sysfs_thread
		color = blue
		47  [label = "377a: sysfs_lock = 0;"]
		49  [label = "364: want_dev = 6;"]
		54  [label = "376a: dev_lock = 0;"]
		34  [label = "354: want_sysfs = 6;"]
		51  [label = "366: assume(dev_lock == 0);"]
		52  [label = "367: dev_lock = 6;"]
		36  [label = "357: sysfs_lock = 6;"]
		35  [label = "356: assume(sysfs_lock == 0);"]
		53  [label = "368: want_dev = 0;"]
		37  [label = "358: want_sysfs = 0;"]
		39  [label = "372b: assume(!(sysfs_registered != 0));"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		69  [label = "477: hw_start = drv_hw_start;"]
		84  [label = "482: ret4 = 0;"]
		88  [label = "238a: assume(probe1 == 0);"]
		67  [label = "631a: sysfs_lock = 0;"]
		102  [label = "642: want_sysfs = 0;"]
		94  [label = "245: want_dev = 0;"]
		92  [label = "243: assume(dev_lock == 0);"]
		109  [label = "647a: sysfs_lock = 0;"]
		83  [label = "479b: assume(!(rc1 < 0));"]
		80  [label = "476: rc1 = ret2;"]
		101  [label = "641: sysfs_lock = 5;"]
		258  [label = "250a: dev_lock = 0;"]
		107  [label = "457: sysfs_registered = 0;"]
		79  [label = "389: ret2 = 0;"]
		93  [label = "244: dev_lock = 5;"]
		175  [label = "398: registered = 0;"]
		176  [label = "399: assume(!(netif_running != 0));"]
		99  [label = "638: want_sysfs = 5;"]
		65  [label = "452: sysfs_registered = 1;"]
		60  [label = "629b: sysfs_lock = 1;"]
		85  [label = "237: probe1 = ret4;"]
		100  [label = "640: assume(sysfs_lock == 0);"]
		78  [label = "388: registered = 1;"]
		59  [label = "629a: assume(sysfs_lock == 0);"]
		89  [label = "241: want_dev = 5;"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		159  [label = "494: IntrMask = 0;"]
		186  [label = "277b: rtnl_lock = 1;"]
		221  [label = "591: assert(dev_on != 0);"]
		209  [label = "427b: napi_sem = 1;"]
		187  [label = "284a: rtnl_lock = 0;"]
		114  [label = "277b: rtnl_lock = 1;"]
		183  [label = "280a: assume(ret1 == 0);"]
		164  [label = "421: napi_enabled = 1;"]
		244  [label = "292: netif_running = 0;"]
		169  [label = "605: intr_mask = 1;"]
		246  [label = "290b: rtnl_lock = 1;"]
		168  [label = "603: dev_on = 1;"]
		172  [label = "591: assert(dev_on != 0);"]
		184  [label = "281: netif_running = 1;"]
		233  [label = "447a: irq_sem = 0;"]
		173  [label = "592: IntrMask = val;"]
		130  [label = "290a: assume(rtnl_lock == 0);"]
		239  [label = "615: dev_on = 0;"]
		179  [label = "492a: assert(hw_start != 0);"]
		156  [label = "407: ret3 = 0;"]
		48  [label = "278b: assume(!(registered != 0));"]
		180  [label = "279: ret1 = ret5;"]
		170  [label = "604a: val = 1;"]
		192  [label = "260: open1 = ret1;"]
		132  [label = "295a: rtnl_lock = 0;"]
		228  [label = "446a: assume(irq_sem == 0);"]
		143  [label = "275: ret1 = 0;"]
		266  [label = "560: reset_task_ready = 1;"]
		119  [label = "261a: assume(open1 == 0);"]
		229  [label = "446b: irq_sem = 1;"]
		131  [label = "290b: rtnl_lock = 1;"]
		247  [label = "295a: rtnl_lock = 0;"]
		208  [label = "427a: assume(napi_sem == 0);"]
		178  [label = "503: ret5 = 0;"]
		157  [label = "496: rc2 = ret3;"]
		116  [label = "260: open1 = ret1;"]
		200  [label = "291a: assume(netif_running != 0);"]
		161  [label = "498b: assume(!(rc2 < 0));"]
		245  [label = "290a: assume(rtnl_lock == 0);"]
		137  [label = "560: reset_task_ready = 1;"]
		115  [label = "284a: rtnl_lock = 0;"]
		222  [label = "592: IntrMask = val;"]
		145  [label = "278a: assume(registered != 0);"]
		214  [label = "416: irq_enabled = 0;"]
		113  [label = "277a: assume(rtnl_lock == 0);"]
		207  [label = "426: napi_enabled = 0;"]
		185  [label = "277a: assume(rtnl_lock == 0);"]
		123  [label = "291b: assume(!(netif_running != 0));"]
		195  [label = "261a: assume(open1 == 0);"]
		155  [label = "406: irq_enabled = 1;"]
		45  [label = "275: ret1 = 0;"]
		219  [label = "611a: val = 0;"]
	}
	subgraph cluster7 {
		label = dev_thread
		color = blue
		125  [label = "317: IntrStatus = 1;"]
		146  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		76  [label = "310a: irq_sem = 0;"]
		235  [label = "524: handled2 = 0;"]
		283  [label = "528b: assume(!(intr_mask != 0));"]
		277  [label = "534a: val = status1;"]
		213  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		287  [label = "537: assume(!status1);"]
		71  [label = "305b: irq_sem = 1;"]
		190  [label = "305b: irq_sem = 1;"]
		202  [label = "310a: irq_sem = 0;"]
		279  [label = "597: assert(dev_on != 0);"]
		90  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		240  [label = "534a: val = status1;"]
		251  [label = "598: IntrStatus = IntrStatus & (~val);"]
		250  [label = "597: assert(dev_on != 0);", color = red]
		268  [label = "530: intr_mask = 0;"]
		260  [label = "591: assert(dev_on != 0);"]
		70  [label = "305a: assume(irq_sem == 0);"]
		274  [label = "532: handled2 = 1;"]
		286  [label = "535: status1 = IntrStatus;"]
		272  [label = "433b: assume(!(napi_enabled != 0));"]
		255  [label = "528a: assume(intr_mask != 0);"]
		275  [label = "535: status1 = IntrStatus;"]
		223  [label = "307: assert(intr_mask != 0);"]
		189  [label = "305a: assume(irq_sem == 0);"]
		261  [label = "592: IntrMask = val;"]
		257  [label = "529a: val = 0;"]
		237  [label = "526: status1 = IntrStatus;"]
		280  [label = "598: IntrStatus = IntrStatus & (~val);"]
	}
}
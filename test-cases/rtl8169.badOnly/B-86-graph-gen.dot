digraph Counterexample {
	63 -> 70 [color = white, style = solid]
	150 -> 184 [color = black, style = solid, constraint = false]
	174 -> 189 [color = white, style = solid]
	157 -> 158 [color = white, style = solid]
	70 -> 122 [color = black, style = solid, constraint = false]
	182 -> 184 [color = white, style = solid]
	272 -> 278 [color = white, style = solid]
	136 -> 138 [color = white, style = solid]
	72 -> 75 [color = white, style = solid]
	84 -> 91 [color = white, style = solid]
	189 -> 200 [color = white, style = solid]
	76 -> 77 [color = white, style = solid]
	206 -> 208 [color = white, style = solid]
	61 -> 63 [color = white, style = solid]
	36 -> 86 [color = black, style = solid, constraint = false]
	71 -> 72 [color = white, style = solid]
	213 -> 214 [color = white, style = solid]
	227 -> 232 [color = white, style = solid]
	172 -> 174 [color = white, style = solid]
	180 -> 181 [color = white, style = solid]
	202 -> 206 [color = white, style = solid]
	122 -> 127 [color = white, style = solid]
	221 -> 226 [color = black, style = solid, constraint = false]
	133 -> 134 [color = white, style = solid]
	150 -> 153 [color = white, style = solid]
	95 -> 96 [color = white, style = solid]
	111 -> 112 [color = white, style = solid]
	56 -> 59 [color = white, style = solid]
	96 -> 99 [color = white, style = solid]
	86 -> 184 [color = black, style = solid, constraint = false]
	30 -> 31 [color = white, style = solid]
	217 -> 241 [color = black, style = solid, constraint = false]
	235 -> 241 [color = white, style = solid]
	163 -> 167 [color = white, style = solid]
	146 -> 147 [color = white, style = solid]
	159 -> 160 [color = white, style = solid]
	233 -> 235 [color = white, style = solid]
	75 -> 76 [color = white, style = solid]
	200 -> 201 [color = white, style = solid]
	80 -> 81 [color = white, style = solid]
	99 -> 103 [color = white, style = solid]
	108 -> 111 [color = white, style = solid]
	184 -> 227 [color = white, style = solid]
	208 -> 209 [color = white, style = solid]
	36 -> 180 [color = white, style = solid]
	120 -> 122 [color = white, style = solid]
	181 -> 182 [color = white, style = solid]
	271 -> 272 [color = white, style = solid]
	201 -> 202 [color = white, style = solid]
	91 -> 92 [color = white, style = solid]
	191 -> 193 [color = white, style = solid]
	77 -> 80 [color = white, style = solid]
	160 -> 163 [color = white, style = solid]
	47 -> 48 [color = white, style = solid]
	70 -> 71 [color = white, style = solid]
	83 -> 84 [color = white, style = solid]
	147 -> 149 [color = white, style = solid]
	209 -> 213 [color = white, style = solid]
	49 -> 51 [color = white, style = solid]
	184 -> 189 [color = black, style = solid, constraint = false]
	250 -> 251 [color = white, style = solid]
	93 -> 94 [color = white, style = solid]
	193 -> 225 [color = white, style = solid]
	254 -> 257 [color = white, style = solid]
	55 -> 56 [color = white, style = solid]
	81 -> 82 [color = white, style = solid]
	232 -> 233 [color = white, style = solid]
	153 -> 154 [color = white, style = solid]
	103 -> 107 [color = white, style = solid]
	158 -> 159 [color = white, style = solid]
	127 -> 132 [color = white, style = solid]
	257 -> 268 [color = white, style = solid]
	94 -> 191 [color = white, style = solid]
	118 -> 119 [color = white, style = solid]
	36 -> 132 [color = black, style = solid, constraint = false]
	132 -> 133 [color = white, style = solid]
	34 -> 36 [color = white, style = solid]
	112 -> 118 [color = white, style = solid]
	154 -> 157 [color = white, style = solid]
	253 -> 254 [color = white, style = solid]
	241 -> 243 [color = white, style = solid]
	251 -> 253 [color = white, style = solid]
	171 -> 172 [color = white, style = solid]
	215 -> 217 [color = white, style = solid]
	134 -> 136 [color = white, style = solid]
	122 -> 225 [color = black, style = solid, constraint = false]
	138 -> 141 [color = white, style = solid]
	226 -> 245 [color = white, style = solid]
	107 -> 108 [color = white, style = solid]
	82 -> 83 [color = white, style = solid]
	268 -> 271 [color = white, style = solid]
	31 -> 34 [color = white, style = solid]
	149 -> 150 [color = white, style = solid]
	243 -> 250 [color = white, style = solid]
	51 -> 95 [color = white, style = solid]
	119 -> 120 [color = white, style = solid]
	145 -> 146 [color = white, style = solid]
	221 -> 222 [color = white, style = solid]
	167 -> 171 [color = white, style = solid]
	225 -> 226 [color = white, style = solid]
	214 -> 215 [color = white, style = solid]
	59 -> 61 [color = white, style = solid]
	48 -> 49 [color = white, style = solid]
	217 -> 221 [color = white, style = solid]
	141 -> 145 [color = white, style = solid]
	51 -> 70 [color = black, style = solid, constraint = false]
	92 -> 93 [color = white, style = solid]
	subgraph cluster7 {
		label = dev_thread
		color = blue
		86  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		55  [label = "629a: assume(sysfs_lock == 0);"]
		77  [label = "237: probe1 = ret4;"]
		61  [label = "631a: sysfs_lock = 0;"]
		94  [label = "642: want_sysfs = 0;"]
		84  [label = "245: want_dev = 0;"]
		91  [label = "638: want_sysfs = 5;"]
		75  [label = "479b: assume(!(rc1 < 0));"]
		81  [label = "241: want_dev = 5;"]
		93  [label = "641: sysfs_lock = 5;"]
		92  [label = "640: assume(sysfs_lock == 0);"]
		71  [label = "389: ret2 = 0;"]
		193  [label = "647a: sysfs_lock = 0;"]
		63  [label = "477: hw_start = drv_hw_start;"]
		59  [label = "452: sysfs_registered = 1;"]
		70  [label = "388: registered = 1;"]
		76  [label = "482: ret4 = 0;"]
		225  [label = "398: registered = 0;"]
		82  [label = "243: assume(dev_lock == 0);"]
		245  [label = "250a: dev_lock = 0;"]
		191  [label = "457: sysfs_registered = 0;"]
		56  [label = "629b: sysfs_lock = 1;"]
		83  [label = "244: dev_lock = 5;"]
		80  [label = "238a: assume(probe1 == 0);"]
		226  [label = "399: assume(!(netif_running != 0));"]
		72  [label = "476: rc1 = ret2;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		227  [label = "307: assert(intr_mask != 0);"]
		272  [label = "535: status1 = IntrStatus;"]
		241  [label = "597: assert(dev_on != 0);", color = red]
		251  [label = "529a: val = 0;"]
		235  [label = "534a: val = status1;"]
		268  [label = "433b: assume(!(napi_enabled != 0));"]
		254  [label = "592: IntrMask = val;"]
		184  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		182  [label = "310a: irq_sem = 0;"]
		257  [label = "530: intr_mask = 0;"]
		34  [label = "310a: irq_sem = 0;"]
		232  [label = "524: handled2 = 0;"]
		30  [label = "305a: assume(irq_sem == 0);"]
		31  [label = "305b: irq_sem = 1;"]
		271  [label = "532: handled2 = 1;"]
		243  [label = "598: IntrStatus = IntrStatus & (~val);"]
		180  [label = "305a: assume(irq_sem == 0);"]
		250  [label = "528a: assume(intr_mask != 0);"]
		278  [label = "537: assume(!status1);"]
		181  [label = "305b: irq_sem = 1;"]
		233  [label = "526: status1 = IntrStatus;"]
		253  [label = "591: assert(dev_on != 0);"]
		36  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		189  [label = "416: irq_enabled = 0;"]
		112  [label = "295a: rtnl_lock = 0;"]
		160  [label = "260: open1 = ret1;"]
		107  [label = "290a: assume(rtnl_lock == 0);"]
		119  [label = "277a: assume(rtnl_lock == 0);"]
		150  [label = "592: IntrMask = val;"]
		118  [label = "275: ret1 = 0;"]
		201  [label = "427a: assume(napi_sem == 0);"]
		146  [label = "605: intr_mask = 1;"]
		215  [label = "447a: irq_sem = 0;"]
		122  [label = "278a: assume(registered != 0);"]
		171  [label = "290a: assume(rtnl_lock == 0);"]
		47  [label = "275: ret1 = 0;"]
		103  [label = "560: reset_task_ready = 1;"]
		99  [label = "261a: assume(open1 == 0);"]
		48  [label = "277a: assume(rtnl_lock == 0);"]
		145  [label = "603: dev_on = 1;"]
		208  [label = "591: assert(dev_on != 0);"]
		202  [label = "427b: napi_sem = 1;"]
		136  [label = "494: IntrMask = 0;"]
		149  [label = "591: assert(dev_on != 0);"]
		95  [label = "284a: rtnl_lock = 0;"]
		108  [label = "290b: rtnl_lock = 1;"]
		120  [label = "277b: rtnl_lock = 1;"]
		209  [label = "592: IntrMask = val;"]
		159  [label = "284a: rtnl_lock = 0;"]
		138  [label = "498b: assume(!(rc2 < 0));"]
		134  [label = "496: rc2 = ret3;"]
		221  [label = "292: netif_running = 0;"]
		141  [label = "421: napi_enabled = 1;"]
		206  [label = "611a: val = 0;"]
		163  [label = "261a: assume(open1 == 0);"]
		172  [label = "290b: rtnl_lock = 1;"]
		200  [label = "426: napi_enabled = 0;"]
		214  [label = "446b: irq_sem = 1;"]
		49  [label = "277b: rtnl_lock = 1;"]
		132  [label = "406: irq_enabled = 1;"]
		222  [label = "295a: rtnl_lock = 0;"]
		217  [label = "615: dev_on = 0;"]
		133  [label = "407: ret3 = 0;"]
		153  [label = "503: ret5 = 0;"]
		213  [label = "446a: assume(irq_sem == 0);"]
		51  [label = "278b: assume(!(registered != 0));"]
		174  [label = "291a: assume(netif_running != 0);"]
		157  [label = "280a: assume(ret1 == 0);"]
		167  [label = "560: reset_task_ready = 1;"]
		147  [label = "604a: val = 1;"]
		154  [label = "279: ret1 = ret5;"]
		111  [label = "291b: assume(!(netif_running != 0));"]
		96  [label = "260: open1 = ret1;"]
		127  [label = "492a: assert(hw_start != 0);"]
		158  [label = "281: netif_running = 1;"]
	}
}
digraph Counterexample {
	204 -> 205 [color = white, style = solid]
	29 -> 31 [color = white, style = solid]
	195 -> 259 [color = black, style = solid, constraint = false]
	211 -> 213 [color = white, style = solid]
	205 -> 206 [color = white, style = solid]
	218 -> 222 [color = white, style = solid]
	122 -> 125 [color = white, style = solid]
	200 -> 204 [color = white, style = solid]
	68 -> 69 [color = white, style = solid]
	184 -> 186 [color = white, style = solid]
	31 -> 97 [color = black, style = solid, constraint = false]
	120 -> 121 [color = white, style = solid]
	231 -> 250 [color = black, style = solid, constraint = false]
	265 -> 269 [color = white, style = solid]
	61 -> 68 [color = white, style = solid]
	80 -> 81 [color = white, style = solid]
	231 -> 259 [color = white, style = solid]
	177 -> 180 [color = white, style = solid]
	79 -> 80 [color = white, style = solid]
	127 -> 128 [color = white, style = solid]
	238 -> 242 [color = white, style = solid]
	99 -> 101 [color = white, style = solid]
	258 -> 260 [color = white, style = solid]
	204 -> 222 [color = black, style = solid, constraint = false]
	213 -> 218 [color = white, style = solid]
	44 -> 45 [color = white, style = solid]
	88 -> 231 [color = black, style = solid, constraint = false]
	128 -> 130 [color = white, style = solid]
	106 -> 110 [color = white, style = solid]
	98 -> 99 [color = white, style = solid]
	81 -> 82 [color = white, style = solid]
	157 -> 159 [color = white, style = solid]
	287 -> 296 [color = white, style = solid]
	131 -> 134 [color = white, style = solid]
	175 -> 177 [color = white, style = solid]
	153 -> 166 [color = black, style = solid, constraint = false]
	31 -> 162 [color = white, style = solid]
	191 -> 192 [color = white, style = solid]
	45 -> 47 [color = white, style = solid]
	260 -> 262 [color = white, style = solid]
	112 -> 114 [color = white, style = solid]
	215 -> 234 [color = white, style = solid]
	238 -> 251 [color = black, style = solid, constraint = false]
	269 -> 273 [color = white, style = solid]
	86 -> 88 [color = white, style = solid]
	248 -> 250 [color = white, style = solid]
	259 -> 290 [color = white, style = solid]
	70 -> 73 [color = white, style = solid]
	51 -> 52 [color = white, style = solid]
	150 -> 151 [color = white, style = solid]
	250 -> 257 [color = white, style = solid]
	74 -> 75 [color = white, style = solid]
	75 -> 78 [color = white, style = solid]
	149 -> 150 [color = white, style = solid]
	224 -> 225 [color = white, style = solid]
	195 -> 200 [color = white, style = solid]
	166 -> 200 [color = black, style = solid, constraint = false]
	242 -> 248 [color = white, style = solid]
	59 -> 61 [color = white, style = solid]
	55 -> 59 [color = white, style = solid]
	174 -> 175 [color = white, style = solid]
	163 -> 164 [color = white, style = solid]
	125 -> 126 [color = white, style = solid]
	151 -> 157 [color = white, style = solid]
	236 -> 238 [color = white, style = solid]
	210 -> 214 [color = white, style = solid]
	273 -> 274 [color = white, style = solid]
	235 -> 236 [color = white, style = solid]
	180 -> 181 [color = white, style = solid]
	110 -> 111 [color = white, style = solid]
	78 -> 79 [color = white, style = solid]
	257 -> 258 [color = white, style = solid]
	111 -> 112 [color = white, style = solid]
	276 -> 281 [color = white, style = solid]
	159 -> 231 [color = white, style = solid]
	252 -> 256 [color = white, style = solid]
	213 -> 215 [color = black, style = solid, constraint = false]
	186 -> 211 [color = white, style = solid]
	206 -> 210 [color = white, style = solid]
	222 -> 224 [color = white, style = solid]
	114 -> 115 [color = white, style = solid]
	28 -> 29 [color = white, style = solid]
	227 -> 251 [color = white, style = solid]
	152 -> 269 [color = black, style = solid, constraint = false]
	73 -> 74 [color = white, style = solid]
	162 -> 163 [color = white, style = solid]
	256 -> 287 [color = white, style = solid]
	192 -> 194 [color = white, style = solid]
	31 -> 145 [color = black, style = solid, constraint = false]
	147 -> 149 [color = white, style = solid]
	27 -> 28 [color = white, style = solid]
	130 -> 131 [color = white, style = solid]
	115 -> 166 [color = black, style = solid, constraint = false]
	166 -> 167 [color = white, style = solid]
	164 -> 166 [color = white, style = solid]
	101 -> 103 [color = white, style = solid]
	194 -> 195 [color = white, style = solid]
	167 -> 174 [color = white, style = solid]
	68 -> 88 [color = black, style = solid, constraint = false]
	103 -> 106 [color = white, style = solid]
	88 -> 97 [color = white, style = solid]
	52 -> 55 [color = white, style = solid]
	97 -> 98 [color = white, style = solid]
	225 -> 227 [color = white, style = solid]
	47 -> 138 [color = white, style = solid]
	274 -> 276 [color = white, style = solid]
	126 -> 127 [color = white, style = solid]
	138 -> 205 [color = black, style = solid, constraint = false]
	134 -> 191 [color = white, style = solid]
	82 -> 147 [color = white, style = solid]
	234 -> 235 [color = white, style = solid]
	115 -> 120 [color = white, style = solid]
	251 -> 252 [color = white, style = solid]
	121 -> 122 [color = white, style = solid]
	36 -> 152 [color = white, style = solid]
	181 -> 184 [color = white, style = solid]
	262 -> 265 [color = white, style = solid]
	69 -> 70 [color = white, style = solid]
	214 -> 215 [color = white, style = solid]
	145 -> 153 [color = white, style = solid]
	subgraph cluster7 {
		label = dev_thread
		color = blue
		153  [label = "317: IntrStatus = 1;"]
		145  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster4 {
		label = napi_thread
		color = blue
		45  [label = "328b: napi_sem = 1;"]
		138  [label = "332a: napi_sem = 0;"]
		47  [label = "329a: assume(napi_scheduled == 0);"]
		44  [label = "328a: assume(napi_sem == 0);"]
	}
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		152  [label = "340a: assume(reset_task_ready == 0);"]
		36  [label = "340a: assume(reset_task_ready == 0);"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		149  [label = "640: assume(sysfs_lock == 0);"]
		80  [label = "243: assume(dev_lock == 0);"]
		75  [label = "237: probe1 = ret4;"]
		73  [label = "479b: assume(!(rc1 < 0));"]
		59  [label = "631a: sysfs_lock = 0;"]
		231  [label = "398: registered = 0;"]
		82  [label = "245: want_dev = 0;"]
		68  [label = "388: registered = 1;"]
		78  [label = "238a: assume(probe1 == 0);"]
		55  [label = "452: sysfs_registered = 1;"]
		61  [label = "477: hw_start = drv_hw_start;"]
		51  [label = "629a: assume(sysfs_lock == 0);"]
		69  [label = "389: ret2 = 0;"]
		147  [label = "638: want_sysfs = 5;"]
		259  [label = "399: assume(!(netif_running != 0));"]
		70  [label = "476: rc1 = ret2;"]
		159  [label = "647a: sysfs_lock = 0;"]
		74  [label = "482: ret4 = 0;"]
		81  [label = "244: dev_lock = 5;"]
		150  [label = "641: sysfs_lock = 5;"]
		151  [label = "642: want_sysfs = 0;"]
		290  [label = "250a: dev_lock = 0;"]
		79  [label = "241: want_dev = 5;"]
		52  [label = "629b: sysfs_lock = 1;"]
		157  [label = "457: sysfs_registered = 0;"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		27  [label = "305a: assume(irq_sem == 0);"]
		174  [label = "524: handled2 = 0;"]
		28  [label = "305b: irq_sem = 1;"]
		31  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		167  [label = "307: assert(intr_mask != 0);"]
		162  [label = "305a: assume(irq_sem == 0);"]
		211  [label = "591: assert(dev_on != 0);"]
		227  [label = "534a: val = status1;"]
		224  [label = "532: handled2 = 1;"]
		181  [label = "598: IntrStatus = IntrStatus & (~val);"]
		222  [label = "433b: assume(!(napi_enabled != 0));"]
		180  [label = "597: assert(dev_on != 0);"]
		184  [label = "528a: assume(intr_mask != 0);"]
		164  [label = "310a: irq_sem = 0;"]
		252  [label = "598: IntrStatus = IntrStatus & (~val);"]
		287  [label = "535: status1 = IntrStatus;"]
		163  [label = "305b: irq_sem = 1;"]
		213  [label = "592: IntrMask = val;"]
		296  [label = "537: assume(!status1);"]
		177  [label = "534a: val = status1;"]
		186  [label = "529a: val = 0;"]
		218  [label = "530: intr_mask = 0;"]
		175  [label = "526: status1 = IntrStatus;"]
		251  [label = "597: assert(dev_on != 0);", color = red]
		29  [label = "310a: irq_sem = 0;"]
		256  [label = "528b: assume(!(intr_mask != 0));"]
		166  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		225  [label = "535: status1 = IntrStatus;"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		242  [label = "295a: rtnl_lock = 0;"]
		111  [label = "605: intr_mask = 1;"]
		257  [label = "277a: assume(rtnl_lock == 0);"]
		258  [label = "277b: rtnl_lock = 1;"]
		125  [label = "280a: assume(ret1 == 0);"]
		131  [label = "260: open1 = ret1;"]
		99  [label = "496: rc2 = ret3;"]
		210  [label = "611a: val = 0;"]
		250  [label = "278b: assume(!(registered != 0));"]
		110  [label = "603: dev_on = 1;"]
		112  [label = "604a: val = 1;"]
		214  [label = "591: assert(dev_on != 0);"]
		236  [label = "447a: irq_sem = 0;"]
		276  [label = "291b: assume(!(netif_running != 0));"]
		122  [label = "279: ret1 = ret5;"]
		130  [label = "284a: rtnl_lock = 0;"]
		101  [label = "494: IntrMask = 0;"]
		103  [label = "498b: assume(!(rc2 < 0));"]
		115  [label = "592: IntrMask = val;"]
		106  [label = "421: napi_enabled = 1;"]
		234  [label = "446a: assume(irq_sem == 0);"]
		215  [label = "592: IntrMask = val;"]
		114  [label = "591: assert(dev_on != 0);"]
		88  [label = "278a: assume(registered != 0);"]
		121  [label = "492a: assert(hw_start != 0);"]
		200  [label = "416: irq_enabled = 0;"]
		260  [label = "284a: rtnl_lock = 0;"]
		86  [label = "275: ret1 = 0;"]
		126  [label = "281: netif_running = 1;"]
		192  [label = "290b: rtnl_lock = 1;"]
		191  [label = "290a: assume(rtnl_lock == 0);"]
		238  [label = "615: dev_on = 0;"]
		120  [label = "503: ret5 = 0;"]
		262  [label = "260: open1 = ret1;"]
		204  [label = "426: napi_enabled = 0;"]
		195  [label = "292: netif_running = 0;"]
		205  [label = "427a: assume(napi_sem == 0);"]
		269  [label = "560: reset_task_ready = 1;"]
		235  [label = "446b: irq_sem = 1;"]
		274  [label = "290b: rtnl_lock = 1;"]
		206  [label = "427b: napi_sem = 1;"]
		98  [label = "407: ret3 = 0;"]
		273  [label = "290a: assume(rtnl_lock == 0);"]
		128  [label = "277b: rtnl_lock = 1;"]
		248  [label = "275: ret1 = 0;"]
		134  [label = "261a: assume(open1 == 0);"]
		97  [label = "406: irq_enabled = 1;"]
		281  [label = "295a: rtnl_lock = 0;"]
		265  [label = "261a: assume(open1 == 0);"]
		194  [label = "291a: assume(netif_running != 0);"]
		127  [label = "277a: assume(rtnl_lock == 0);"]
	}
}
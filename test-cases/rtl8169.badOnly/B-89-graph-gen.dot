digraph Counterexample {
	204 -> 205 [color = white, style = solid]
	69 -> 83 [color = white, style = solid]
	191 -> 200 [color = white, style = solid]
	262 -> 263 [color = black, style = solid, constraint = false]
	230 -> 231 [color = white, style = solid]
	71 -> 72 [color = white, style = solid]
	167 -> 168 [color = white, style = solid]
	154 -> 155 [color = white, style = solid]
	99 -> 244 [color = black, style = solid, constraint = false]
	104 -> 126 [color = black, style = solid, constraint = false]
	263 -> 264 [color = white, style = solid]
	116 -> 123 [color = white, style = solid]
	175 -> 187 [color = white, style = solid]
	49 -> 104 [color = black, style = solid, constraint = false]
	258 -> 259 [color = white, style = solid]
	197 -> 198 [color = white, style = solid]
	126 -> 128 [color = black, style = solid, constraint = false]
	124 -> 126 [color = white, style = solid]
	188 -> 191 [color = white, style = solid]
	156 -> 175 [color = white, style = solid]
	208 -> 247 [color = black, style = solid, constraint = false]
	165 -> 172 [color = white, style = solid]
	216 -> 219 [color = white, style = solid]
	236 -> 241 [color = white, style = solid]
	177 -> 180 [color = white, style = solid]
	247 -> 257 [color = white, style = solid]
	213 -> 215 [color = white, style = solid]
	44 -> 45 [color = white, style = solid]
	249 -> 251 [color = white, style = solid]
	49 -> 61 [color = white, style = solid]
	72 -> 74 [color = white, style = solid]
	187 -> 195 [color = white, style = solid]
	76 -> 167 [color = white, style = solid]
	173 -> 236 [color = black, style = solid, constraint = false]
	76 -> 136 [color = black, style = solid, constraint = false]
	161 -> 163 [color = white, style = solid]
	181 -> 186 [color = white, style = solid]
	152 -> 159 [color = white, style = solid]
	210 -> 243 [color = white, style = solid]
	193 -> 277 [color = black, style = solid, constraint = false]
	268 -> 271 [color = white, style = solid]
	207 -> 208 [color = white, style = solid]
	243 -> 244 [color = white, style = solid]
	277 -> 278 [color = white, style = solid]
	208 -> 210 [color = white, style = solid]
	168 -> 169 [color = white, style = solid]
	246 -> 247 [color = white, style = solid]
	259 -> 262 [color = white, style = solid]
	82 -> 88 [color = white, style = solid]
	105 -> 106 [color = white, style = solid]
	109 -> 110 [color = white, style = solid]
	129 -> 213 [color = black, style = solid, constraint = false]
	223 -> 227 [color = white, style = solid]
	104 -> 105 [color = white, style = solid]
	215 -> 216 [color = white, style = solid]
	278 -> 282 [color = white, style = solid]
	228 -> 230 [color = white, style = solid]
	129 -> 149 [color = white, style = solid]
	123 -> 124 [color = white, style = solid]
	65 -> 69 [color = white, style = solid]
	59 -> 76 [color = black, style = solid, constraint = false]
	243 -> 276 [color = black, style = solid, constraint = false]
	110 -> 111 [color = white, style = solid]
	231 -> 236 [color = white, style = solid]
	128 -> 129 [color = white, style = solid]
	195 -> 197 [color = white, style = solid]
	257 -> 258 [color = white, style = solid]
	180 -> 213 [color = white, style = solid]
	172 -> 177 [color = white, style = solid]
	97 -> 99 [color = white, style = solid]
	160 -> 161 [color = white, style = solid]
	159 -> 160 [color = white, style = solid]
	201 -> 204 [color = white, style = solid]
	200 -> 201 [color = white, style = solid]
	219 -> 223 [color = white, style = solid]
	74 -> 76 [color = white, style = solid]
	114 -> 128 [color = white, style = solid]
	144 -> 145 [color = white, style = solid]
	62 -> 65 [color = white, style = solid]
	241 -> 246 [color = white, style = solid]
	40 -> 69 [color = black, style = solid, constraint = false]
	271 -> 272 [color = white, style = solid]
	199 -> 212 [color = white, style = solid]
	165 -> 173 [color = black, style = solid, constraint = false]
	173 -> 181 [color = white, style = solid]
	169 -> 173 [color = white, style = solid]
	43 -> 44 [color = white, style = solid]
	83 -> 84 [color = white, style = solid]
	136 -> 143 [color = white, style = solid]
	205 -> 207 [color = white, style = solid]
	143 -> 144 [color = white, style = solid]
	163 -> 165 [color = white, style = solid]
	96 -> 97 [color = white, style = solid]
	148 -> 152 [color = white, style = solid]
	276 -> 277 [color = white, style = solid]
	262 -> 276 [color = white, style = solid]
	254 -> 263 [color = white, style = solid]
	84 -> 87 [color = white, style = solid]
	31 -> 32 [color = white, style = solid]
	251 -> 254 [color = white, style = solid]
	145 -> 148 [color = white, style = solid]
	134 -> 136 [color = white, style = solid]
	99 -> 193 [color = white, style = solid]
	61 -> 62 [color = white, style = solid]
	87 -> 95 [color = white, style = solid]
	45 -> 49 [color = white, style = solid]
	244 -> 249 [color = white, style = solid]
	106 -> 109 [color = white, style = solid]
	111 -> 114 [color = white, style = solid]
	186 -> 188 [color = white, style = solid]
	264 -> 268 [color = white, style = solid]
	149 -> 154 [color = white, style = solid]
	95 -> 116 [color = white, style = solid]
	198 -> 199 [color = white, style = solid]
	126 -> 134 [color = white, style = solid]
	227 -> 228 [color = white, style = solid]
	52 -> 82 [color = white, style = solid]
	155 -> 156 [color = white, style = solid]
	32 -> 52 [color = white, style = solid]
	88 -> 104 [color = white, style = solid]
	subgraph cluster7 {
		label = dev_thread
		color = blue
		59  [label = "317: IntrStatus = 1;"]
	}
	subgraph cluster4 {
		label = napi_thread
		color = blue
		96  [label = "328a: assume(napi_sem == 0);"]
		99  [label = "329a: assume(napi_scheduled == 0);"]
		97  [label = "328b: napi_sem = 1;"]
		193  [label = "332a: napi_sem = 0;"]
	}
	subgraph cluster1 {
		label = pci_thread
		color = blue
		129  [label = "399: assume(!(netif_running != 0));"]
		104  [label = "388: registered = 1;"]
		109  [label = "479b: assume(!(rc1 < 0));"]
		31  [label = "629a: assume(sysfs_lock == 0);"]
		88  [label = "477: hw_start = drv_hw_start;"]
		212  [label = "250a: dev_lock = 0;"]
		199  [label = "245: want_dev = 0;"]
		195  [label = "241: want_dev = 5;"]
		187  [label = "647a: sysfs_lock = 0;"]
		128  [label = "398: registered = 0;"]
		198  [label = "244: dev_lock = 5;"]
		114  [label = "238a: assume(probe1 == 0);"]
		149  [label = "638: want_sysfs = 5;"]
		52  [label = "452: sysfs_registered = 1;"]
		154  [label = "640: assume(sysfs_lock == 0);"]
		106  [label = "476: rc1 = ret2;"]
		32  [label = "629b: sysfs_lock = 1;"]
		111  [label = "237: probe1 = ret4;"]
		175  [label = "457: sysfs_registered = 0;"]
		197  [label = "243: assume(dev_lock == 0);"]
		155  [label = "641: sysfs_lock = 5;"]
		110  [label = "482: ret4 = 0;"]
		82  [label = "631a: sysfs_lock = 0;"]
		156  [label = "642: want_sysfs = 0;"]
		105  [label = "389: ret2 = 0;"]
	}
	subgraph cluster2 {
		label = network_thread
		color = blue
		246  [label = "591: assert(dev_on != 0);"]
		247  [label = "592: IntrMask = val;"]
		278  [label = "427b: napi_sem = 1;"]
		219  [label = "261a: assume(open1 == 0);"]
		177  [label = "279: ret1 = ret5;"]
		262  [label = "615: dev_on = 0;"]
		95  [label = "295a: rtnl_lock = 0;"]
		282  [label = "295a: rtnl_lock = 0;"]
		44  [label = "277a: assume(rtnl_lock == 0);"]
		145  [label = "496: rc2 = ret3;"]
		227  [label = "290a: assume(rtnl_lock == 0);"]
		143  [label = "406: irq_enabled = 1;"]
		65  [label = "261a: assume(open1 == 0);"]
		230  [label = "291a: assume(netif_running != 0);"]
		241  [label = "611a: val = 0;"]
		180  [label = "280a: assume(ret1 == 0);"]
		277  [label = "427a: assume(napi_sem == 0);"]
		213  [label = "281: netif_running = 1;"]
		159  [label = "603: dev_on = 1;"]
		136  [label = "494: IntrMask = 0;"]
		134  [label = "492a: assert(hw_start != 0);"]
		61  [label = "284a: rtnl_lock = 0;"]
		236  [label = "416: irq_enabled = 0;"]
		215  [label = "284a: rtnl_lock = 0;"]
		69  [label = "560: reset_task_ready = 1;"]
		123  [label = "277a: assume(rtnl_lock == 0);"]
		276  [label = "426: napi_enabled = 0;"]
		172  [label = "503: ret5 = 0;"]
		216  [label = "260: open1 = ret1;"]
		231  [label = "292: netif_running = 0;"]
		259  [label = "447a: irq_sem = 0;"]
		223  [label = "560: reset_task_ready = 1;"]
		258  [label = "446b: irq_sem = 1;"]
		124  [label = "277b: rtnl_lock = 1;"]
		83  [label = "290a: assume(rtnl_lock == 0);"]
		45  [label = "277b: rtnl_lock = 1;"]
		152  [label = "421: napi_enabled = 1;"]
		126  [label = "278a: assume(registered != 0);"]
		148  [label = "498b: assume(!(rc2 < 0));"]
		62  [label = "260: open1 = ret1;"]
		87  [label = "291b: assume(!(netif_running != 0));"]
		84  [label = "290b: rtnl_lock = 1;"]
		257  [label = "446a: assume(irq_sem == 0);"]
		161  [label = "604a: val = 1;"]
		160  [label = "605: intr_mask = 1;"]
		144  [label = "407: ret3 = 0;"]
		49  [label = "278b: assume(!(registered != 0));"]
		165  [label = "592: IntrMask = val;"]
		228  [label = "290b: rtnl_lock = 1;"]
		116  [label = "275: ret1 = 0;"]
		163  [label = "591: assert(dev_on != 0);"]
		43  [label = "275: ret1 = 0;"]
	}
	subgraph cluster5 {
		label = workqueue_thread
		color = blue
		40  [label = "340a: assume(reset_task_ready == 0);"]
	}
	subgraph cluster3 {
		label = irq_thread
		color = blue
		204  [label = "528a: assume(intr_mask != 0);"]
		201  [label = "598: IntrStatus = IntrStatus & (~val);"]
		173  [label = "306b: assume(!((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0));"]
		243  [label = "433a: assume(napi_enabled != 0);"]
		251  [label = "535: status1 = IntrStatus;"]
		249  [label = "532: handled2 = 1;"]
		76  [label = "306a: assume((((irq_enabled != 0) & (IntrStatus != 0)) & (IntrMask != 0)) == 0);"]
		244  [label = "434: napi_scheduled = 1;"]
		205  [label = "529a: val = 0;"]
		167  [label = "305a: assume(irq_sem == 0);"]
		186  [label = "524: handled2 = 0;"]
		191  [label = "534a: val = status1;"]
		168  [label = "305b: irq_sem = 1;"]
		254  [label = "534a: val = status1;"]
		169  [label = "310a: irq_sem = 0;"]
		200  [label = "597: assert(dev_on != 0);"]
		207  [label = "591: assert(dev_on != 0);"]
		210  [label = "530: intr_mask = 0;"]
		263  [label = "597: assert(dev_on != 0);", color = red]
		208  [label = "592: IntrMask = val;"]
		71  [label = "305a: assume(irq_sem == 0);"]
		188  [label = "526: status1 = IntrStatus;"]
		272  [label = "537: assume(!status1);"]
		74  [label = "310a: irq_sem = 0;"]
		268  [label = "528b: assume(!(intr_mask != 0));"]
		271  [label = "535: status1 = IntrStatus;"]
		181  [label = "307: assert(intr_mask != 0);"]
		72  [label = "305b: irq_sem = 1;"]
		264  [label = "598: IntrStatus = IntrStatus & (~val);"]
	}
}
 Deadlock-Round                                            : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 Deadlock-Round                                            : ioctl_thread() - 85: assertd(state != 3);                                  --> 117: mtx = 0;                                                      
 Deadlock-Round                                            : mmap_thread()  - 48: at{ assume(mtx == 0); ...}                            --> 55: assert(state != 3);                                            
 Deadlock-Round                                            : ioctl_thread() - 80: assume(mtx == 0);                                     --> 81: mtx = 1;                                                       
 Deadlock-Round                                            : rw_thread()    - 122: at{ assume(mtx == 0); ...}                           --> 131: mtx = 0;                                                      
 Deadlock-Round                                            : mmap_thread()  - 49: assume(mtx == 0);                                     --> 50: mtx = 1;                                                       
 Deadlock-Round                                            : mmap_thread()  - 48: at{ assume(mtx == 0); ...}                            --> 57: state = 3;                                                     
 Deadlock-Round                                            : ioctl_thread() - 115: state = old_state;                                   --> 117: mtx = 0;                                                      
 Deadlock-Round                                            : ioctl_thread() - 79: at{ assume(mtx == 0); ...}                            --> 117: mtx = 0;                                                      
 Deadlock-Round                                            : main()         - 136: mtx = 0;                                             --> 138: sem = 1;                                                      
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); --> 66: mtx = 0;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 30: assume(sem == 1);                                     --> 31: sem = 0;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : rw_thread()    - 123: assume(mtx == 0);                                    --> 124: mtx = 1;                                                      
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : ioctl_thread() - 80: assume(mtx == 0);                                     --> 81: mtx = 1;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : ioctl_thread() - 80: assume(mtx == 0);                                     --> 81: mtx = 1;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : ioctl_thread() - 80: assume(mtx == 0);                                     --> 81: mtx = 1;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 30: assume(sem == 1);                                     --> 31: sem = 0;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 49: assume(mtx == 0);                                     --> 50: mtx = 1;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : ioctl_thread() - 79: at{ assume(mtx == 0); ...}                            --> 91: if (nondet == 0) {...}                                         
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 48: at{ assume(mtx == 0); ...}                            --> 66: mtx = 0;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : ioctl_thread() - 79: at{ assume(mtx == 0); ...}                            --> 117: mtx = 0;                                                      
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : rw_thread()    - 122: at{ assume(mtx == 0); ...}                           --> 131: mtx = 0;                                                      
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : rw_thread()    - 123: assume(mtx == 0);                                    --> 124: mtx = 1;                                                      
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : rw_thread()    - 123: assume(mtx == 0);                                    --> 124: mtx = 1;                                                      
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 48: at{ assume(mtx == 0); ...}                            --> 66: mtx = 0;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 30: assume(sem == 1);                                     --> 31: sem = 0;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 30: assume(sem == 1);                                     --> 31: sem = 0;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : ioctl_thread() - 100: at{ assume(sem == 1); ...}                           --> 110: sem = 1;                                                      
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); --> 66: mtx = 0;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : rw_thread()    - 122: at{ assume(mtx == 0); ...}                           --> 131: mtx = 0;                                                      
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : rw_thread()    - 122: at{ assume(mtx == 0); ...}                           --> 131: mtx = 0;                                                      
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 48: at{ assume(mtx == 0); ...}                            --> 66: mtx = 0;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); --> 66: mtx = 0;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : ioctl_thread() - 100: at{ assume(sem == 1); ...}                           --> 110: sem = 1;                                                      
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : ioctl_thread() - 100: at{ assume(sem == 1); ...}                           --> 110: sem = 1;                                                      
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 48: at{ assume(mtx == 0); ...}                            --> 66: mtx = 0;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : rw_thread()    - 123: assume(mtx == 0);                                    --> 124: mtx = 1;                                                      
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : mmap_thread()  - 49: assume(mtx == 0);                                     --> 50: mtx = 1;                                                       
 43: assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); : ioctl_thread() - 100: at{ assume(sem == 1); ...}                           --> 110: sem = 1;                                                      
 55: assert(state != 3);                                   : ioctl_thread() - 79: at{ assume(mtx == 0); ...}                            --> 89: state = 3;                                                     
 55: assert(state != 3);                                   : mmap_thread()  - 55: assert(state != 3);                                   --> 66: mtx = 0;                                                       
 55: assert(state != 3);                                   : mmap_thread()  - 48: at{ assume(mtx == 0); ...}                            --> 55: assert(state != 3);                                            
 55: assert(state != 3);                                   : ioctl_thread() - 115: state = old_state;                                   --> 117: mtx = 0;                                                      
 55: assert(state != 3);                                   : ioctl_thread() - 80: assume(mtx == 0);                                     --> 81: mtx = 1;                                                       
 85: assertd(state != 3);                                  : ioctl_thread() - 79: at{ assume(mtx == 0); ...}                            --> 117: mtx = 0;                                                      
 85: assertd(state != 3);                                  : ioctl_thread() - 79: at{ assume(mtx == 0); ...}                            --> 85: assertd(state != 3);                                           
 85: assertd(state != 3);                                  : mmap_thread()  - 48: at{ assume(mtx == 0); ...}                            --> 57: state = 3;                                                     
 85: assertd(state != 3);                                  : mmap_thread()  - 63: state = 2;                                            --> 66: mtx = 0;                                                       
 85: assertd(state != 3);                                  : ioctl_thread() - 85: assertd(state != 3);                                  --> 117: mtx = 0;                                                      
 96: assert(((want_mtx == 0) | (sem == 1)) | (mtx == 0));  : ioctl_thread() - 80: assume(mtx == 0);                                     --> 81: mtx = 1;                                                       
 96: assert(((want_mtx == 0) | (sem == 1)) | (mtx == 0));  : ioctl_thread() - 80: assume(mtx == 0);                                     --> 81: mtx = 1;                                                       
 96: assert(((want_mtx == 0) | (sem == 1)) | (mtx == 0));  : ioctl_thread() - 79: at{ assume(mtx == 0); ...}                            --> 91: if (nondet == 0) {...}                                         
 96: assert(((want_mtx == 0) | (sem == 1)) | (mtx == 0));  : mmap_thread()  - 30: assume(sem == 1);                                     --> 31: sem = 0;                                                       
 96: assert(((want_mtx == 0) | (sem == 1)) | (mtx == 0));  : ioctl_thread() - 96: assert(((want_mtx == 0) | (sem == 1)) | (mtx == 0));  --> 110: sem = 1;                                                      
 96: assert(((want_mtx == 0) | (sem == 1)) | (mtx == 0));  : ioctl_thread() - 79: at{ assume(mtx == 0); ...}                            --> 91: if (nondet == 0) {...}                                         
 96: assert(((want_mtx == 0) | (sem == 1)) | (mtx == 0));  : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 96: assert(((want_mtx == 0) | (sem == 1)) | (mtx == 0));  : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 96: assert(((want_mtx == 0) | (sem == 1)) | (mtx == 0));  : mmap_thread()  - 48: at{ assume(mtx == 0); ...}                            --> 66: mtx = 0;                                                       
 96: assert(((want_mtx == 0) | (sem == 1)) | (mtx == 0));  : ioctl_thread() - 79: at{ assume(mtx == 0); ...}                            --> 91: if (nondet == 0) {...}                                         
 96: assert(((want_mtx == 0) | (sem == 1)) | (mtx == 0));  : mmap_thread()  - 48: at{ assume(mtx == 0); ...}                            --> 66: mtx = 0;                                                       
 107: assert(vm_consistent);                               : mmap_thread()  - 30: assume(sem == 1);                                     --> 31: sem = 0;                                                       
 107: assert(vm_consistent);                               : ioctl_thread() - 107: assert(vm_consistent);                               --> 110: sem = 1;                                                      
 107: assert(vm_consistent);                               : mmap_thread()  - 70: vm_consistent = 1;                                    --> 72: sem = 1;                                                       
 107: assert(vm_consistent);                               : ioctl_thread() - 100: at{ assume(sem == 1); ...}                           --> 107: assert(vm_consistent);                                        
 107: assert(vm_consistent);                               : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 107: assert(vm_consistent);                               : ioctl_thread() - 79: at{ assume(mtx == 0); ...}                            --> 117: mtx = 0;                                                      
 107: assert(vm_consistent);                               : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 37: vm_consistent = 0;                                             
 107: assert(vm_consistent);                               : ioctl_thread() - 79: at{ assume(mtx == 0); ...}                            --> 91: if (nondet == 0) {...}                                         
 107: assert(vm_consistent);                               : ioctl_thread() - 100: at{ assume(sem == 1); ...}                           --> 110: sem = 1;                                                      
 128: assert(state != 3);                                  : rw_thread()    - 122: at{ assume(mtx == 0); ...}                           --> 128: assert(state != 3);                                           
 128: assert(state != 3);                                  : ioctl_thread() - 115: state = old_state;                                   --> 117: mtx = 0;                                                      
 128: assert(state != 3);                                  : ioctl_thread() - 80: assume(mtx == 0);                                     --> 81: mtx = 1;                                                       
 128: assert(state != 3);                                  : mmap_thread()  - 49: assume(mtx == 0);                                     --> 50: mtx = 1;                                                       
 128: assert(state != 3);                                  : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 128: assert(state != 3);                                  : mmap_thread()  - 29: at{ assume(sem == 1); ...}                            --> 41: nr{ assertd(((want_sem == 0) | (mtx == 0)) | (sem != 0)); ...} 
 128: assert(state != 3);                                  : ioctl_thread() - 80: assume(mtx == 0);                                     --> 81: mtx = 1;                                                       
 128: assert(state != 3);                                  : rw_thread()    - 128: assert(state != 3);                                  --> 131: mtx = 0;                                                      
 128: assert(state != 3);                                  : rw_thread()    - 122: at{ assume(mtx == 0); ...}                           --> 131: mtx = 0;                                                      
 128: assert(state != 3);                                  : rw_thread()    - 122: at{ assume(mtx == 0); ...}                           --> 128: assert(state != 3);                                           
 128: assert(state != 3);                                  : ioctl_thread() - 79: at{ assume(mtx == 0); ...}                            --> 89: state = 3;                                                     
 128: assert(state != 3);                                  : rw_thread()    - 128: assert(state != 3);                                  --> 131: mtx = 0;                                                      
 128: assert(state != 3);                                  : rw_thread()    - 128: assert(state != 3);                                  --> 131: mtx = 0;                                                      
 128: assert(state != 3);                                  : mmap_thread()  - 48: at{ assume(mtx == 0); ...}                            --> 57: state = 3;                                                     
 128: assert(state != 3);                                  : mmap_thread()  - 48: at{ assume(mtx == 0); ...}                            --> 57: state = 3;                                                     
 128: assert(state != 3);                                  : mmap_thread()  - 48: at{ assume(mtx == 0); ...}                            --> 66: mtx = 0;                                                       
 128: assert(state != 3);                                  : mmap_thread()  - 63: state = 2;                                            --> 66: mtx = 0;                                                       
 128: assert(state != 3);                                  : rw_thread()    - 122: at{ assume(mtx == 0); ...}                           --> 131: mtx = 0;                                                      
